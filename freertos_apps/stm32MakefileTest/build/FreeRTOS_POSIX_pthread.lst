ARM GAS  /tmp/ccItVjv8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FreeRTOS_POSIX_pthread.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.FreeRTOS_errno,"aw",%nobits
  18              		.align	2
  21              	FreeRTOS_errno:
  22 0000 00000000 		.space	4
  23              		.section	.rodata.xDefaultThreadAttributes,"a"
  24              		.align	2
  27              	xDefaultThreadAttributes:
  28 0000 0002     		.short	512
  29 0002 0080     		.short	-32768
  30              		.section	.text.prvExitThread,"ax",%progbits
  31              		.align	1
  32              		.arch armv7e-m
  33              		.syntax unified
  34              		.thumb
  35              		.thumb_func
  36              		.fpu fpv4-sp-d16
  38              	prvExitThread:
  39              	.LFB4:
  40              		.file 1 "lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c"
   1:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*
   2:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * Amazon FreeRTOS POSIX V1.1.0
   3:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
   5:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * the Software without restriction, including without limitation the rights to
   8:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * subject to the following conditions:
  11:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  12:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * The above copyright notice and this permission notice shall be included in all
  13:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * copies or substantial portions of the Software.
  14:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  15:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  22:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * http://aws.amazon.com/freertos
ARM GAS  /tmp/ccItVjv8.s 			page 2


  23:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * http://www.FreeRTOS.org
  24:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  25:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  26:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /**
  27:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @file FreeRTOS_POSIX_pthread.c
  28:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @brief Implementation of thread functions in pthread.h
  29:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  30:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  31:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /* C standard library includes. */
  32:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #include <stddef.h>
  33:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #include <string.h>
  34:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  35:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /* FreeRTOS+POSIX includes. */
  36:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #include "FreeRTOS_POSIX.h"
  37:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #include "FreeRTOS_POSIX/errno.h"
  38:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #include "FreeRTOS_POSIX/pthread.h"
  39:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  40:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /**
  41:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @brief Thread attribute object.
  42:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  43:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** typedef struct pthread_attr_internal
  44:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
  45:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     uint16_t usStackSize;                /**< Stack size. */
  46:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     uint16_t usSchedPriorityDetachState; /**< Schedule priority 15 bits (LSB) Detach state: 1 bits 
  47:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** } pthread_attr_internal_t;
  48:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  49:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #define pthreadDETACH_STATE_MASK      0x8000
  50:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #define pthreadSCHED_PRIORITY_MASK    0x7FFF
  51:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #define pthreadDETACH_STATE_SHIFT     15
  52:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #define pthreadGET_SCHED_PRIORITY( var )    ( ( var ) & ( pthreadSCHED_PRIORITY_MASK ) )
  53:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** #define pthreadIS_JOINABLE( var )           ( ( ( var ) & ( pthreadDETACH_STATE_MASK ) ) == pthread
  54:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  55:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /**
  56:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @brief Thread object.
  57:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  58:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** typedef struct pthread_internal
  59:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
  60:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t xAttr;        /**< Thread attributes. */
  61:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     void * ( *pvStartRoutine )( void * ); /**< Application thread function. */
  62:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     void * xTaskArg;                      /**< Arguments for application thread function. */
  63:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     TaskHandle_t xTaskHandle;             /**< FreeRTOS task handle. */
  64:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     StaticSemaphore_t xJoinBarrier;       /**< Synchronizes the two callers of pthread_join. */
  65:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     StaticSemaphore_t xJoinMutex;         /**< Ensures that only one other thread may join this thr
  66:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     void * xReturn;                       /**< Return value of pvStartRoutine. */
  67:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** } pthread_internal_t;
  68:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  69:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /**
  70:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @brief Terminates the calling thread.
  71:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  72:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * For joinable threads, this function waits for pthread_join. Otherwise,
  73:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * it deletes the thread and frees up resources used by the thread.
  74:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  75:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @return This function does not return.
  76:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  77:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** static void prvExitThread( void );
  78:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  79:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /**
ARM GAS  /tmp/ccItVjv8.s 			page 3


  80:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @brief Wrapper function for the user's thread routine.
  81:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  82:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * This function is executed as a FreeRTOS task function.
  83:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @param[in] pxArg A pointer to a pthread_internal_t.
  84:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  *
  85:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @return nothing
  86:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  87:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** static void prvRunThread( void * pxArg );
  88:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  89:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /**
  90:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  * @brief Default pthread_attr_t.
  91:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****  */
  92:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** static const pthread_attr_internal_t xDefaultThreadAttributes =
  93:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
  94:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     .usStackSize                = PTHREAD_STACK_MIN,
  95:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     .usSchedPriorityDetachState = ( ( uint16_t ) tskIDLE_PRIORITY & pthreadSCHED_PRIORITY_MASK ) | 
  96:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** };
  97:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
  98:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
  99:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 100:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** static void prvExitThread( void )
 101:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
  41              		.loc 1 101 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 8
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 82B0     		sub	sp, sp, #8
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 16
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
 102:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = ( pthread_internal_t * ) pthread_self();
  56              		.loc 1 102 62
  57 0006 FFF7FEFF 		bl	pthread_self
  58 000a 7860     		str	r0, [r7, #4]
 103:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 104:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* If this thread is joinable, wait for a call to pthread_join. */
 105:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( pthreadIS_JOINABLE( pxThread->xAttr.usSchedPriorityDetachState ) )
  59              		.loc 1 105 9
  60 000c 7B68     		ldr	r3, [r7, #4]
  61 000e 5B88     		ldrh	r3, [r3, #2]
  62 0010 1BB2     		sxth	r3, r3
  63              		.loc 1 105 7
  64 0012 002B     		cmp	r3, #0
  65 0014 0BDA     		bge	.L2
 106:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 107:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( void ) xSemaphoreGive( ( SemaphoreHandle_t ) &pxThread->xJoinBarrier );
  66              		.loc 1 107 18
  67 0016 7B68     		ldr	r3, [r7, #4]
  68 0018 03F11000 		add	r0, r3, #16
  69 001c 0023     		movs	r3, #0
ARM GAS  /tmp/ccItVjv8.s 			page 4


  70 001e 0022     		movs	r2, #0
  71 0020 0021     		movs	r1, #0
  72 0022 FFF7FEFF 		bl	xQueueGenericSend
 108:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 109:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Suspend until the call to pthread_join. The caller of pthread_join
 110:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****          * will perform cleanup. */
 111:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskSuspend( NULL );
  73              		.loc 1 111 9
  74 0026 0020     		movs	r0, #0
  75 0028 FFF7FEFF 		bl	vTaskSuspend
 112:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 113:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     else
 114:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 115:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* For a detached thread, perform cleanup of thread object. */
 116:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vPortFree( pxThread );
 117:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskDelete( NULL );
 118:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 119:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
  76              		.loc 1 119 1
  77 002c 05E0     		b	.L4
  78              	.L2:
 116:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskDelete( NULL );
  79              		.loc 1 116 9
  80 002e 7868     		ldr	r0, [r7, #4]
  81 0030 FFF7FEFF 		bl	vPortFree
 117:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
  82              		.loc 1 117 9
  83 0034 0020     		movs	r0, #0
  84 0036 FFF7FEFF 		bl	vTaskDelete
  85              	.L4:
  86              		.loc 1 119 1
  87 003a 00BF     		nop
  88 003c 0837     		adds	r7, r7, #8
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 8
  91 003e BD46     		mov	sp, r7
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 13
  94              		@ sp needed
  95 0040 80BD     		pop	{r7, pc}
  96              		.cfi_endproc
  97              	.LFE4:
  99              		.section	.text.prvRunThread,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	prvRunThread:
 107              	.LFB5:
 120:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 121:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 122:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 123:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** static void prvRunThread( void * pxArg )
 124:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 108              		.loc 1 124 1
 109              		.cfi_startproc
ARM GAS  /tmp/ccItVjv8.s 			page 5


 110              		@ args = 0, pretend = 0, frame = 16
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              	.LCFI5:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 84B0     		sub	sp, sp, #16
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 24
 120 0004 00AF     		add	r7, sp, #0
 121              	.LCFI7:
 122              		.cfi_def_cfa_register 7
 123 0006 7860     		str	r0, [r7, #4]
 125:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = ( pthread_internal_t * ) pxArg;
 124              		.loc 1 125 26
 125 0008 7B68     		ldr	r3, [r7, #4]
 126 000a FB60     		str	r3, [r7, #12]
 126:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 127:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Run the thread routine. */
 128:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pxThread->xReturn = pxThread->pvStartRoutine( ( void * ) pxThread->xTaskArg );
 127              		.loc 1 128 33
 128 000c FB68     		ldr	r3, [r7, #12]
 129 000e 5B68     		ldr	r3, [r3, #4]
 130              		.loc 1 128 25
 131 0010 FA68     		ldr	r2, [r7, #12]
 132 0012 9268     		ldr	r2, [r2, #8]
 133 0014 1046     		mov	r0, r2
 134 0016 9847     		blx	r3
 135              	.LVL0:
 136 0018 0246     		mov	r2, r0
 137              		.loc 1 128 23
 138 001a FB68     		ldr	r3, [r7, #12]
 139 001c C3F8B020 		str	r2, [r3, #176]
 129:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 130:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Exit once finished. This function does not return. */
 131:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     prvExitThread();
 140              		.loc 1 131 5
 141 0020 FFF7FEFF 		bl	prvExitThread
 132:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 142              		.loc 1 132 1
 143 0024 00BF     		nop
 144 0026 1037     		adds	r7, r7, #16
 145              	.LCFI8:
 146              		.cfi_def_cfa_offset 8
 147 0028 BD46     		mov	sp, r7
 148              	.LCFI9:
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 002a 80BD     		pop	{r7, pc}
 152              		.cfi_endproc
 153              	.LFE5:
 155              		.section	.text.pthread_attr_destroy,"ax",%progbits
 156              		.align	1
 157              		.global	pthread_attr_destroy
 158              		.syntax unified
 159              		.thumb
ARM GAS  /tmp/ccItVjv8.s 			page 6


 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	pthread_attr_destroy:
 164              	.LFB6:
 133:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 134:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 135:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 136:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_destroy( pthread_attr_t * attr )
 137:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 165              		.loc 1 137 1
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0000 80B4     		push	{r7}
 171              	.LCFI10:
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 7, -4
 174 0002 83B0     		sub	sp, sp, #12
 175              	.LCFI11:
 176              		.cfi_def_cfa_offset 16
 177 0004 00AF     		add	r7, sp, #0
 178              	.LCFI12:
 179              		.cfi_def_cfa_register 7
 180 0006 7860     		str	r0, [r7, #4]
 138:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     ( void ) attr;
 139:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 140:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return 0;
 181              		.loc 1 140 12
 182 0008 0023     		movs	r3, #0
 141:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 183              		.loc 1 141 1
 184 000a 1846     		mov	r0, r3
 185 000c 0C37     		adds	r7, r7, #12
 186              	.LCFI13:
 187              		.cfi_def_cfa_offset 4
 188 000e BD46     		mov	sp, r7
 189              	.LCFI14:
 190              		.cfi_def_cfa_register 13
 191              		@ sp needed
 192 0010 5DF8047B 		ldr	r7, [sp], #4
 193              	.LCFI15:
 194              		.cfi_restore 7
 195              		.cfi_def_cfa_offset 0
 196 0014 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE6:
 200              		.section	.text.pthread_attr_getdetachstate,"ax",%progbits
 201              		.align	1
 202              		.global	pthread_attr_getdetachstate
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	pthread_attr_getdetachstate:
 209              	.LFB7:
 142:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
ARM GAS  /tmp/ccItVjv8.s 			page 7


 143:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 144:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 145:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_getdetachstate( const pthread_attr_t * attr,
 146:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                  int * detachstate )
 147:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 210              		.loc 1 147 1
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 16
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              	.LCFI16:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 0002 85B0     		sub	sp, sp, #20
 220              	.LCFI17:
 221              		.cfi_def_cfa_offset 24
 222 0004 00AF     		add	r7, sp, #0
 223              	.LCFI18:
 224              		.cfi_def_cfa_register 7
 225 0006 7860     		str	r0, [r7, #4]
 226 0008 3960     		str	r1, [r7]
 148:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t * pxAttr = ( pthread_attr_internal_t * ) ( attr );
 227              		.loc 1 148 31
 228 000a 7B68     		ldr	r3, [r7, #4]
 229 000c FB60     		str	r3, [r7, #12]
 149:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 150:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( pthreadIS_JOINABLE( pxAttr->usSchedPriorityDetachState ) )
 230              		.loc 1 150 9
 231 000e FB68     		ldr	r3, [r7, #12]
 232 0010 5B88     		ldrh	r3, [r3, #2]
 233 0012 1BB2     		sxth	r3, r3
 234              		.loc 1 150 7
 235 0014 002B     		cmp	r3, #0
 236 0016 03DA     		bge	.L9
 151:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 152:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         *detachstate = PTHREAD_CREATE_JOINABLE;
 237              		.loc 1 152 22
 238 0018 3B68     		ldr	r3, [r7]
 239 001a 0122     		movs	r2, #1
 240 001c 1A60     		str	r2, [r3]
 241 001e 02E0     		b	.L10
 242              	.L9:
 153:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 154:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     else
 155:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 156:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         *detachstate = PTHREAD_CREATE_DETACHED;
 243              		.loc 1 156 22
 244 0020 3B68     		ldr	r3, [r7]
 245 0022 0022     		movs	r2, #0
 246 0024 1A60     		str	r2, [r3]
 247              	.L10:
 157:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 158:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 159:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return 0;
 248              		.loc 1 159 12
 249 0026 0023     		movs	r3, #0
ARM GAS  /tmp/ccItVjv8.s 			page 8


 160:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 250              		.loc 1 160 1
 251 0028 1846     		mov	r0, r3
 252 002a 1437     		adds	r7, r7, #20
 253              	.LCFI19:
 254              		.cfi_def_cfa_offset 4
 255 002c BD46     		mov	sp, r7
 256              	.LCFI20:
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 002e 5DF8047B 		ldr	r7, [sp], #4
 260              	.LCFI21:
 261              		.cfi_restore 7
 262              		.cfi_def_cfa_offset 0
 263 0032 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE7:
 267              		.section	.text.pthread_attr_getschedparam,"ax",%progbits
 268              		.align	1
 269              		.global	pthread_attr_getschedparam
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	pthread_attr_getschedparam:
 276              	.LFB8:
 161:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 162:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 163:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 164:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_getschedparam( const pthread_attr_t * attr,
 165:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                 struct sched_param * param )
 166:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 277              		.loc 1 166 1
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 16
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282 0000 80B4     		push	{r7}
 283              	.LCFI22:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 7, -4
 286 0002 85B0     		sub	sp, sp, #20
 287              	.LCFI23:
 288              		.cfi_def_cfa_offset 24
 289 0004 00AF     		add	r7, sp, #0
 290              	.LCFI24:
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 293 0008 3960     		str	r1, [r7]
 167:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t * pxAttr = ( pthread_attr_internal_t * ) ( attr );
 294              		.loc 1 167 31
 295 000a 7B68     		ldr	r3, [r7, #4]
 296 000c FB60     		str	r3, [r7, #12]
 168:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 169:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     param->sched_priority = ( int ) ( pthreadGET_SCHED_PRIORITY( pxAttr->usSchedPriorityDetachState
 297              		.loc 1 169 39
 298 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccItVjv8.s 			page 9


 299 0010 5B88     		ldrh	r3, [r3, #2]
 300              		.loc 1 169 29
 301 0012 C3F30E02 		ubfx	r2, r3, #0, #15
 302              		.loc 1 169 27
 303 0016 3B68     		ldr	r3, [r7]
 304 0018 1A60     		str	r2, [r3]
 170:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 171:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return 0;
 305              		.loc 1 171 12
 306 001a 0023     		movs	r3, #0
 172:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 307              		.loc 1 172 1
 308 001c 1846     		mov	r0, r3
 309 001e 1437     		adds	r7, r7, #20
 310              	.LCFI25:
 311              		.cfi_def_cfa_offset 4
 312 0020 BD46     		mov	sp, r7
 313              	.LCFI26:
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 0022 5DF8047B 		ldr	r7, [sp], #4
 317              	.LCFI27:
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 0026 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE8:
 324              		.section	.text.pthread_attr_getstacksize,"ax",%progbits
 325              		.align	1
 326              		.global	pthread_attr_getstacksize
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	pthread_attr_getstacksize:
 333              	.LFB9:
 173:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 174:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 175:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 176:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_getstacksize( const pthread_attr_t * attr,
 177:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                size_t * stacksize )
 178:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 334              		.loc 1 178 1
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339 0000 80B4     		push	{r7}
 340              	.LCFI28:
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 85B0     		sub	sp, sp, #20
 344              	.LCFI29:
 345              		.cfi_def_cfa_offset 24
 346 0004 00AF     		add	r7, sp, #0
 347              	.LCFI30:
 348              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccItVjv8.s 			page 10


 349 0006 7860     		str	r0, [r7, #4]
 350 0008 3960     		str	r1, [r7]
 179:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t * pxAttr = ( pthread_attr_internal_t * ) ( attr );
 351              		.loc 1 179 31
 352 000a 7B68     		ldr	r3, [r7, #4]
 353 000c FB60     		str	r3, [r7, #12]
 180:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 181:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     *stacksize = ( size_t ) pxAttr->usStackSize;
 354              		.loc 1 181 35
 355 000e FB68     		ldr	r3, [r7, #12]
 356 0010 1B88     		ldrh	r3, [r3]
 357              		.loc 1 181 18
 358 0012 1A46     		mov	r2, r3
 359              		.loc 1 181 16
 360 0014 3B68     		ldr	r3, [r7]
 361 0016 1A60     		str	r2, [r3]
 182:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 183:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return 0;
 362              		.loc 1 183 12
 363 0018 0023     		movs	r3, #0
 184:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 364              		.loc 1 184 1
 365 001a 1846     		mov	r0, r3
 366 001c 1437     		adds	r7, r7, #20
 367              	.LCFI31:
 368              		.cfi_def_cfa_offset 4
 369 001e BD46     		mov	sp, r7
 370              	.LCFI32:
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0020 5DF8047B 		ldr	r7, [sp], #4
 374              	.LCFI33:
 375              		.cfi_restore 7
 376              		.cfi_def_cfa_offset 0
 377 0024 7047     		bx	lr
 378              		.cfi_endproc
 379              	.LFE9:
 381              		.section	.text.pthread_attr_init,"ax",%progbits
 382              		.align	1
 383              		.global	pthread_attr_init
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	pthread_attr_init:
 390              	.LFB10:
 185:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 186:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 187:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 188:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_init( pthread_attr_t * attr )
 189:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 391              		.loc 1 189 1
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 8
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccItVjv8.s 			page 11


 397              	.LCFI34:
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 83B0     		sub	sp, sp, #12
 401              	.LCFI35:
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              	.LCFI36:
 405              		.cfi_def_cfa_register 7
 406 0006 7860     		str	r0, [r7, #4]
 190:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Copy the default values into the new thread attributes object. */
 191:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     *( ( pthread_attr_internal_t * ) ( attr ) ) = xDefaultThreadAttributes;
 407              		.loc 1 191 49
 408 0008 7B68     		ldr	r3, [r7, #4]
 409 000a 054A     		ldr	r2, .L18
 410 000c 1068     		ldr	r0, [r2]
 411 000e 1860     		str	r0, [r3]	@ unaligned
 192:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 193:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return 0;
 412              		.loc 1 193 12
 413 0010 0023     		movs	r3, #0
 194:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 414              		.loc 1 194 1
 415 0012 1846     		mov	r0, r3
 416 0014 0C37     		adds	r7, r7, #12
 417              	.LCFI37:
 418              		.cfi_def_cfa_offset 4
 419 0016 BD46     		mov	sp, r7
 420              	.LCFI38:
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 0018 5DF8047B 		ldr	r7, [sp], #4
 424              	.LCFI39:
 425              		.cfi_restore 7
 426              		.cfi_def_cfa_offset 0
 427 001c 7047     		bx	lr
 428              	.L19:
 429 001e 00BF     		.align	2
 430              	.L18:
 431 0020 00000000 		.word	xDefaultThreadAttributes
 432              		.cfi_endproc
 433              	.LFE10:
 435              		.section	.text.pthread_attr_setdetachstate,"ax",%progbits
 436              		.align	1
 437              		.global	pthread_attr_setdetachstate
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	pthread_attr_setdetachstate:
 444              	.LFB11:
 195:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 196:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 197:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 198:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_setdetachstate( pthread_attr_t * attr,
 199:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                  int detachstate )
 200:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
ARM GAS  /tmp/ccItVjv8.s 			page 12


 445              		.loc 1 200 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450 0000 80B4     		push	{r7}
 451              	.LCFI40:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              	.LCFI41:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI42:
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
 461 0008 3960     		str	r1, [r7]
 201:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 462              		.loc 1 201 9
 463 000a 0023     		movs	r3, #0
 464 000c FB60     		str	r3, [r7, #12]
 202:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t * pxAttr = ( pthread_attr_internal_t * ) ( attr );
 465              		.loc 1 202 31
 466 000e 7B68     		ldr	r3, [r7, #4]
 467 0010 BB60     		str	r3, [r7, #8]
 203:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 204:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( ( detachstate != PTHREAD_CREATE_DETACHED ) && ( detachstate != PTHREAD_CREATE_JOINABLE ) )
 468              		.loc 1 204 7
 469 0012 3B68     		ldr	r3, [r7]
 470 0014 002B     		cmp	r3, #0
 471 0016 05D0     		beq	.L21
 472              		.loc 1 204 52 discriminator 1
 473 0018 3B68     		ldr	r3, [r7]
 474 001a 012B     		cmp	r3, #1
 475 001c 02D0     		beq	.L21
 205:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 206:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         iStatus = EINVAL;
 476              		.loc 1 206 17
 477 001e 1623     		movs	r3, #22
 478 0020 FB60     		str	r3, [r7, #12]
 479 0022 12E0     		b	.L22
 480              	.L21:
 207:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 208:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     else
 209:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 210:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* clear and then set msb bit to detachstate) */
 211:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxAttr->usSchedPriorityDetachState &= ~pthreadDETACH_STATE_MASK;
 481              		.loc 1 211 44
 482 0024 BB68     		ldr	r3, [r7, #8]
 483 0026 5B88     		ldrh	r3, [r3, #2]
 484 0028 C3F30E03 		ubfx	r3, r3, #0, #15
 485 002c 9AB2     		uxth	r2, r3
 486 002e BB68     		ldr	r3, [r7, #8]
 487 0030 5A80     		strh	r2, [r3, #2]	@ movhi
 212:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxAttr->usSchedPriorityDetachState |= ( ( uint16_t ) detachstate << pthreadDETACH_STATE_SHI
 488              		.loc 1 212 44
 489 0032 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccItVjv8.s 			page 13


 490 0034 5B88     		ldrh	r3, [r3, #2]
 491 0036 1AB2     		sxth	r2, r3
 492              		.loc 1 212 49
 493 0038 3B68     		ldr	r3, [r7]
 494 003a 9BB2     		uxth	r3, r3
 495              		.loc 1 212 74
 496 003c DB03     		lsls	r3, r3, #15
 497              		.loc 1 212 44
 498 003e 1BB2     		sxth	r3, r3
 499 0040 1343     		orrs	r3, r3, r2
 500 0042 1BB2     		sxth	r3, r3
 501 0044 9AB2     		uxth	r2, r3
 502 0046 BB68     		ldr	r3, [r7, #8]
 503 0048 5A80     		strh	r2, [r3, #2]	@ movhi
 504              	.L22:
 213:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 214:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 215:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 505              		.loc 1 215 12
 506 004a FB68     		ldr	r3, [r7, #12]
 216:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 507              		.loc 1 216 1
 508 004c 1846     		mov	r0, r3
 509 004e 1437     		adds	r7, r7, #20
 510              	.LCFI43:
 511              		.cfi_def_cfa_offset 4
 512 0050 BD46     		mov	sp, r7
 513              	.LCFI44:
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 0052 5DF8047B 		ldr	r7, [sp], #4
 517              	.LCFI45:
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0056 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE11:
 524              		.section	.text.pthread_attr_setschedparam,"ax",%progbits
 525              		.align	1
 526              		.global	pthread_attr_setschedparam
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	pthread_attr_setschedparam:
 533              	.LFB12:
 217:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 218:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 219:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 220:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_setschedparam( pthread_attr_t * attr,
 221:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                 const struct sched_param * param )
 222:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 534              		.loc 1 222 1
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 90B5     		push	{r4, r7, lr}
ARM GAS  /tmp/ccItVjv8.s 			page 14


 539              	.LCFI46:
 540              		.cfi_def_cfa_offset 12
 541              		.cfi_offset 4, -12
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 85B0     		sub	sp, sp, #20
 545              	.LCFI47:
 546              		.cfi_def_cfa_offset 32
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI48:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 551 0008 3960     		str	r1, [r7]
 223:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 552              		.loc 1 223 9
 553 000a 0023     		movs	r3, #0
 554 000c FB60     		str	r3, [r7, #12]
 224:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t * pxAttr = ( pthread_attr_internal_t * ) ( attr );
 555              		.loc 1 224 31
 556 000e 7B68     		ldr	r3, [r7, #4]
 557 0010 BB60     		str	r3, [r7, #8]
 225:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 226:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Check for NULL param. */
 227:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( param == NULL )
 558              		.loc 1 227 7
 559 0012 3B68     		ldr	r3, [r7]
 560 0014 002B     		cmp	r3, #0
 561 0016 01D1     		bne	.L25
 228:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 229:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         iStatus = EINVAL;
 562              		.loc 1 229 17
 563 0018 1623     		movs	r3, #22
 564 001a FB60     		str	r3, [r7, #12]
 565              	.L25:
 230:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 231:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 232:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Ensure that param.sched_priority is valid. */
 233:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( ( iStatus == 0 ) &&
 566              		.loc 1 233 7
 567 001c FB68     		ldr	r3, [r7, #12]
 568 001e 002B     		cmp	r3, #0
 569 0020 0DD1     		bne	.L26
 234:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( ( param->sched_priority > sched_get_priority_max( SCHED_OTHER ) ) ||
 570              		.loc 1 234 18 discriminator 1
 571 0022 3B68     		ldr	r3, [r7]
 572 0024 1C68     		ldr	r4, [r3]
 573              		.loc 1 234 37 discriminator 1
 574 0026 0020     		movs	r0, #0
 575 0028 FFF7FEFF 		bl	sched_get_priority_max
 576 002c 0346     		mov	r3, r0
 233:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( ( param->sched_priority > sched_get_priority_max( SCHED_OTHER ) ) ||
 577              		.loc 1 233 26 discriminator 1
 578 002e 9C42     		cmp	r4, r3
 579 0030 03DC     		bgt	.L27
 235:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****           ( param->sched_priority < 0 ) ) )
 580              		.loc 1 235 18
 581 0032 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccItVjv8.s 			page 15


 582 0034 1B68     		ldr	r3, [r3]
 234:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( ( param->sched_priority > sched_get_priority_max( SCHED_OTHER ) ) ||
 583              		.loc 1 234 77
 584 0036 002B     		cmp	r3, #0
 585 0038 01DA     		bge	.L26
 586              	.L27:
 236:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 237:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         iStatus = ENOTSUP;
 587              		.loc 1 237 17
 588 003a 8623     		movs	r3, #134
 589 003c FB60     		str	r3, [r7, #12]
 590              	.L26:
 238:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 239:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 240:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Set the sched_param. */
 241:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 591              		.loc 1 241 7
 592 003e FB68     		ldr	r3, [r7, #12]
 593 0040 002B     		cmp	r3, #0
 594 0042 11D1     		bne	.L28
 242:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 243:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* clear and then set  15 LSB to schedule priority) */
 244:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxAttr->usSchedPriorityDetachState &= ~pthreadSCHED_PRIORITY_MASK;
 595              		.loc 1 244 44
 596 0044 BB68     		ldr	r3, [r7, #8]
 597 0046 5B88     		ldrh	r3, [r3, #2]
 598 0048 23F4FF43 		bic	r3, r3, #32640
 599 004c 23F07F03 		bic	r3, r3, #127
 600 0050 9AB2     		uxth	r2, r3
 601 0052 BB68     		ldr	r3, [r7, #8]
 602 0054 5A80     		strh	r2, [r3, #2]	@ movhi
 245:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxAttr->usSchedPriorityDetachState |= ( ( uint16_t ) param->sched_priority );
 603              		.loc 1 245 44
 604 0056 BB68     		ldr	r3, [r7, #8]
 605 0058 5A88     		ldrh	r2, [r3, #2]
 606              		.loc 1 245 67
 607 005a 3B68     		ldr	r3, [r7]
 608 005c 1B68     		ldr	r3, [r3]
 609              		.loc 1 245 49
 610 005e 9BB2     		uxth	r3, r3
 611              		.loc 1 245 44
 612 0060 1343     		orrs	r3, r3, r2
 613 0062 9AB2     		uxth	r2, r3
 614 0064 BB68     		ldr	r3, [r7, #8]
 615 0066 5A80     		strh	r2, [r3, #2]	@ movhi
 616              	.L28:
 246:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 247:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 248:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 617              		.loc 1 248 12
 618 0068 FB68     		ldr	r3, [r7, #12]
 249:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 619              		.loc 1 249 1
 620 006a 1846     		mov	r0, r3
 621 006c 1437     		adds	r7, r7, #20
 622              	.LCFI49:
 623              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccItVjv8.s 			page 16


 624 006e BD46     		mov	sp, r7
 625              	.LCFI50:
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0070 90BD     		pop	{r4, r7, pc}
 629              		.cfi_endproc
 630              	.LFE12:
 632              		.section	.text.pthread_attr_setschedpolicy,"ax",%progbits
 633              		.align	1
 634              		.global	pthread_attr_setschedpolicy
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	pthread_attr_setschedpolicy:
 641              	.LFB13:
 250:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 251:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 252:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 253:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_setschedpolicy( pthread_attr_t * attr,
 254:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                  int policy )
 255:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 642              		.loc 1 255 1
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 8
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0000 80B4     		push	{r7}
 648              	.LCFI51:
 649              		.cfi_def_cfa_offset 4
 650              		.cfi_offset 7, -4
 651 0002 83B0     		sub	sp, sp, #12
 652              	.LCFI52:
 653              		.cfi_def_cfa_offset 16
 654 0004 00AF     		add	r7, sp, #0
 655              	.LCFI53:
 656              		.cfi_def_cfa_register 7
 657 0006 7860     		str	r0, [r7, #4]
 658 0008 3960     		str	r1, [r7]
 256:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Silence warnings about unused parameters. */
 257:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     ( void ) attr;
 258:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     ( void ) policy;
 259:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 260:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return 0;
 659              		.loc 1 260 12
 660 000a 0023     		movs	r3, #0
 261:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 661              		.loc 1 261 1
 662 000c 1846     		mov	r0, r3
 663 000e 0C37     		adds	r7, r7, #12
 664              	.LCFI54:
 665              		.cfi_def_cfa_offset 4
 666 0010 BD46     		mov	sp, r7
 667              	.LCFI55:
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 0012 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccItVjv8.s 			page 17


 671              	.LCFI56:
 672              		.cfi_restore 7
 673              		.cfi_def_cfa_offset 0
 674 0016 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE13:
 678              		.section	.text.pthread_attr_setstacksize,"ax",%progbits
 679              		.align	1
 680              		.global	pthread_attr_setstacksize
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	pthread_attr_setstacksize:
 687              	.LFB14:
 262:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 263:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 264:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 265:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_attr_setstacksize( pthread_attr_t * attr,
 266:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                                size_t stacksize )
 267:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 688              		.loc 1 267 1
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 16
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI57:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
 697 0002 85B0     		sub	sp, sp, #20
 698              	.LCFI58:
 699              		.cfi_def_cfa_offset 24
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI59:
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 704 0008 3960     		str	r1, [r7]
 268:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 705              		.loc 1 268 9
 706 000a 0023     		movs	r3, #0
 707 000c FB60     		str	r3, [r7, #12]
 269:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_attr_internal_t * pxAttr = ( pthread_attr_internal_t * ) ( attr );
 708              		.loc 1 269 31
 709 000e 7B68     		ldr	r3, [r7, #4]
 710 0010 BB60     		str	r3, [r7, #8]
 270:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 271:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( stacksize < PTHREAD_STACK_MIN )
 711              		.loc 1 271 7
 712 0012 3B68     		ldr	r3, [r7]
 713 0014 B3F5007F 		cmp	r3, #512
 714 0018 02D2     		bcs	.L33
 272:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 273:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         iStatus = EINVAL;
 715              		.loc 1 273 17
 716 001a 1623     		movs	r3, #22
 717 001c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccItVjv8.s 			page 18


 718 001e 03E0     		b	.L34
 719              	.L33:
 274:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 275:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     else
 276:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 277:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxAttr->usStackSize = ( uint16_t ) stacksize;
 720              		.loc 1 277 31
 721 0020 3B68     		ldr	r3, [r7]
 722 0022 9AB2     		uxth	r2, r3
 723              		.loc 1 277 29
 724 0024 BB68     		ldr	r3, [r7, #8]
 725 0026 1A80     		strh	r2, [r3]	@ movhi
 726              	.L34:
 278:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 279:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 280:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 727              		.loc 1 280 12
 728 0028 FB68     		ldr	r3, [r7, #12]
 281:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 729              		.loc 1 281 1
 730 002a 1846     		mov	r0, r3
 731 002c 1437     		adds	r7, r7, #20
 732              	.LCFI60:
 733              		.cfi_def_cfa_offset 4
 734 002e BD46     		mov	sp, r7
 735              	.LCFI61:
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 0030 5DF8047B 		ldr	r7, [sp], #4
 739              	.LCFI62:
 740              		.cfi_restore 7
 741              		.cfi_def_cfa_offset 0
 742 0034 7047     		bx	lr
 743              		.cfi_endproc
 744              	.LFE14:
 746              		.section	.rodata
 747              		.align	2
 748              	.LC0:
 749 0000 70746872 		.ascii	"pthread\000"
 749      65616400 
 750              		.section	.text.pthread_create,"ax",%progbits
 751              		.align	1
 752              		.global	pthread_create
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu fpv4-sp-d16
 758              	pthread_create:
 759              	.LFB15:
 282:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 283:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 284:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 285:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_create( pthread_t * thread,
 286:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                     const pthread_attr_t * attr,
 287:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                     void *( *startroutine )( void * ),
 288:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                     void * arg )
 289:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
ARM GAS  /tmp/ccItVjv8.s 			page 19


 760              		.loc 1 289 1
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 32
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              	.LCFI63:
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 8AB0     		sub	sp, sp, #40
 770              	.LCFI64:
 771              		.cfi_def_cfa_offset 48
 772 0004 02AF     		add	r7, sp, #8
 773              	.LCFI65:
 774              		.cfi_def_cfa 7, 40
 775 0006 F860     		str	r0, [r7, #12]
 776 0008 B960     		str	r1, [r7, #8]
 777 000a 7A60     		str	r2, [r7, #4]
 778 000c 3B60     		str	r3, [r7]
 290:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 779              		.loc 1 290 9
 780 000e 0023     		movs	r3, #0
 781 0010 FB61     		str	r3, [r7, #28]
 291:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = NULL;
 782              		.loc 1 291 26
 783 0012 0023     		movs	r3, #0
 784 0014 BB61     		str	r3, [r7, #24]
 292:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     struct sched_param xSchedParam = { .sched_priority = tskIDLE_PRIORITY };
 785              		.loc 1 292 24
 786 0016 0023     		movs	r3, #0
 787 0018 7B61     		str	r3, [r7, #20]
 293:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 294:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Allocate memory for new thread object. */
 295:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pxThread = ( pthread_internal_t * ) pvPortMalloc( sizeof( pthread_internal_t ) );
 788              		.loc 1 295 41
 789 001a B420     		movs	r0, #180
 790 001c FFF7FEFF 		bl	pvPortMalloc
 791 0020 B861     		str	r0, [r7, #24]
 296:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 297:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( pxThread == NULL )
 792              		.loc 1 297 7
 793 0022 BB69     		ldr	r3, [r7, #24]
 794 0024 002B     		cmp	r3, #0
 795 0026 01D1     		bne	.L37
 298:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 299:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* No memory. */
 300:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         iStatus = EAGAIN;
 796              		.loc 1 300 17
 797 0028 0B23     		movs	r3, #11
 798 002a FB61     		str	r3, [r7, #28]
 799              	.L37:
 301:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 302:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 303:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 800              		.loc 1 303 7
 801 002c FB69     		ldr	r3, [r7, #28]
 802 002e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccItVjv8.s 			page 20


 803 0030 2CD1     		bne	.L38
 304:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 305:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* No attributes given, use default attributes. */
 306:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         if( attr == NULL )
 804              		.loc 1 306 11
 805 0032 BB68     		ldr	r3, [r7, #8]
 806 0034 002B     		cmp	r3, #0
 807 0036 04D1     		bne	.L39
 307:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 308:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             pxThread->xAttr = xDefaultThreadAttributes;
 808              		.loc 1 308 29
 809 0038 BB69     		ldr	r3, [r7, #24]
 810 003a 2B4A     		ldr	r2, .L45
 811 003c 1268     		ldr	r2, [r2]
 812 003e 1A60     		str	r2, [r3]
 813 0040 03E0     		b	.L40
 814              	.L39:
 309:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 310:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Otherwise, use provided attributes. */
 311:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         else
 312:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 313:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             pxThread->xAttr = *( ( pthread_attr_internal_t * ) ( attr ) );
 815              		.loc 1 313 29
 816 0042 BB69     		ldr	r3, [r7, #24]
 817 0044 BA68     		ldr	r2, [r7, #8]
 818 0046 1068     		ldr	r0, [r2]	@ unaligned
 819 0048 1860     		str	r0, [r3]
 820              	.L40:
 314:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 315:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 316:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Get priority from attributes */
 317:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         xSchedParam.sched_priority = ( int ) pthreadGET_SCHED_PRIORITY( pxThread->xAttr.usSchedPrio
 821              		.loc 1 317 46
 822 004a BB69     		ldr	r3, [r7, #24]
 823 004c 5B88     		ldrh	r3, [r3, #2]
 824              		.loc 1 317 38
 825 004e C3F30E03 		ubfx	r3, r3, #0, #15
 826              		.loc 1 317 36
 827 0052 7B61     		str	r3, [r7, #20]
 318:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 319:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Set argument and start routine. */
 320:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxThread->xTaskArg = arg;
 828              		.loc 1 320 28
 829 0054 BB69     		ldr	r3, [r7, #24]
 830 0056 3A68     		ldr	r2, [r7]
 831 0058 9A60     		str	r2, [r3, #8]
 321:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         pxThread->pvStartRoutine = startroutine;
 832              		.loc 1 321 34
 833 005a BB69     		ldr	r3, [r7, #24]
 834 005c 7A68     		ldr	r2, [r7, #4]
 835 005e 5A60     		str	r2, [r3, #4]
 322:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 323:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* If this thread is joinable, create the synchronization mechanisms for
 324:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****          * pthread_join. */
 325:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 326:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         if( pthreadIS_JOINABLE( pxThread->xAttr.usSchedPriorityDetachState ) )
 836              		.loc 1 326 13
ARM GAS  /tmp/ccItVjv8.s 			page 21


 837 0060 BB69     		ldr	r3, [r7, #24]
 838 0062 5B88     		ldrh	r3, [r3, #2]
 839 0064 1BB2     		sxth	r3, r3
 840              		.loc 1 326 11
 841 0066 002B     		cmp	r3, #0
 842 0068 10DA     		bge	.L38
 327:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 328:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             /* These calls will not fail when their arguments aren't NULL. */
 329:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             ( void ) xSemaphoreCreateMutexStatic( &pxThread->xJoinMutex );
 843              		.loc 1 329 22
 844 006a BB69     		ldr	r3, [r7, #24]
 845 006c 6033     		adds	r3, r3, #96
 846 006e 1946     		mov	r1, r3
 847 0070 0120     		movs	r0, #1
 848 0072 FFF7FEFF 		bl	xQueueCreateMutexStatic
 330:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             ( void ) xSemaphoreCreateBinaryStatic( &pxThread->xJoinBarrier );
 849              		.loc 1 330 22
 850 0076 BB69     		ldr	r3, [r7, #24]
 851 0078 03F11002 		add	r2, r3, #16
 852 007c 0323     		movs	r3, #3
 853 007e 0093     		str	r3, [sp]
 854 0080 1346     		mov	r3, r2
 855 0082 0022     		movs	r2, #0
 856 0084 0021     		movs	r1, #0
 857 0086 0120     		movs	r0, #1
 858 0088 FFF7FEFF 		bl	xQueueGenericCreateStatic
 859              	.L38:
 331:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 332:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 333:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 334:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 860              		.loc 1 334 7
 861 008c FB69     		ldr	r3, [r7, #28]
 862 008e 002B     		cmp	r3, #0
 863 0090 25D1     		bne	.L41
 335:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 336:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Suspend all tasks to create a critical section. This ensures that
 337:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****          * the new thread doesn't exit before a tag is assigned. */
 338:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskSuspendAll();
 864              		.loc 1 338 9
 865 0092 FFF7FEFF 		bl	vTaskSuspendAll
 339:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 340:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Create the FreeRTOS task that will run the pthread. */
 341:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         if( xTaskCreate( prvRunThread,
 342:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          posixconfigPTHREAD_TASK_NAME,
 343:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          ( uint16_t ) ( pxThread->xAttr.usStackSize / sizeof( StackType_t ) ),
 866              		.loc 1 343 56
 867 0096 BB69     		ldr	r3, [r7, #24]
 868 0098 1B88     		ldrh	r3, [r3]
 341:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          posixconfigPTHREAD_TASK_NAME,
 869              		.loc 1 341 13
 870 009a 9B08     		lsrs	r3, r3, #2
 871 009c 9AB2     		uxth	r2, r3
 344:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          ( void * ) pxThread,
 345:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          xSchedParam.sched_priority,
 872              		.loc 1 345 37
 873 009e 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccItVjv8.s 			page 22


 341:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          posixconfigPTHREAD_TASK_NAME,
 874              		.loc 1 341 13
 875 00a0 1946     		mov	r1, r3
 876 00a2 BB69     		ldr	r3, [r7, #24]
 877 00a4 0C33     		adds	r3, r3, #12
 878 00a6 0193     		str	r3, [sp, #4]
 879 00a8 0091     		str	r1, [sp]
 880 00aa BB69     		ldr	r3, [r7, #24]
 881 00ac 0F49     		ldr	r1, .L45+4
 882 00ae 1048     		ldr	r0, .L45+8
 883 00b0 FFF7FEFF 		bl	xTaskCreate
 884 00b4 0346     		mov	r3, r0
 341:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          posixconfigPTHREAD_TASK_NAME,
 885              		.loc 1 341 11
 886 00b6 012B     		cmp	r3, #1
 887 00b8 05D0     		beq	.L42
 346:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                          &pxThread->xTaskHandle ) != pdPASS )
 347:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 348:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             /* Task creation failed, no memory. */
 349:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             vPortFree( pxThread );
 888              		.loc 1 349 13
 889 00ba B869     		ldr	r0, [r7, #24]
 890 00bc FFF7FEFF 		bl	vPortFree
 350:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             iStatus = EAGAIN;
 891              		.loc 1 350 21
 892 00c0 0B23     		movs	r3, #11
 893 00c2 FB61     		str	r3, [r7, #28]
 894 00c4 09E0     		b	.L43
 895              	.L42:
 896              	.LBB2:
 351:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 352:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         else
 353:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 354:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             /* Store the pointer to the thread object in the task tag. */
 355:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             vTaskSetApplicationTaskTag( pxThread->xTaskHandle, ( TaskHookFunction_t ) pxThread );
 897              		.loc 1 355 13
 898 00c6 BB69     		ldr	r3, [r7, #24]
 899 00c8 DB68     		ldr	r3, [r3, #12]
 900 00ca BA69     		ldr	r2, [r7, #24]
 901 00cc 1146     		mov	r1, r2
 902 00ce 1846     		mov	r0, r3
 903 00d0 FFF7FEFF 		bl	vTaskSetApplicationTaskTag
 356:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 357:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             /* Set the thread object for the user. */
 358:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             *thread = ( pthread_t ) pxThread;
 904              		.loc 1 358 21
 905 00d4 FB68     		ldr	r3, [r7, #12]
 906 00d6 BA69     		ldr	r2, [r7, #24]
 907 00d8 1A60     		str	r2, [r3]
 908              	.L43:
 909              	.LBE2:
 359:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 360:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 361:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* End the critical section. */
 362:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         xTaskResumeAll();
 910              		.loc 1 362 9
 911 00da FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  /tmp/ccItVjv8.s 			page 23


 912              	.L41:
 363:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 364:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 365:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 913              		.loc 1 365 12
 914 00de FB69     		ldr	r3, [r7, #28]
 366:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 915              		.loc 1 366 1
 916 00e0 1846     		mov	r0, r3
 917 00e2 2037     		adds	r7, r7, #32
 918              	.LCFI66:
 919              		.cfi_def_cfa_offset 8
 920 00e4 BD46     		mov	sp, r7
 921              	.LCFI67:
 922              		.cfi_def_cfa_register 13
 923              		@ sp needed
 924 00e6 80BD     		pop	{r7, pc}
 925              	.L46:
 926              		.align	2
 927              	.L45:
 928 00e8 00000000 		.word	xDefaultThreadAttributes
 929 00ec 00000000 		.word	.LC0
 930 00f0 00000000 		.word	prvRunThread
 931              		.cfi_endproc
 932              	.LFE15:
 934              		.section	.text.pthread_getschedparam,"ax",%progbits
 935              		.align	1
 936              		.global	pthread_getschedparam
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu fpv4-sp-d16
 942              	pthread_getschedparam:
 943              	.LFB16:
 367:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 368:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 369:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 370:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_getschedparam( pthread_t thread,
 371:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                            int * policy,
 372:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                            struct sched_param * param )
 373:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 944              		.loc 1 373 1
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 24
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 949 0000 80B4     		push	{r7}
 950              	.LCFI68:
 951              		.cfi_def_cfa_offset 4
 952              		.cfi_offset 7, -4
 953 0002 87B0     		sub	sp, sp, #28
 954              	.LCFI69:
 955              		.cfi_def_cfa_offset 32
 956 0004 00AF     		add	r7, sp, #0
 957              	.LCFI70:
 958              		.cfi_def_cfa_register 7
 959 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccItVjv8.s 			page 24


 960 0008 B960     		str	r1, [r7, #8]
 961 000a 7A60     		str	r2, [r7, #4]
 374:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 962              		.loc 1 374 9
 963 000c 0023     		movs	r3, #0
 964 000e 7B61     		str	r3, [r7, #20]
 375:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = ( pthread_internal_t * ) thread;
 965              		.loc 1 375 26
 966 0010 FB68     		ldr	r3, [r7, #12]
 967 0012 3B61     		str	r3, [r7, #16]
 376:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 377:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     *policy = SCHED_OTHER;
 968              		.loc 1 377 13
 969 0014 BB68     		ldr	r3, [r7, #8]
 970 0016 0022     		movs	r2, #0
 971 0018 1A60     		str	r2, [r3]
 378:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     param->sched_priority = ( int ) pthreadGET_SCHED_PRIORITY( pxThread->xAttr.usSchedPriorityDetac
 972              		.loc 1 378 37
 973 001a 3B69     		ldr	r3, [r7, #16]
 974 001c 5B88     		ldrh	r3, [r3, #2]
 975              		.loc 1 378 29
 976 001e C3F30E02 		ubfx	r2, r3, #0, #15
 977              		.loc 1 378 27
 978 0022 7B68     		ldr	r3, [r7, #4]
 979 0024 1A60     		str	r2, [r3]
 379:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 380:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 980              		.loc 1 380 12
 981 0026 7B69     		ldr	r3, [r7, #20]
 381:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 982              		.loc 1 381 1
 983 0028 1846     		mov	r0, r3
 984 002a 1C37     		adds	r7, r7, #28
 985              	.LCFI71:
 986              		.cfi_def_cfa_offset 4
 987 002c BD46     		mov	sp, r7
 988              	.LCFI72:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 002e 5DF8047B 		ldr	r7, [sp], #4
 992              	.LCFI73:
 993              		.cfi_restore 7
 994              		.cfi_def_cfa_offset 0
 995 0032 7047     		bx	lr
 996              		.cfi_endproc
 997              	.LFE16:
 999              		.section	.text.pthread_equal,"ax",%progbits
 1000              		.align	1
 1001              		.global	pthread_equal
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv4-sp-d16
 1007              	pthread_equal:
 1008              	.LFB17:
 382:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 383:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccItVjv8.s 			page 25


 384:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 385:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_equal( pthread_t t1,
 386:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                    pthread_t t2 )
 387:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 1009              		.loc 1 387 1
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014 0000 80B4     		push	{r7}
 1015              	.LCFI74:
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 7, -4
 1018 0002 83B0     		sub	sp, sp, #12
 1019              	.LCFI75:
 1020              		.cfi_def_cfa_offset 16
 1021 0004 00AF     		add	r7, sp, #0
 1022              	.LCFI76:
 1023              		.cfi_def_cfa_register 7
 1024 0006 7860     		str	r0, [r7, #4]
 1025 0008 3960     		str	r1, [r7]
 388:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return t1 == t2;
 1026              		.loc 1 388 15
 1027 000a 7A68     		ldr	r2, [r7, #4]
 1028 000c 3B68     		ldr	r3, [r7]
 1029 000e 9A42     		cmp	r2, r3
 1030 0010 0CBF     		ite	eq
 1031 0012 0123     		moveq	r3, #1
 1032 0014 0023     		movne	r3, #0
 1033 0016 DBB2     		uxtb	r3, r3
 389:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 1034              		.loc 1 389 1
 1035 0018 1846     		mov	r0, r3
 1036 001a 0C37     		adds	r7, r7, #12
 1037              	.LCFI77:
 1038              		.cfi_def_cfa_offset 4
 1039 001c BD46     		mov	sp, r7
 1040              	.LCFI78:
 1041              		.cfi_def_cfa_register 13
 1042              		@ sp needed
 1043 001e 5DF8047B 		ldr	r7, [sp], #4
 1044              	.LCFI79:
 1045              		.cfi_restore 7
 1046              		.cfi_def_cfa_offset 0
 1047 0022 7047     		bx	lr
 1048              		.cfi_endproc
 1049              	.LFE17:
 1051              		.section	.text.pthread_exit,"ax",%progbits
 1052              		.align	1
 1053              		.global	pthread_exit
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv4-sp-d16
 1059              	pthread_exit:
 1060              	.LFB18:
 390:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
ARM GAS  /tmp/ccItVjv8.s 			page 26


 391:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 392:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 393:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** void pthread_exit( void * value_ptr )
 394:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 1061              		.loc 1 394 1
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 16
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065 0000 80B5     		push	{r7, lr}
 1066              	.LCFI80:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 7, -8
 1069              		.cfi_offset 14, -4
 1070 0002 84B0     		sub	sp, sp, #16
 1071              	.LCFI81:
 1072              		.cfi_def_cfa_offset 24
 1073 0004 00AF     		add	r7, sp, #0
 1074              	.LCFI82:
 1075              		.cfi_def_cfa_register 7
 1076 0006 7860     		str	r0, [r7, #4]
 395:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = ( pthread_internal_t * ) pthread_self();
 1077              		.loc 1 395 62
 1078 0008 FFF7FEFF 		bl	pthread_self
 1079 000c F860     		str	r0, [r7, #12]
 396:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 397:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Set the return value. */
 398:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pxThread->xReturn = value_ptr;
 1080              		.loc 1 398 23
 1081 000e FB68     		ldr	r3, [r7, #12]
 1082 0010 7A68     		ldr	r2, [r7, #4]
 1083 0012 C3F8B020 		str	r2, [r3, #176]
 399:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 400:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Exit this thread. */
 401:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     prvExitThread();
 1084              		.loc 1 401 5
 1085 0016 FFF7FEFF 		bl	prvExitThread
 402:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 1086              		.loc 1 402 1
 1087 001a 00BF     		nop
 1088 001c 1037     		adds	r7, r7, #16
 1089              	.LCFI83:
 1090              		.cfi_def_cfa_offset 8
 1091 001e BD46     		mov	sp, r7
 1092              	.LCFI84:
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 0020 80BD     		pop	{r7, pc}
 1096              		.cfi_endproc
 1097              	.LFE18:
 1099              		.section	.text.pthread_join,"ax",%progbits
 1100              		.align	1
 1101              		.global	pthread_join
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1105              		.fpu fpv4-sp-d16
 1107              	pthread_join:
ARM GAS  /tmp/ccItVjv8.s 			page 27


 1108              	.LFB19:
 403:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 404:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 405:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 406:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_join( pthread_t pthread,
 407:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                   void ** retval )
 408:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 1109              		.loc 1 408 1
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 16
 1112              		@ frame_needed = 1, uses_anonymous_args = 0
 1113 0000 80B5     		push	{r7, lr}
 1114              	.LCFI85:
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 84B0     		sub	sp, sp, #16
 1119              	.LCFI86:
 1120              		.cfi_def_cfa_offset 24
 1121 0004 00AF     		add	r7, sp, #0
 1122              	.LCFI87:
 1123              		.cfi_def_cfa_register 7
 1124 0006 7860     		str	r0, [r7, #4]
 1125 0008 3960     		str	r1, [r7]
 409:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 1126              		.loc 1 409 9
 1127 000a 0023     		movs	r3, #0
 1128 000c FB60     		str	r3, [r7, #12]
 410:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = ( pthread_internal_t * ) pthread;
 1129              		.loc 1 410 26
 1130 000e 7B68     		ldr	r3, [r7, #4]
 1131 0010 BB60     		str	r3, [r7, #8]
 411:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 412:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Make sure pthread is joinable. Otherwise, this function would block
 413:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****      * forever waiting for an unjoinable thread. */
 414:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( !pthreadIS_JOINABLE( pxThread->xAttr.usSchedPriorityDetachState ) )
 1132              		.loc 1 414 10
 1133 0012 BB68     		ldr	r3, [r7, #8]
 1134 0014 5B88     		ldrh	r3, [r3, #2]
 1135              		.loc 1 414 9
 1136 0016 1BB2     		sxth	r3, r3
 1137              		.loc 1 414 7
 1138 0018 002B     		cmp	r3, #0
 1139 001a 01DB     		blt	.L53
 415:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 416:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         iStatus = EDEADLK;
 1140              		.loc 1 416 17
 1141 001c 2D23     		movs	r3, #45
 1142 001e FB60     		str	r3, [r7, #12]
 1143              	.L53:
 417:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 418:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 419:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Only one thread may attempt to join another. Lock the join mutex
 420:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****      * to prevent other threads from calling pthread_join on the same thread. */
 421:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 1144              		.loc 1 421 7
 1145 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccItVjv8.s 			page 28


 1146 0022 002B     		cmp	r3, #0
 1147 0024 0AD1     		bne	.L54
 422:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 423:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         if( xSemaphoreTake( ( SemaphoreHandle_t ) &pxThread->xJoinMutex, 0 ) != pdPASS )
 1148              		.loc 1 423 13
 1149 0026 BB68     		ldr	r3, [r7, #8]
 1150 0028 6033     		adds	r3, r3, #96
 1151 002a 0021     		movs	r1, #0
 1152 002c 1846     		mov	r0, r3
 1153 002e FFF7FEFF 		bl	xQueueSemaphoreTake
 1154 0032 0346     		mov	r3, r0
 1155              		.loc 1 423 11
 1156 0034 012B     		cmp	r3, #1
 1157 0036 01D0     		beq	.L54
 424:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 425:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             /* Another thread has already joined the requested thread, which would
 426:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****              * cause this thread to wait forever. */
 427:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             iStatus = EDEADLK;
 1158              		.loc 1 427 21
 1159 0038 2D23     		movs	r3, #45
 1160 003a FB60     		str	r3, [r7, #12]
 1161              	.L54:
 428:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 429:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 430:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 431:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Attempting to join the calling thread would cause a deadlock. */
 432:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 1162              		.loc 1 432 7
 1163 003c FB68     		ldr	r3, [r7, #12]
 1164 003e 002B     		cmp	r3, #0
 1165 0040 0BD1     		bne	.L55
 433:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 434:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         if( pthread_equal( pthread_self(), pthread ) != 0 )
 1166              		.loc 1 434 13
 1167 0042 FFF7FEFF 		bl	pthread_self
 1168 0046 0346     		mov	r3, r0
 1169 0048 7968     		ldr	r1, [r7, #4]
 1170 004a 1846     		mov	r0, r3
 1171 004c FFF7FEFF 		bl	pthread_equal
 1172 0050 0346     		mov	r3, r0
 1173              		.loc 1 434 11
 1174 0052 002B     		cmp	r3, #0
 1175 0054 01D0     		beq	.L55
 435:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 436:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             iStatus = EDEADLK;
 1176              		.loc 1 436 21
 1177 0056 2D23     		movs	r3, #45
 1178 0058 FB60     		str	r3, [r7, #12]
 1179              	.L55:
 437:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 438:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 439:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 440:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 1180              		.loc 1 440 7
 1181 005a FB68     		ldr	r3, [r7, #12]
 1182 005c 002B     		cmp	r3, #0
 1183 005e 34D1     		bne	.L56
ARM GAS  /tmp/ccItVjv8.s 			page 29


 441:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 442:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Wait for the joining thread to finish. Because this call waits forever,
 443:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****          * it should never fail. */
 444:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( void ) xSemaphoreTake( ( SemaphoreHandle_t ) &pxThread->xJoinBarrier, portMAX_DELAY );
 1184              		.loc 1 444 18
 1185 0060 BB68     		ldr	r3, [r7, #8]
 1186 0062 1033     		adds	r3, r3, #16
 1187 0064 4FF0FF31 		mov	r1, #-1
 1188 0068 1846     		mov	r0, r3
 1189 006a FFF7FEFF 		bl	xQueueSemaphoreTake
 445:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 446:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Create a critical section to clean up the joined thread. */
 447:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskSuspendAll();
 1190              		.loc 1 447 9
 1191 006e FFF7FEFF 		bl	vTaskSuspendAll
 448:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 449:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Release xJoinBarrier and delete it. */
 450:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( void ) xSemaphoreGive( ( SemaphoreHandle_t ) &pxThread->xJoinBarrier );
 1192              		.loc 1 450 18
 1193 0072 BB68     		ldr	r3, [r7, #8]
 1194 0074 03F11000 		add	r0, r3, #16
 1195 0078 0023     		movs	r3, #0
 1196 007a 0022     		movs	r2, #0
 1197 007c 0021     		movs	r1, #0
 1198 007e FFF7FEFF 		bl	xQueueGenericSend
 451:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vSemaphoreDelete( ( SemaphoreHandle_t ) &pxThread->xJoinBarrier );
 1199              		.loc 1 451 9
 1200 0082 BB68     		ldr	r3, [r7, #8]
 1201 0084 1033     		adds	r3, r3, #16
 1202 0086 1846     		mov	r0, r3
 1203 0088 FFF7FEFF 		bl	vQueueDelete
 452:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 453:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Release xJoinMutex and delete it. */
 454:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         ( void ) xSemaphoreGive( ( SemaphoreHandle_t ) &pxThread->xJoinMutex );
 1204              		.loc 1 454 18
 1205 008c BB68     		ldr	r3, [r7, #8]
 1206 008e 03F16000 		add	r0, r3, #96
 1207 0092 0023     		movs	r3, #0
 1208 0094 0022     		movs	r2, #0
 1209 0096 0021     		movs	r1, #0
 1210 0098 FFF7FEFF 		bl	xQueueGenericSend
 455:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vSemaphoreDelete( ( SemaphoreHandle_t ) &pxThread->xJoinMutex );
 1211              		.loc 1 455 9
 1212 009c BB68     		ldr	r3, [r7, #8]
 1213 009e 6033     		adds	r3, r3, #96
 1214 00a0 1846     		mov	r0, r3
 1215 00a2 FFF7FEFF 		bl	vQueueDelete
 456:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 457:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Delete the FreeRTOS task that ran the thread. */
 458:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskDelete( pxThread->xTaskHandle );
 1216              		.loc 1 458 9
 1217 00a6 BB68     		ldr	r3, [r7, #8]
 1218 00a8 DB68     		ldr	r3, [r3, #12]
 1219 00aa 1846     		mov	r0, r3
 1220 00ac FFF7FEFF 		bl	vTaskDelete
 459:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 460:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Set the return value. */
ARM GAS  /tmp/ccItVjv8.s 			page 30


 461:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         if( retval != NULL )
 1221              		.loc 1 461 11
 1222 00b0 3B68     		ldr	r3, [r7]
 1223 00b2 002B     		cmp	r3, #0
 1224 00b4 04D0     		beq	.L57
 462:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         {
 463:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****             *retval = pxThread->xReturn;
 1225              		.loc 1 463 31
 1226 00b6 BB68     		ldr	r3, [r7, #8]
 1227 00b8 D3F8B020 		ldr	r2, [r3, #176]
 1228              		.loc 1 463 21
 1229 00bc 3B68     		ldr	r3, [r7]
 1230 00be 1A60     		str	r2, [r3]
 1231              	.L57:
 464:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         }
 465:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 466:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Free the thread object. */
 467:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vPortFree( pxThread );
 1232              		.loc 1 467 9
 1233 00c0 B868     		ldr	r0, [r7, #8]
 1234 00c2 FFF7FEFF 		bl	vPortFree
 468:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 469:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* End the critical section. */
 470:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         xTaskResumeAll();
 1235              		.loc 1 470 9
 1236 00c6 FFF7FEFF 		bl	xTaskResumeAll
 1237              	.L56:
 471:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 472:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 473:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 1238              		.loc 1 473 12
 1239 00ca FB68     		ldr	r3, [r7, #12]
 474:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 1240              		.loc 1 474 1
 1241 00cc 1846     		mov	r0, r3
 1242 00ce 1037     		adds	r7, r7, #16
 1243              	.LCFI88:
 1244              		.cfi_def_cfa_offset 8
 1245 00d0 BD46     		mov	sp, r7
 1246              	.LCFI89:
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 00d2 80BD     		pop	{r7, pc}
 1250              		.cfi_endproc
 1251              	.LFE19:
 1253              		.section	.text.pthread_self,"ax",%progbits
 1254              		.align	1
 1255              		.global	pthread_self
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu fpv4-sp-d16
 1261              	pthread_self:
 1262              	.LFB20:
 475:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 476:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 477:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
ARM GAS  /tmp/ccItVjv8.s 			page 31


 478:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** pthread_t pthread_self( void )
 479:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 1263              		.loc 1 479 1
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267 0000 80B5     		push	{r7, lr}
 1268              	.LCFI90:
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 00AF     		add	r7, sp, #0
 1273              	.LCFI91:
 1274              		.cfi_def_cfa_register 7
 480:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Return a reference to this pthread object, which is stored in the
 481:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****      * FreeRTOS task tag. */
 482:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return ( pthread_t ) xTaskGetApplicationTaskTag( NULL );
 1275              		.loc 1 482 26
 1276 0004 0020     		movs	r0, #0
 1277 0006 FFF7FEFF 		bl	xTaskGetApplicationTaskTag
 1278 000a 0346     		mov	r3, r0
 483:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 1279              		.loc 1 483 1
 1280 000c 1846     		mov	r0, r3
 1281 000e 80BD     		pop	{r7, pc}
 1282              		.cfi_endproc
 1283              	.LFE20:
 1285              		.section	.text.pthread_setschedparam,"ax",%progbits
 1286              		.align	1
 1287              		.global	pthread_setschedparam
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1291              		.fpu fpv4-sp-d16
 1293              	pthread_setschedparam:
 1294              	.LFB21:
 484:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 485:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** /*-----------------------------------------------------------*/
 486:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 487:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** int pthread_setschedparam( pthread_t thread,
 488:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                            int policy,
 489:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****                            const struct sched_param * param )
 490:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** {
 1295              		.loc 1 490 1
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 24
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              	.LCFI92:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 86B0     		sub	sp, sp, #24
 1305              	.LCFI93:
 1306              		.cfi_def_cfa_offset 32
 1307 0004 00AF     		add	r7, sp, #0
 1308              	.LCFI94:
ARM GAS  /tmp/ccItVjv8.s 			page 32


 1309              		.cfi_def_cfa_register 7
 1310 0006 F860     		str	r0, [r7, #12]
 1311 0008 B960     		str	r1, [r7, #8]
 1312 000a 7A60     		str	r2, [r7, #4]
 491:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     int iStatus = 0;
 1313              		.loc 1 491 9
 1314 000c 0023     		movs	r3, #0
 1315 000e 7B61     		str	r3, [r7, #20]
 492:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 493:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     pthread_internal_t * pxThread = ( pthread_internal_t * ) thread;
 1316              		.loc 1 493 26
 1317 0010 FB68     		ldr	r3, [r7, #12]
 1318 0012 3B61     		str	r3, [r7, #16]
 494:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 495:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Silence compiler warnings about unused parameters. */
 496:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     ( void ) policy;
 497:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 498:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     /* Copy the given sched_param. */
 499:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     iStatus = pthread_attr_setschedparam( ( pthread_attr_t * ) &pxThread->xAttr, param );
 1319              		.loc 1 499 64
 1320 0014 3B69     		ldr	r3, [r7, #16]
 1321              		.loc 1 499 15
 1322 0016 7968     		ldr	r1, [r7, #4]
 1323 0018 1846     		mov	r0, r3
 1324 001a FFF7FEFF 		bl	pthread_attr_setschedparam
 1325 001e 7861     		str	r0, [r7, #20]
 500:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 501:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     if( iStatus == 0 )
 1326              		.loc 1 501 7
 1327 0020 7B69     		ldr	r3, [r7, #20]
 1328 0022 002B     		cmp	r3, #0
 1329 0024 07D1     		bne	.L62
 502:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     {
 503:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         /* Change the priority of the FreeRTOS task. */
 504:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****         vTaskPrioritySet( pxThread->xTaskHandle, param->sched_priority );
 1330              		.loc 1 504 9
 1331 0026 3B69     		ldr	r3, [r7, #16]
 1332 0028 DA68     		ldr	r2, [r3, #12]
 1333              		.loc 1 504 55
 1334 002a 7B68     		ldr	r3, [r7, #4]
 1335 002c 1B68     		ldr	r3, [r3]
 1336              		.loc 1 504 9
 1337 002e 1946     		mov	r1, r3
 1338 0030 1046     		mov	r0, r2
 1339 0032 FFF7FEFF 		bl	vTaskPrioritySet
 1340              	.L62:
 505:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     }
 506:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** 
 507:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c ****     return iStatus;
 1341              		.loc 1 507 12
 1342 0036 7B69     		ldr	r3, [r7, #20]
 508:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_pthread.c **** }
 1343              		.loc 1 508 1
 1344 0038 1846     		mov	r0, r3
 1345 003a 1837     		adds	r7, r7, #24
 1346              	.LCFI95:
 1347              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccItVjv8.s 			page 33


 1348 003c BD46     		mov	sp, r7
 1349              	.LCFI96:
 1350              		.cfi_def_cfa_register 13
 1351              		@ sp needed
 1352 003e 80BD     		pop	{r7, pc}
 1353              		.cfi_endproc
 1354              	.LFE21:
 1356              		.text
 1357              	.Letext0:
 1358              		.file 2 "/home/mego-ros2/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stddef
 1359              		.file 3 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_typ
 1360              		.file 4 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 1361              		.file 5 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 1362              		.file 6 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 1363              		.file 7 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 1364              		.file 8 "Core/Inc/FreeRTOSConfig.h"
 1365              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1366              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1367              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1368              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1369              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1370              		.file 14 "lib/FreeRTOS-Plus-POSIX/include/FreeRTOS_POSIX_types.h"
 1371              		.file 15 "lib/include/FreeRTOS_POSIX/sys/types.h"
 1372              		.file 16 "lib/include/FreeRTOS_POSIX/sched.h"
 1373              		.file 17 "lib/include/FreeRTOS_POSIX/errno.h"
ARM GAS  /tmp/ccItVjv8.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FreeRTOS_POSIX_pthread.c
     /tmp/ccItVjv8.s:18     .bss.FreeRTOS_errno:0000000000000000 $d
     /tmp/ccItVjv8.s:21     .bss.FreeRTOS_errno:0000000000000000 FreeRTOS_errno
     /tmp/ccItVjv8.s:24     .rodata.xDefaultThreadAttributes:0000000000000000 $d
     /tmp/ccItVjv8.s:27     .rodata.xDefaultThreadAttributes:0000000000000000 xDefaultThreadAttributes
     /tmp/ccItVjv8.s:31     .text.prvExitThread:0000000000000000 $t
     /tmp/ccItVjv8.s:38     .text.prvExitThread:0000000000000000 prvExitThread
     /tmp/ccItVjv8.s:1261   .text.pthread_self:0000000000000000 pthread_self
     /tmp/ccItVjv8.s:100    .text.prvRunThread:0000000000000000 $t
     /tmp/ccItVjv8.s:106    .text.prvRunThread:0000000000000000 prvRunThread
     /tmp/ccItVjv8.s:156    .text.pthread_attr_destroy:0000000000000000 $t
     /tmp/ccItVjv8.s:163    .text.pthread_attr_destroy:0000000000000000 pthread_attr_destroy
     /tmp/ccItVjv8.s:201    .text.pthread_attr_getdetachstate:0000000000000000 $t
     /tmp/ccItVjv8.s:208    .text.pthread_attr_getdetachstate:0000000000000000 pthread_attr_getdetachstate
     /tmp/ccItVjv8.s:268    .text.pthread_attr_getschedparam:0000000000000000 $t
     /tmp/ccItVjv8.s:275    .text.pthread_attr_getschedparam:0000000000000000 pthread_attr_getschedparam
     /tmp/ccItVjv8.s:325    .text.pthread_attr_getstacksize:0000000000000000 $t
     /tmp/ccItVjv8.s:332    .text.pthread_attr_getstacksize:0000000000000000 pthread_attr_getstacksize
     /tmp/ccItVjv8.s:382    .text.pthread_attr_init:0000000000000000 $t
     /tmp/ccItVjv8.s:389    .text.pthread_attr_init:0000000000000000 pthread_attr_init
     /tmp/ccItVjv8.s:431    .text.pthread_attr_init:0000000000000020 $d
     /tmp/ccItVjv8.s:436    .text.pthread_attr_setdetachstate:0000000000000000 $t
     /tmp/ccItVjv8.s:443    .text.pthread_attr_setdetachstate:0000000000000000 pthread_attr_setdetachstate
     /tmp/ccItVjv8.s:525    .text.pthread_attr_setschedparam:0000000000000000 $t
     /tmp/ccItVjv8.s:532    .text.pthread_attr_setschedparam:0000000000000000 pthread_attr_setschedparam
     /tmp/ccItVjv8.s:633    .text.pthread_attr_setschedpolicy:0000000000000000 $t
     /tmp/ccItVjv8.s:640    .text.pthread_attr_setschedpolicy:0000000000000000 pthread_attr_setschedpolicy
     /tmp/ccItVjv8.s:679    .text.pthread_attr_setstacksize:0000000000000000 $t
     /tmp/ccItVjv8.s:686    .text.pthread_attr_setstacksize:0000000000000000 pthread_attr_setstacksize
     /tmp/ccItVjv8.s:747    .rodata:0000000000000000 $d
     /tmp/ccItVjv8.s:751    .text.pthread_create:0000000000000000 $t
     /tmp/ccItVjv8.s:758    .text.pthread_create:0000000000000000 pthread_create
     /tmp/ccItVjv8.s:928    .text.pthread_create:00000000000000e8 $d
     /tmp/ccItVjv8.s:935    .text.pthread_getschedparam:0000000000000000 $t
     /tmp/ccItVjv8.s:942    .text.pthread_getschedparam:0000000000000000 pthread_getschedparam
     /tmp/ccItVjv8.s:1000   .text.pthread_equal:0000000000000000 $t
     /tmp/ccItVjv8.s:1007   .text.pthread_equal:0000000000000000 pthread_equal
     /tmp/ccItVjv8.s:1052   .text.pthread_exit:0000000000000000 $t
     /tmp/ccItVjv8.s:1059   .text.pthread_exit:0000000000000000 pthread_exit
     /tmp/ccItVjv8.s:1100   .text.pthread_join:0000000000000000 $t
     /tmp/ccItVjv8.s:1107   .text.pthread_join:0000000000000000 pthread_join
     /tmp/ccItVjv8.s:1254   .text.pthread_self:0000000000000000 $t
     /tmp/ccItVjv8.s:1286   .text.pthread_setschedparam:0000000000000000 $t
     /tmp/ccItVjv8.s:1293   .text.pthread_setschedparam:0000000000000000 pthread_setschedparam

UNDEFINED SYMBOLS
xQueueGenericSend
vTaskSuspend
vPortFree
vTaskDelete
sched_get_priority_max
pvPortMalloc
xQueueCreateMutexStatic
xQueueGenericCreateStatic
vTaskSuspendAll
xTaskCreate
ARM GAS  /tmp/ccItVjv8.s 			page 35


vTaskSetApplicationTaskTag
xTaskResumeAll
xQueueSemaphoreTake
vQueueDelete
xTaskGetApplicationTaskTag
vTaskPrioritySet
