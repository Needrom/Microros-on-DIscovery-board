ARM GAS  /tmp/cciFBL1K.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"slipif.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 4D696464 		.ascii	"Middlewares/Third_Party/LwIP/src/netif/slipif.c\000"
  20      6C657761 
  20      7265732F 
  20      54686972 
  20      645F5061 
  21              		.align	2
  22              	.LC1:
  23 0030 6E657469 		.ascii	"netif != NULL\000"
  23      6620213D 
  23      204E554C 
  23      4C00
  24 003e 0000     		.align	2
  25              	.LC2:
  26 0040 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
  26      7274696F 
  26      6E202225 
  26      73222066 
  26      61696C65 
  27              		.align	2
  28              	.LC3:
  29 0068 6E657469 		.ascii	"netif->state != NULL\000"
  29      662D3E73 
  29      74617465 
  29      20213D20 
  29      4E554C4C 
  30 007d 000000   		.align	2
  31              	.LC4:
  32 0080 7020213D 		.ascii	"p != NULL\000"
  32      204E554C 
  32      4C00
  33              		.section	.text.slipif_output,"ax",%progbits
  34              		.align	1
  35              		.arch armv7e-m
  36              		.syntax unified
  37              		.thumb
  38              		.thumb_func
  39              		.fpu fpv4-sp-d16
  41              	slipif_output:
ARM GAS  /tmp/cciFBL1K.s 			page 2


  42              	.LFB137:
  43              		.file 1 "Middlewares/Third_Party/LwIP/src/netif/slipif.c"
   1:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
   2:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @file
   3:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * SLIP Interface
   4:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
   5:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
   6:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
   7:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /*
   8:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * All rights reserved.
  10:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  11:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Redistribution and use in source and binary forms, with or without
  12:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * modification, are permitted provided that the following conditions
  13:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * are met:
  14:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * 1. Redistributions of source code must retain the above copyright
  15:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *    notice, this list of conditions and the following disclaimer.
  16:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  17:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *    notice, this list of conditions and the following disclaimer in the
  18:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *    documentation and/or other materials provided with the distribution.
  19:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * 3. Neither the name of the Institute nor the names of its contributors
  20:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *    may be used to endorse or promote products derived from this software
  21:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *    without specific prior written permission.
  22:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  23:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
  24:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  26:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
  27:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  29:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  30:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  31:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  32:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  33:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * SUCH DAMAGE.
  34:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  35:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * This file is built upon the file: src/arch/rtxc/netif/sioslip.c
  36:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  37:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Author: Magnus Ivarsson <magnus.ivarsson(at)volvo.com>
  38:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *         Simon Goldschmidt
  39:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
  40:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  41:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  42:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
  43:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @defgroup slipif SLIP
  44:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @ingroup netifs
  45:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  46:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * This is an arch independent SLIP netif. The specific serial hooks must be
  47:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * provided by another file. They are sio_open, sio_read/sio_tryread and sio_send
  48:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  49:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Usage: This netif can be used in three ways:\n
  50:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *        1) For NO_SYS==0, an RX thread can be used which blocks on sio_read()
  51:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *           until data is received.\n
  52:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *        2) In your main loop, call slipif_poll() to check for new RX bytes,
  53:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *           completed packets are fed into netif->input().\n
  54:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *        3) Call slipif_received_byte[s]() from your serial RX ISR and
  55:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *           slipif_process_rxqueue() from your main loop. ISR level decodes
ARM GAS  /tmp/cciFBL1K.s 			page 3


  56:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *           packets and puts completed packets on a queue which is fed into
  57:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *           the stack from the main loop (needs SYS_LIGHTWEIGHT_PROT for
  58:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *           pbuf_alloc to work on ISR level!).
  59:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
  60:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
  61:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  62:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "netif/slipif.h"
  63:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/opt.h"
  64:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  65:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/def.h"
  66:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/pbuf.h"
  67:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/stats.h"
  68:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/snmp.h"
  69:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/sys.h"
  70:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #include "lwip/sio.h"
  71:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  72:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #define SLIP_END     0xC0 /* 0300: start and end of every packet */
  73:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #define SLIP_ESC     0xDB /* 0333: escape start (one byte escaped data follows) */
  74:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #define SLIP_ESC_END 0xDC /* 0334: following escape: original byte is 0xC0 (END) */
  75:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #define SLIP_ESC_ESC 0xDD /* 0335: following escape: original byte is 0xDB (ESC) */
  76:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  77:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /** Maximum packet size that is received by this netif */
  78:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #ifndef SLIP_MAX_SIZE
  79:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #define SLIP_MAX_SIZE 1500
  80:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif
  81:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  82:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /** Define this to the interface speed for SNMP
  83:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * (sio_fd is the sio_fd_t returned by sio_open).
  84:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * The default value of zero means 'unknown'.
  85:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
  86:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #ifndef SLIP_SIO_SPEED
  87:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #define SLIP_SIO_SPEED(sio_fd) 0
  88:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif
  89:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  90:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** enum slipif_recv_state {
  91:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   SLIP_RECV_NORMAL,
  92:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   SLIP_RECV_ESCAPE
  93:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** };
  94:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
  95:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** struct slipif_priv {
  96:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   sio_fd_t sd;
  97:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* q is the whole pbuf chain for a packet, p is the current pbuf in the chain */
  98:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct pbuf *p, *q;
  99:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u8_t state;
 100:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u16_t i, recved;
 101:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if SLIP_RX_FROM_ISR
 102:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct pbuf *rxpackets;
 103:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif
 104:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** };
 105:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 106:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 107:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Send a pbuf doing the necessary SLIP encapsulation
 108:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 109:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Uses the serial layer's sio_send()
 110:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 111:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif the lwip network interface structure for this slipif
 112:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param p the pbuf chain packet to send
ARM GAS  /tmp/cciFBL1K.s 			page 4


 113:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @return always returns ERR_OK since the serial layer does not provide return values
 114:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 115:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** static err_t
 116:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_output(struct netif *netif, struct pbuf *p)
 117:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
  44              		.loc 1 117 1
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 24
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 86B0     		sub	sp, sp, #24
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 32
  56 0004 00AF     		add	r7, sp, #0
  57              	.LCFI2:
  58              		.cfi_def_cfa_register 7
  59 0006 7860     		str	r0, [r7, #4]
  60 0008 3960     		str	r1, [r7]
 118:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct slipif_priv *priv;
 119:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct pbuf *q;
 120:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u16_t i;
 121:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u8_t c;
 122:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 123:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
  61              		.loc 1 123 3
  62 000a 7B68     		ldr	r3, [r7, #4]
  63 000c 002B     		cmp	r3, #0
  64 000e 05D1     		bne	.L2
  65              		.loc 1 123 3 is_stmt 0 discriminator 1
  66 0010 374B     		ldr	r3, .L15
  67 0012 7B22     		movs	r2, #123
  68 0014 3749     		ldr	r1, .L15+4
  69 0016 3848     		ldr	r0, .L15+8
  70 0018 FFF7FEFF 		bl	printf
  71              	.L2:
 124:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("netif->state != NULL", (netif->state != NULL));
  72              		.loc 1 124 3 is_stmt 1
  73 001c 7B68     		ldr	r3, [r7, #4]
  74 001e 1B6A     		ldr	r3, [r3, #32]
  75 0020 002B     		cmp	r3, #0
  76 0022 05D1     		bne	.L3
  77              		.loc 1 124 3 is_stmt 0 discriminator 1
  78 0024 324B     		ldr	r3, .L15
  79 0026 7C22     		movs	r2, #124
  80 0028 3449     		ldr	r1, .L15+12
  81 002a 3348     		ldr	r0, .L15+8
  82 002c FFF7FEFF 		bl	printf
  83              	.L3:
 125:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("p != NULL", (p != NULL));
  84              		.loc 1 125 3 is_stmt 1
  85 0030 3B68     		ldr	r3, [r7]
  86 0032 002B     		cmp	r3, #0
  87 0034 05D1     		bne	.L4
ARM GAS  /tmp/cciFBL1K.s 			page 5


  88              		.loc 1 125 3 is_stmt 0 discriminator 1
  89 0036 2E4B     		ldr	r3, .L15
  90 0038 7D22     		movs	r2, #125
  91 003a 3149     		ldr	r1, .L15+16
  92 003c 2E48     		ldr	r0, .L15+8
  93 003e FFF7FEFF 		bl	printf
  94              	.L4:
 126:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 127:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_DEBUGF(SLIP_DEBUG, ("slipif_output: sending %"U16_F" bytes\n", p->tot_len));
 128:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv = (struct slipif_priv *)netif->state;
  95              		.loc 1 128 8 is_stmt 1
  96 0042 7B68     		ldr	r3, [r7, #4]
  97 0044 1B6A     		ldr	r3, [r3, #32]
  98 0046 FB60     		str	r3, [r7, #12]
 129:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 130:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* Send pbuf out on the serial I/O device. */
 131:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* Start with packet delimiter. */
 132:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   sio_send(SLIP_END, priv->sd);
  99              		.loc 1 132 3
 100 0048 FB68     		ldr	r3, [r7, #12]
 101 004a 1B68     		ldr	r3, [r3]
 102 004c 1946     		mov	r1, r3
 103 004e C020     		movs	r0, #192
 104 0050 FFF7FEFF 		bl	sio_send
 133:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 134:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   for (q = p; q != NULL; q = q->next) {
 105              		.loc 1 134 10
 106 0054 3B68     		ldr	r3, [r7]
 107 0056 7B61     		str	r3, [r7, #20]
 108              		.loc 1 134 3
 109 0058 3BE0     		b	.L5
 110              	.L12:
 135:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     for (i = 0; i < q->len; i++) {
 111              		.loc 1 135 12
 112 005a 0023     		movs	r3, #0
 113 005c 7B82     		strh	r3, [r7, #18]	@ movhi
 114              		.loc 1 135 5
 115 005e 30E0     		b	.L6
 116              	.L11:
 136:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       c = ((u8_t *)q->payload)[i];
 117              		.loc 1 136 21
 118 0060 7B69     		ldr	r3, [r7, #20]
 119 0062 5A68     		ldr	r2, [r3, #4]
 120              		.loc 1 136 31
 121 0064 7B8A     		ldrh	r3, [r7, #18]
 122 0066 1344     		add	r3, r3, r2
 123              		.loc 1 136 9
 124 0068 1B78     		ldrb	r3, [r3]
 125 006a FB72     		strb	r3, [r7, #11]
 137:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       switch (c) {
 126              		.loc 1 137 7
 127 006c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 128 006e C02B     		cmp	r3, #192
 129 0070 02D0     		beq	.L7
 130 0072 DB2B     		cmp	r3, #219
 131 0074 0DD0     		beq	.L8
 132 0076 19E0     		b	.L14
ARM GAS  /tmp/cciFBL1K.s 			page 6


 133              	.L7:
 138:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_END:
 139:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           /* need to escape this byte (0xC0 -> 0xDB, 0xDC) */
 140:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           sio_send(SLIP_ESC, priv->sd);
 134              		.loc 1 140 11
 135 0078 FB68     		ldr	r3, [r7, #12]
 136 007a 1B68     		ldr	r3, [r3]
 137 007c 1946     		mov	r1, r3
 138 007e DB20     		movs	r0, #219
 139 0080 FFF7FEFF 		bl	sio_send
 141:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           sio_send(SLIP_ESC_END, priv->sd);
 140              		.loc 1 141 11
 141 0084 FB68     		ldr	r3, [r7, #12]
 142 0086 1B68     		ldr	r3, [r3]
 143 0088 1946     		mov	r1, r3
 144 008a DC20     		movs	r0, #220
 145 008c FFF7FEFF 		bl	sio_send
 142:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 146              		.loc 1 142 11
 147 0090 14E0     		b	.L10
 148              	.L8:
 143:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC:
 144:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           /* need to escape this byte (0xDB -> 0xDB, 0xDD) */
 145:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           sio_send(SLIP_ESC, priv->sd);
 149              		.loc 1 145 11
 150 0092 FB68     		ldr	r3, [r7, #12]
 151 0094 1B68     		ldr	r3, [r3]
 152 0096 1946     		mov	r1, r3
 153 0098 DB20     		movs	r0, #219
 154 009a FFF7FEFF 		bl	sio_send
 146:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           sio_send(SLIP_ESC_ESC, priv->sd);
 155              		.loc 1 146 11
 156 009e FB68     		ldr	r3, [r7, #12]
 157 00a0 1B68     		ldr	r3, [r3]
 158 00a2 1946     		mov	r1, r3
 159 00a4 DD20     		movs	r0, #221
 160 00a6 FFF7FEFF 		bl	sio_send
 147:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 161              		.loc 1 147 11
 162 00aa 07E0     		b	.L10
 163              	.L14:
 148:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         default:
 149:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           /* normal byte - no need for escaping */
 150:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           sio_send(c, priv->sd);
 164              		.loc 1 150 11
 165 00ac FB68     		ldr	r3, [r7, #12]
 166 00ae 1A68     		ldr	r2, [r3]
 167 00b0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 168 00b2 1146     		mov	r1, r2
 169 00b4 1846     		mov	r0, r3
 170 00b6 FFF7FEFF 		bl	sio_send
 151:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 171              		.loc 1 151 11
 172 00ba 00BF     		nop
 173              	.L10:
 135:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       c = ((u8_t *)q->payload)[i];
 174              		.loc 1 135 30 discriminator 2
ARM GAS  /tmp/cciFBL1K.s 			page 7


 175 00bc 7B8A     		ldrh	r3, [r7, #18]
 176 00be 0133     		adds	r3, r3, #1
 177 00c0 7B82     		strh	r3, [r7, #18]	@ movhi
 178              	.L6:
 135:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       c = ((u8_t *)q->payload)[i];
 179              		.loc 1 135 22 discriminator 1
 180 00c2 7B69     		ldr	r3, [r7, #20]
 181 00c4 5B89     		ldrh	r3, [r3, #10]
 135:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       c = ((u8_t *)q->payload)[i];
 182              		.loc 1 135 5 discriminator 1
 183 00c6 7A8A     		ldrh	r2, [r7, #18]
 184 00c8 9A42     		cmp	r2, r3
 185 00ca C9D3     		bcc	.L11
 134:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     for (i = 0; i < q->len; i++) {
 186              		.loc 1 134 28 discriminator 2
 187 00cc 7B69     		ldr	r3, [r7, #20]
 188 00ce 1B68     		ldr	r3, [r3]
 189 00d0 7B61     		str	r3, [r7, #20]
 190              	.L5:
 134:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     for (i = 0; i < q->len; i++) {
 191              		.loc 1 134 3 discriminator 1
 192 00d2 7B69     		ldr	r3, [r7, #20]
 193 00d4 002B     		cmp	r3, #0
 194 00d6 C0D1     		bne	.L12
 152:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       }
 153:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     }
 154:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 155:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* End with packet delimiter. */
 156:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   sio_send(SLIP_END, priv->sd);
 195              		.loc 1 156 3
 196 00d8 FB68     		ldr	r3, [r7, #12]
 197 00da 1B68     		ldr	r3, [r3]
 198 00dc 1946     		mov	r1, r3
 199 00de C020     		movs	r0, #192
 200 00e0 FFF7FEFF 		bl	sio_send
 157:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   return ERR_OK;
 201              		.loc 1 157 10
 202 00e4 0023     		movs	r3, #0
 158:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 203              		.loc 1 158 1
 204 00e6 1846     		mov	r0, r3
 205 00e8 1837     		adds	r7, r7, #24
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 8
 208 00ea BD46     		mov	sp, r7
 209              	.LCFI4:
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 00ec 80BD     		pop	{r7, pc}
 213              	.L16:
 214 00ee 00BF     		.align	2
 215              	.L15:
 216 00f0 00000000 		.word	.LC0
 217 00f4 30000000 		.word	.LC1
 218 00f8 40000000 		.word	.LC2
 219 00fc 68000000 		.word	.LC3
 220 0100 80000000 		.word	.LC4
ARM GAS  /tmp/cciFBL1K.s 			page 8


 221              		.cfi_endproc
 222              	.LFE137:
 224              		.section	.text.slipif_output_v4,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	slipif_output_v4:
 232              	.LFB138:
 159:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 160:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if LWIP_IPV4
 161:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 162:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Send a pbuf doing the necessary SLIP encapsulation
 163:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 164:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Uses the serial layer's sio_send()
 165:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 166:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif the lwip network interface structure for this slipif
 167:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param p the pbuf chain packet to send
 168:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param ipaddr the ip address to send the packet to (not used for slipif)
 169:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @return always returns ERR_OK since the serial layer does not provide return values
 170:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 171:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** static err_t
 172:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_output_v4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr)
 173:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 233              		.loc 1 173 1
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 16
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              	.LCFI5:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 84B0     		sub	sp, sp, #16
 243              	.LCFI6:
 244              		.cfi_def_cfa_offset 24
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI7:
 247              		.cfi_def_cfa_register 7
 248 0006 F860     		str	r0, [r7, #12]
 249 0008 B960     		str	r1, [r7, #8]
 250 000a 7A60     		str	r2, [r7, #4]
 174:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_UNUSED_ARG(ipaddr);
 175:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   return slipif_output(netif, p);
 251              		.loc 1 175 10
 252 000c B968     		ldr	r1, [r7, #8]
 253 000e F868     		ldr	r0, [r7, #12]
 254 0010 FFF7FEFF 		bl	slipif_output
 255 0014 0346     		mov	r3, r0
 176:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 256              		.loc 1 176 1
 257 0016 1846     		mov	r0, r3
 258 0018 1037     		adds	r7, r7, #16
 259              	.LCFI8:
 260              		.cfi_def_cfa_offset 8
 261 001a BD46     		mov	sp, r7
ARM GAS  /tmp/cciFBL1K.s 			page 9


 262              	.LCFI9:
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 001c 80BD     		pop	{r7, pc}
 266              		.cfi_endproc
 267              	.LFE138:
 269              		.section	.text.slipif_rxbyte,"ax",%progbits
 270              		.align	1
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv4-sp-d16
 276              	slipif_rxbyte:
 277              	.LFB139:
 177:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif /* LWIP_IPV4 */
 178:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 179:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if LWIP_IPV6
 180:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 181:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Send a pbuf doing the necessary SLIP encapsulation
 182:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 183:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Uses the serial layer's sio_send()
 184:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 185:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif the lwip network interface structure for this slipif
 186:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param p the pbuf chain packet to send
 187:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param ipaddr the ip address to send the packet to (not used for slipif)
 188:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @return always returns ERR_OK since the serial layer does not provide return values
 189:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 190:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** static err_t
 191:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_output_v6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr)
 192:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 193:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_UNUSED_ARG(ipaddr);
 194:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   return slipif_output(netif, p);
 195:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 196:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif /* LWIP_IPV6 */
 197:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 198:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 199:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Handle the incoming SLIP stream character by character
 200:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 201:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif the lwip network interface structure for this slipif
 202:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param c received character (multiple calls to this function will
 203:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *        return a complete packet, NULL is returned before - used for polling)
 204:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @return The IP packet when SLIP_END is received
 205:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 206:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** static struct pbuf *
 207:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_rxbyte(struct netif *netif, u8_t c)
 208:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 278              		.loc 1 208 1
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 16
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI10:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 84B0     		sub	sp, sp, #16
 288              	.LCFI11:
ARM GAS  /tmp/cciFBL1K.s 			page 10


 289              		.cfi_def_cfa_offset 24
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI12:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 294 0008 0B46     		mov	r3, r1
 295 000a FB70     		strb	r3, [r7, #3]
 209:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct slipif_priv *priv;
 210:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct pbuf *t;
 211:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 212:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 296              		.loc 1 212 3
 297 000c 7B68     		ldr	r3, [r7, #4]
 298 000e 002B     		cmp	r3, #0
 299 0010 05D1     		bne	.L20
 300              		.loc 1 212 3 is_stmt 0 discriminator 1
 301 0012 5E4B     		ldr	r3, .L42
 302 0014 D422     		movs	r2, #212
 303 0016 5E49     		ldr	r1, .L42+4
 304 0018 5E48     		ldr	r0, .L42+8
 305 001a FFF7FEFF 		bl	printf
 306              	.L20:
 213:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("netif->state != NULL", (netif->state != NULL));
 307              		.loc 1 213 3 is_stmt 1
 308 001e 7B68     		ldr	r3, [r7, #4]
 309 0020 1B6A     		ldr	r3, [r3, #32]
 310 0022 002B     		cmp	r3, #0
 311 0024 05D1     		bne	.L21
 312              		.loc 1 213 3 is_stmt 0 discriminator 1
 313 0026 594B     		ldr	r3, .L42
 314 0028 D522     		movs	r2, #213
 315 002a 5B49     		ldr	r1, .L42+12
 316 002c 5948     		ldr	r0, .L42+8
 317 002e FFF7FEFF 		bl	printf
 318              	.L21:
 214:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 215:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv = (struct slipif_priv *)netif->state;
 319              		.loc 1 215 8 is_stmt 1
 320 0032 7B68     		ldr	r3, [r7, #4]
 321 0034 1B6A     		ldr	r3, [r3, #32]
 322 0036 FB60     		str	r3, [r7, #12]
 216:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 217:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   switch (priv->state) {
 323              		.loc 1 217 15
 324 0038 FB68     		ldr	r3, [r7, #12]
 325 003a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 326              		.loc 1 217 3
 327 003c 002B     		cmp	r3, #0
 328 003e 02D0     		beq	.L22
 329 0040 012B     		cmp	r3, #1
 330 0042 2DD0     		beq	.L23
 218:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     case SLIP_RECV_NORMAL:
 219:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       switch (c) {
 220:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_END:
 221:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           if (priv->recved > 0) {
 222:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             /* Received whole packet. */
 223:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             /* Trim the pbuf to the size of the received packet. */
ARM GAS  /tmp/cciFBL1K.s 			page 11


 224:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             pbuf_realloc(priv->q, priv->recved);
 225:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 226:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             LINK_STATS_INC(link.recv);
 227:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 228:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             LWIP_DEBUGF(SLIP_DEBUG, ("slipif: Got packet (%"U16_F" bytes)\n", priv->recved));
 229:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             t = priv->q;
 230:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             priv->p = priv->q = NULL;
 231:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             priv->i = priv->recved = 0;
 232:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             return t;
 233:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           }
 234:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           return NULL;
 235:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC:
 236:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           priv->state = SLIP_RECV_ESCAPE;
 237:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           return NULL;
 238:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         default:
 239:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 240:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       } /* end switch (c) */
 241:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       break;
 242:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     case SLIP_RECV_ESCAPE:
 243:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       /* un-escape END or ESC bytes, leave other bytes
 244:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****          (although that would be a protocol error) */
 245:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       switch (c) {
 246:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC_END:
 247:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           c = SLIP_END;
 248:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 249:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC_ESC:
 250:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           c = SLIP_ESC;
 251:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 252:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         default:
 253:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 254:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       }
 255:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       priv->state = SLIP_RECV_NORMAL;
 256:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       break;
 257:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     default:
 258:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       break;
 331              		.loc 1 258 7
 332 0044 3CE0     		b	.L30
 333              	.L22:
 219:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_END:
 334              		.loc 1 219 7
 335 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 336 0048 C02B     		cmp	r3, #192
 337 004a 02D0     		beq	.L25
 338 004c DB2B     		cmp	r3, #219
 339 004e 21D0     		beq	.L26
 239:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       } /* end switch (c) */
 340              		.loc 1 239 11
 341 0050 25E0     		b	.L41
 342              	.L25:
 221:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             /* Received whole packet. */
 343              		.loc 1 221 19
 344 0052 FB68     		ldr	r3, [r7, #12]
 345 0054 1B8A     		ldrh	r3, [r3, #16]
 221:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             /* Received whole packet. */
 346              		.loc 1 221 14
 347 0056 002B     		cmp	r3, #0
 348 0058 1AD0     		beq	.L28
ARM GAS  /tmp/cciFBL1K.s 			page 12


 224:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 349              		.loc 1 224 13
 350 005a FB68     		ldr	r3, [r7, #12]
 351 005c 9A68     		ldr	r2, [r3, #8]
 352 005e FB68     		ldr	r3, [r7, #12]
 353 0060 1B8A     		ldrh	r3, [r3, #16]
 354 0062 1946     		mov	r1, r3
 355 0064 1046     		mov	r0, r2
 356 0066 FFF7FEFF 		bl	pbuf_realloc
 229:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             priv->p = priv->q = NULL;
 357              		.loc 1 229 15
 358 006a FB68     		ldr	r3, [r7, #12]
 359 006c 9B68     		ldr	r3, [r3, #8]
 360 006e BB60     		str	r3, [r7, #8]
 230:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             priv->i = priv->recved = 0;
 361              		.loc 1 230 31
 362 0070 FB68     		ldr	r3, [r7, #12]
 363 0072 0022     		movs	r2, #0
 364 0074 9A60     		str	r2, [r3, #8]
 230:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             priv->i = priv->recved = 0;
 365              		.loc 1 230 27
 366 0076 FB68     		ldr	r3, [r7, #12]
 367 0078 9A68     		ldr	r2, [r3, #8]
 230:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             priv->i = priv->recved = 0;
 368              		.loc 1 230 21
 369 007a FB68     		ldr	r3, [r7, #12]
 370 007c 5A60     		str	r2, [r3, #4]
 231:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             return t;
 371              		.loc 1 231 36
 372 007e FB68     		ldr	r3, [r7, #12]
 373 0080 0022     		movs	r2, #0
 374 0082 1A82     		strh	r2, [r3, #16]	@ movhi
 231:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             return t;
 375              		.loc 1 231 27
 376 0084 FB68     		ldr	r3, [r7, #12]
 377 0086 1A8A     		ldrh	r2, [r3, #16]
 231:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****             return t;
 378              		.loc 1 231 21
 379 0088 FB68     		ldr	r3, [r7, #12]
 380 008a DA81     		strh	r2, [r3, #14]	@ movhi
 232:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           }
 381              		.loc 1 232 20
 382 008c BB68     		ldr	r3, [r7, #8]
 383 008e 79E0     		b	.L29
 384              	.L28:
 234:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC:
 385              		.loc 1 234 18
 386 0090 0023     		movs	r3, #0
 387 0092 77E0     		b	.L29
 388              	.L26:
 236:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           return NULL;
 389              		.loc 1 236 23
 390 0094 FB68     		ldr	r3, [r7, #12]
 391 0096 0122     		movs	r2, #1
 392 0098 1A73     		strb	r2, [r3, #12]
 237:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         default:
 393              		.loc 1 237 18
ARM GAS  /tmp/cciFBL1K.s 			page 13


 394 009a 0023     		movs	r3, #0
 395 009c 72E0     		b	.L29
 396              	.L41:
 241:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     case SLIP_RECV_ESCAPE:
 397              		.loc 1 241 7
 398 009e 0FE0     		b	.L30
 399              	.L23:
 245:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC_END:
 400              		.loc 1 245 7
 401 00a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 402 00a2 DC2B     		cmp	r3, #220
 403 00a4 02D0     		beq	.L31
 404 00a6 DD2B     		cmp	r3, #221
 405 00a8 03D0     		beq	.L32
 253:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       }
 406              		.loc 1 253 11
 407 00aa 05E0     		b	.L34
 408              	.L31:
 247:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 409              		.loc 1 247 13
 410 00ac C023     		movs	r3, #192
 411 00ae FB70     		strb	r3, [r7, #3]
 248:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         case SLIP_ESC_ESC:
 412              		.loc 1 248 11
 413 00b0 02E0     		b	.L34
 414              	.L32:
 250:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****           break;
 415              		.loc 1 250 13
 416 00b2 DB23     		movs	r3, #219
 417 00b4 FB70     		strb	r3, [r7, #3]
 251:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         default:
 418              		.loc 1 251 11
 419 00b6 00BF     		nop
 420              	.L34:
 255:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       break;
 421              		.loc 1 255 19
 422 00b8 FB68     		ldr	r3, [r7, #12]
 423 00ba 0022     		movs	r2, #0
 424 00bc 1A73     		strb	r2, [r3, #12]
 256:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     default:
 425              		.loc 1 256 7
 426 00be 00BF     		nop
 427              	.L30:
 259:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   } /* end switch (priv->state) */
 260:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 261:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* byte received, packet not yet completely received */
 262:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   if (priv->p == NULL) {
 428              		.loc 1 262 11
 429 00c0 FB68     		ldr	r3, [r7, #12]
 430 00c2 5B68     		ldr	r3, [r3, #4]
 431              		.loc 1 262 6
 432 00c4 002B     		cmp	r3, #0
 433 00c6 20D1     		bne	.L35
 263:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     /* allocate a new pbuf */
 264:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     LWIP_DEBUGF(SLIP_DEBUG, ("slipif_input: alloc\n"));
 265:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     priv->p = pbuf_alloc(PBUF_LINK, (PBUF_POOL_BUFSIZE - PBUF_LINK_HLEN - PBUF_LINK_ENCAPSULATION_H
 434              		.loc 1 265 15
ARM GAS  /tmp/cciFBL1K.s 			page 14


 435 00c8 4FF4C172 		mov	r2, #386
 436 00cc 40F24221 		movw	r1, #578
 437 00d0 0E20     		movs	r0, #14
 438 00d2 FFF7FEFF 		bl	pbuf_alloc
 439 00d6 0246     		mov	r2, r0
 440              		.loc 1 265 13
 441 00d8 FB68     		ldr	r3, [r7, #12]
 442 00da 5A60     		str	r2, [r3, #4]
 266:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 267:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     if (priv->p == NULL) {
 443              		.loc 1 267 13
 444 00dc FB68     		ldr	r3, [r7, #12]
 445 00de 5B68     		ldr	r3, [r3, #4]
 446              		.loc 1 267 8
 447 00e0 002B     		cmp	r3, #0
 448 00e2 01D1     		bne	.L36
 268:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       LINK_STATS_INC(link.drop);
 269:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       LWIP_DEBUGF(SLIP_DEBUG, ("slipif_input: no new pbuf! (DROP)\n"));
 270:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       /* don't process any further since we got no pbuf to receive to */
 271:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       return NULL;
 449              		.loc 1 271 14
 450 00e4 0023     		movs	r3, #0
 451 00e6 4DE0     		b	.L29
 452              	.L36:
 272:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     }
 273:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 274:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     if (priv->q != NULL) {
 453              		.loc 1 274 13
 454 00e8 FB68     		ldr	r3, [r7, #12]
 455 00ea 9B68     		ldr	r3, [r3, #8]
 456              		.loc 1 274 8
 457 00ec 002B     		cmp	r3, #0
 458 00ee 08D0     		beq	.L37
 275:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       /* 'chain' the pbuf to the existing chain */
 276:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       pbuf_cat(priv->q, priv->p);
 459              		.loc 1 276 7
 460 00f0 FB68     		ldr	r3, [r7, #12]
 461 00f2 9A68     		ldr	r2, [r3, #8]
 462 00f4 FB68     		ldr	r3, [r7, #12]
 463 00f6 5B68     		ldr	r3, [r3, #4]
 464 00f8 1946     		mov	r1, r3
 465 00fa 1046     		mov	r0, r2
 466 00fc FFF7FEFF 		bl	pbuf_cat
 467 0100 03E0     		b	.L35
 468              	.L37:
 277:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     } else {
 278:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       /* p is the first pbuf in the chain */
 279:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       priv->q = priv->p;
 469              		.loc 1 279 21
 470 0102 FB68     		ldr	r3, [r7, #12]
 471 0104 5A68     		ldr	r2, [r3, #4]
 472              		.loc 1 279 15
 473 0106 FB68     		ldr	r3, [r7, #12]
 474 0108 9A60     		str	r2, [r3, #8]
 475              	.L35:
 280:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     }
 281:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
ARM GAS  /tmp/cciFBL1K.s 			page 15


 282:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 283:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* this automatically drops bytes if > SLIP_MAX_SIZE */
 284:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   if ((priv->p != NULL) && (priv->recved <= SLIP_MAX_SIZE)) {
 476              		.loc 1 284 12
 477 010a FB68     		ldr	r3, [r7, #12]
 478 010c 5B68     		ldr	r3, [r3, #4]
 479              		.loc 1 284 6
 480 010e 002B     		cmp	r3, #0
 481 0110 37D0     		beq	.L38
 482              		.loc 1 284 33 discriminator 1
 483 0112 FB68     		ldr	r3, [r7, #12]
 484 0114 1B8A     		ldrh	r3, [r3, #16]
 485              		.loc 1 284 25 discriminator 1
 486 0116 40F2DC52 		movw	r2, #1500
 487 011a 9342     		cmp	r3, r2
 488 011c 31D8     		bhi	.L38
 285:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     ((u8_t *)priv->p->payload)[priv->i] = c;
 489              		.loc 1 285 18
 490 011e FB68     		ldr	r3, [r7, #12]
 491 0120 5B68     		ldr	r3, [r3, #4]
 492              		.loc 1 285 21
 493 0122 5B68     		ldr	r3, [r3, #4]
 494              		.loc 1 285 36
 495 0124 FA68     		ldr	r2, [r7, #12]
 496 0126 D289     		ldrh	r2, [r2, #14]
 497              		.loc 1 285 31
 498 0128 1344     		add	r3, r3, r2
 499              		.loc 1 285 41
 500 012a FA78     		ldrb	r2, [r7, #3]
 501 012c 1A70     		strb	r2, [r3]
 286:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     priv->recved++;
 502              		.loc 1 286 9
 503 012e FB68     		ldr	r3, [r7, #12]
 504 0130 1B8A     		ldrh	r3, [r3, #16]
 505              		.loc 1 286 17
 506 0132 0133     		adds	r3, r3, #1
 507 0134 9AB2     		uxth	r2, r3
 508 0136 FB68     		ldr	r3, [r7, #12]
 509 0138 1A82     		strh	r2, [r3, #16]	@ movhi
 287:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     priv->i++;
 510              		.loc 1 287 9
 511 013a FB68     		ldr	r3, [r7, #12]
 512 013c DB89     		ldrh	r3, [r3, #14]
 513              		.loc 1 287 12
 514 013e 0133     		adds	r3, r3, #1
 515 0140 9AB2     		uxth	r2, r3
 516 0142 FB68     		ldr	r3, [r7, #12]
 517 0144 DA81     		strh	r2, [r3, #14]	@ movhi
 288:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     if (priv->i >= priv->p->len) {
 518              		.loc 1 288 13
 519 0146 FB68     		ldr	r3, [r7, #12]
 520 0148 DA89     		ldrh	r2, [r3, #14]
 521              		.loc 1 288 24
 522 014a FB68     		ldr	r3, [r7, #12]
 523 014c 5B68     		ldr	r3, [r3, #4]
 524              		.loc 1 288 27
 525 014e 5B89     		ldrh	r3, [r3, #10]
ARM GAS  /tmp/cciFBL1K.s 			page 16


 526              		.loc 1 288 8
 527 0150 9A42     		cmp	r2, r3
 528 0152 16D3     		bcc	.L38
 289:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       /* on to the next pbuf */
 290:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       priv->i = 0;
 529              		.loc 1 290 15
 530 0154 FB68     		ldr	r3, [r7, #12]
 531 0156 0022     		movs	r2, #0
 532 0158 DA81     		strh	r2, [r3, #14]	@ movhi
 291:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       if (priv->p->next != NULL && priv->p->next->len > 0) {
 533              		.loc 1 291 15
 534 015a FB68     		ldr	r3, [r7, #12]
 535 015c 5B68     		ldr	r3, [r3, #4]
 536              		.loc 1 291 18
 537 015e 1B68     		ldr	r3, [r3]
 538              		.loc 1 291 10
 539 0160 002B     		cmp	r3, #0
 540 0162 0BD0     		beq	.L39
 541              		.loc 1 291 40 discriminator 1
 542 0164 FB68     		ldr	r3, [r7, #12]
 543 0166 5B68     		ldr	r3, [r3, #4]
 544              		.loc 1 291 43 discriminator 1
 545 0168 1B68     		ldr	r3, [r3]
 546              		.loc 1 291 49 discriminator 1
 547 016a 5B89     		ldrh	r3, [r3, #10]
 548              		.loc 1 291 33 discriminator 1
 549 016c 002B     		cmp	r3, #0
 550 016e 05D0     		beq	.L39
 292:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         /* p is a chain, on to the next in the chain */
 293:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         priv->p = priv->p->next;
 551              		.loc 1 293 23
 552 0170 FB68     		ldr	r3, [r7, #12]
 553 0172 5B68     		ldr	r3, [r3, #4]
 554              		.loc 1 293 26
 555 0174 1A68     		ldr	r2, [r3]
 556              		.loc 1 293 17
 557 0176 FB68     		ldr	r3, [r7, #12]
 558 0178 5A60     		str	r2, [r3, #4]
 559 017a 02E0     		b	.L38
 560              	.L39:
 294:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       } else {
 295:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         /* p is a single pbuf, set it to NULL so next time a new
 296:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****          * pbuf is allocated */
 297:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****         priv->p = NULL;
 561              		.loc 1 297 17
 562 017c FB68     		ldr	r3, [r7, #12]
 563 017e 0022     		movs	r2, #0
 564 0180 5A60     		str	r2, [r3, #4]
 565              	.L38:
 298:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       }
 299:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     }
 300:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 301:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   return NULL;
 566              		.loc 1 301 10
 567 0182 0023     		movs	r3, #0
 568              	.L29:
 302:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
ARM GAS  /tmp/cciFBL1K.s 			page 17


 569              		.loc 1 302 1
 570 0184 1846     		mov	r0, r3
 571 0186 1037     		adds	r7, r7, #16
 572              	.LCFI13:
 573              		.cfi_def_cfa_offset 8
 574 0188 BD46     		mov	sp, r7
 575              	.LCFI14:
 576              		.cfi_def_cfa_register 13
 577              		@ sp needed
 578 018a 80BD     		pop	{r7, pc}
 579              	.L43:
 580              		.align	2
 581              	.L42:
 582 018c 00000000 		.word	.LC0
 583 0190 30000000 		.word	.LC1
 584 0194 40000000 		.word	.LC2
 585 0198 68000000 		.word	.LC3
 586              		.cfi_endproc
 587              	.LFE139:
 589              		.section	.text.slipif_rxbyte_input,"ax",%progbits
 590              		.align	1
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	slipif_rxbyte_input:
 597              	.LFB140:
 303:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 304:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /** Like slipif_rxbyte, but passes completed packets to netif->input
 305:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 306:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif The lwip network interface structure for this slipif
 307:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param c received character
 308:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 309:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** static void
 310:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_rxbyte_input(struct netif *netif, u8_t c)
 311:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 598              		.loc 1 311 1
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 16
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              	.LCFI15:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 84B0     		sub	sp, sp, #16
 608              	.LCFI16:
 609              		.cfi_def_cfa_offset 24
 610 0004 00AF     		add	r7, sp, #0
 611              	.LCFI17:
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 614 0008 0B46     		mov	r3, r1
 615 000a FB70     		strb	r3, [r7, #3]
 312:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct pbuf *p;
 313:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   p = slipif_rxbyte(netif, c);
 616              		.loc 1 313 7
ARM GAS  /tmp/cciFBL1K.s 			page 18


 617 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 618 000e 1946     		mov	r1, r3
 619 0010 7868     		ldr	r0, [r7, #4]
 620 0012 FFF7FEFF 		bl	slipif_rxbyte
 621 0016 F860     		str	r0, [r7, #12]
 314:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   if (p != NULL) {
 622              		.loc 1 314 6
 623 0018 FB68     		ldr	r3, [r7, #12]
 624 001a 002B     		cmp	r3, #0
 625 001c 0AD0     		beq	.L46
 315:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     if (netif->input(p, netif) != ERR_OK) {
 626              		.loc 1 315 14
 627 001e 7B68     		ldr	r3, [r7, #4]
 628 0020 1B69     		ldr	r3, [r3, #16]
 629              		.loc 1 315 9
 630 0022 7968     		ldr	r1, [r7, #4]
 631 0024 F868     		ldr	r0, [r7, #12]
 632 0026 9847     		blx	r3
 633              	.LVL0:
 634 0028 0346     		mov	r3, r0
 635              		.loc 1 315 8
 636 002a 002B     		cmp	r3, #0
 637 002c 02D0     		beq	.L46
 316:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       pbuf_free(p);
 638              		.loc 1 316 7
 639 002e F868     		ldr	r0, [r7, #12]
 640 0030 FFF7FEFF 		bl	pbuf_free
 641              	.L46:
 317:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     }
 318:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 319:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 642              		.loc 1 319 1
 643 0034 00BF     		nop
 644 0036 1037     		adds	r7, r7, #16
 645              	.LCFI18:
 646              		.cfi_def_cfa_offset 8
 647 0038 BD46     		mov	sp, r7
 648              	.LCFI19:
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 003a 80BD     		pop	{r7, pc}
 652              		.cfi_endproc
 653              	.LFE140:
 655              		.section	.text.slipif_loop_thread,"ax",%progbits
 656              		.align	1
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 660              		.fpu fpv4-sp-d16
 662              	slipif_loop_thread:
 663              	.LFB141:
 320:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 321:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if SLIP_USE_RX_THREAD
 322:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 323:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * The SLIP input thread.
 324:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 325:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Feed the IP layer with incoming packets
ARM GAS  /tmp/cciFBL1K.s 			page 19


 326:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 327:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param nf the lwip network interface structure for this slipif
 328:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 329:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** static void
 330:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_loop_thread(void *nf)
 331:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 664              		.loc 1 331 1
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 24
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668 0000 80B5     		push	{r7, lr}
 669              	.LCFI20:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 86B0     		sub	sp, sp, #24
 674              	.LCFI21:
 675              		.cfi_def_cfa_offset 32
 676 0004 00AF     		add	r7, sp, #0
 677              	.LCFI22:
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 332:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u8_t c;
 333:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct netif *netif = (struct netif *)nf;
 680              		.loc 1 333 17
 681 0008 7B68     		ldr	r3, [r7, #4]
 682 000a 7B61     		str	r3, [r7, #20]
 334:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct slipif_priv *priv = (struct slipif_priv *)netif->state;
 683              		.loc 1 334 23
 684 000c 7B69     		ldr	r3, [r7, #20]
 685 000e 1B6A     		ldr	r3, [r3, #32]
 686 0010 3B61     		str	r3, [r7, #16]
 687              	.L49:
 335:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 336:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   while (1) {
 337:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     if (sio_read(priv->sd, &c, 1) > 0) {
 688              		.loc 1 337 9
 689 0012 3B69     		ldr	r3, [r7, #16]
 690 0014 1B68     		ldr	r3, [r3]
 691 0016 07F10F01 		add	r1, r7, #15
 692 001a 0122     		movs	r2, #1
 693 001c 1846     		mov	r0, r3
 694 001e FFF7FEFF 		bl	sio_read
 695 0022 0346     		mov	r3, r0
 696              		.loc 1 337 8
 697 0024 002B     		cmp	r3, #0
 698 0026 F4D0     		beq	.L49
 338:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       slipif_rxbyte_input(netif, c);
 699              		.loc 1 338 7
 700 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 701 002a 1946     		mov	r1, r3
 702 002c 7869     		ldr	r0, [r7, #20]
 703 002e FFF7FEFF 		bl	slipif_rxbyte_input
 337:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****       slipif_rxbyte_input(netif, c);
 704              		.loc 1 337 8
 705 0032 EEE7     		b	.L49
 706              		.cfi_endproc
ARM GAS  /tmp/cciFBL1K.s 			page 20


 707              	.LFE141:
 709              		.section	.rodata
 710 008a 0000     		.align	2
 711              	.LC5:
 712 008c 736C6970 		.ascii	"slipif needs an input callback\000"
 712      6966206E 
 712      65656473 
 712      20616E20 
 712      696E7075 
 713 00ab 00       		.align	2
 714              	.LC6:
 715 00ac 736C6970 		.ascii	"slipif_loop\000"
 715      69665F6C 
 715      6F6F7000 
 716              		.section	.text.slipif_init,"ax",%progbits
 717              		.align	1
 718              		.global	slipif_init
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu fpv4-sp-d16
 724              	slipif_init:
 725              	.LFB142:
 339:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     }
 340:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 341:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 342:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif /* SLIP_USE_RX_THREAD */
 343:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 344:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 345:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @ingroup slipif
 346:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * SLIP netif initialization
 347:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 348:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Call the arch specific sio_open and remember
 349:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * the opened device in the state field of the netif.
 350:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 351:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif the lwip network interface structure for this slipif
 352:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @return ERR_OK if serial line could be opened,
 353:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *         ERR_MEM if no memory could be allocated,
 354:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *         ERR_IF is serial line couldn't be opened
 355:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 356:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @note If netif->state is interpreted as an u8_t serial port number.
 357:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 358:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 359:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** err_t
 360:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_init(struct netif *netif)
 361:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 726              		.loc 1 361 1
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 16
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              	.LCFI23:
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 7, -8
 734              		.cfi_offset 14, -4
 735 0002 86B0     		sub	sp, sp, #24
 736              	.LCFI24:
ARM GAS  /tmp/cciFBL1K.s 			page 21


 737              		.cfi_def_cfa_offset 32
 738 0004 02AF     		add	r7, sp, #8
 739              	.LCFI25:
 740              		.cfi_def_cfa 7, 24
 741 0006 7860     		str	r0, [r7, #4]
 362:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct slipif_priv *priv;
 363:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u8_t sio_num;
 364:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 365:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("slipif needs an input callback", netif->input != NULL);
 742              		.loc 1 365 3
 743 0008 7B68     		ldr	r3, [r7, #4]
 744 000a 1B69     		ldr	r3, [r3, #16]
 745 000c 002B     		cmp	r3, #0
 746 000e 06D1     		bne	.L51
 747              		.loc 1 365 3 is_stmt 0 discriminator 1
 748 0010 294B     		ldr	r3, .L55
 749 0012 40F26D12 		movw	r2, #365
 750 0016 2949     		ldr	r1, .L55+4
 751 0018 2948     		ldr	r0, .L55+8
 752 001a FFF7FEFF 		bl	printf
 753              	.L51:
 366:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 367:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* netif->state contains serial port number */
 368:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   sio_num = LWIP_PTR_NUMERIC_CAST(u8_t, netif->state);
 754              		.loc 1 368 13 is_stmt 1
 755 001e 7B68     		ldr	r3, [r7, #4]
 756 0020 1B6A     		ldr	r3, [r3, #32]
 757              		.loc 1 368 11
 758 0022 FB73     		strb	r3, [r7, #15]
 369:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 370:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_DEBUGF(SLIP_DEBUG, ("slipif_init: netif->num=%"U16_F"\n", (u16_t)sio_num));
 371:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 372:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* Allocate private data */
 373:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv = (struct slipif_priv *)mem_malloc(sizeof(struct slipif_priv));
 759              		.loc 1 373 32
 760 0024 1420     		movs	r0, #20
 761 0026 FFF7FEFF 		bl	mem_malloc
 762 002a B860     		str	r0, [r7, #8]
 374:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   if (!priv) {
 763              		.loc 1 374 6
 764 002c BB68     		ldr	r3, [r7, #8]
 765 002e 002B     		cmp	r3, #0
 766 0030 02D1     		bne	.L52
 375:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     return ERR_MEM;
 767              		.loc 1 375 12
 768 0032 4FF0FF33 		mov	r3, #-1
 769 0036 3BE0     		b	.L53
 770              	.L52:
 376:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 377:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 378:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   netif->name[0] = 's';
 771              		.loc 1 378 18
 772 0038 7B68     		ldr	r3, [r7, #4]
 773 003a 7322     		movs	r2, #115
 774 003c 83F83220 		strb	r2, [r3, #50]
 379:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   netif->name[1] = 'l';
 775              		.loc 1 379 18
ARM GAS  /tmp/cciFBL1K.s 			page 22


 776 0040 7B68     		ldr	r3, [r7, #4]
 777 0042 6C22     		movs	r2, #108
 778 0044 83F83320 		strb	r2, [r3, #51]
 380:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if LWIP_IPV4
 381:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   netif->output = slipif_output_v4;
 779              		.loc 1 381 17
 780 0048 7B68     		ldr	r3, [r7, #4]
 781 004a 1E4A     		ldr	r2, .L55+12
 782 004c 5A61     		str	r2, [r3, #20]
 382:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif /* LWIP_IPV4 */
 383:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if LWIP_IPV6
 384:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   netif->output_ip6 = slipif_output_v6;
 385:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif /* LWIP_IPV6 */
 386:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   netif->mtu = SLIP_MAX_SIZE;
 783              		.loc 1 386 14
 784 004e 7B68     		ldr	r3, [r7, #4]
 785 0050 40F2DC52 		movw	r2, #1500
 786 0054 1A85     		strh	r2, [r3, #40]	@ movhi
 387:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 388:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* Try to open the serial port. */
 389:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->sd = sio_open(sio_num);
 787              		.loc 1 389 14
 788 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 789 0058 1846     		mov	r0, r3
 790 005a FFF7FEFF 		bl	sio_open
 791 005e 0246     		mov	r2, r0
 792              		.loc 1 389 12
 793 0060 BB68     		ldr	r3, [r7, #8]
 794 0062 1A60     		str	r2, [r3]
 390:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   if (!priv->sd) {
 795              		.loc 1 390 12
 796 0064 BB68     		ldr	r3, [r7, #8]
 797 0066 1B68     		ldr	r3, [r3]
 798              		.loc 1 390 6
 799 0068 002B     		cmp	r3, #0
 800 006a 05D1     		bne	.L54
 391:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     /* Opening the serial port failed. */
 392:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     mem_free(priv);
 801              		.loc 1 392 5
 802 006c B868     		ldr	r0, [r7, #8]
 803 006e FFF7FEFF 		bl	mem_free
 393:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     return ERR_IF;
 804              		.loc 1 393 12
 805 0072 6FF00B03 		mvn	r3, #11
 806 0076 1BE0     		b	.L53
 807              	.L54:
 394:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 395:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 396:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* Initialize private data */
 397:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->p = NULL;
 808              		.loc 1 397 11
 809 0078 BB68     		ldr	r3, [r7, #8]
 810 007a 0022     		movs	r2, #0
 811 007c 5A60     		str	r2, [r3, #4]
 398:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->q = NULL;
 812              		.loc 1 398 11
 813 007e BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/cciFBL1K.s 			page 23


 814 0080 0022     		movs	r2, #0
 815 0082 9A60     		str	r2, [r3, #8]
 399:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->state = SLIP_RECV_NORMAL;
 816              		.loc 1 399 15
 817 0084 BB68     		ldr	r3, [r7, #8]
 818 0086 0022     		movs	r2, #0
 819 0088 1A73     		strb	r2, [r3, #12]
 400:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->i = 0;
 820              		.loc 1 400 11
 821 008a BB68     		ldr	r3, [r7, #8]
 822 008c 0022     		movs	r2, #0
 823 008e DA81     		strh	r2, [r3, #14]	@ movhi
 401:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->recved = 0;
 824              		.loc 1 401 16
 825 0090 BB68     		ldr	r3, [r7, #8]
 826 0092 0022     		movs	r2, #0
 827 0094 1A82     		strh	r2, [r3, #16]	@ movhi
 402:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if SLIP_RX_FROM_ISR
 403:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv->rxpackets = NULL;
 404:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif
 405:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 406:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   netif->state = priv;
 828              		.loc 1 406 16
 829 0096 7B68     		ldr	r3, [r7, #4]
 830 0098 BA68     		ldr	r2, [r7, #8]
 831 009a 1A62     		str	r2, [r3, #32]
 407:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 408:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* initialize the snmp variables and counters inside the struct netif */
 409:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   MIB2_INIT_NETIF(netif, snmp_ifType_slip, SLIP_SIO_SPEED(priv->sd));
 410:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 411:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #if SLIP_USE_RX_THREAD
 412:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   /* Create a thread to poll the serial line. */
 413:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   sys_thread_new(SLIPIF_THREAD_NAME, slipif_loop_thread, netif,
 832              		.loc 1 413 3
 833 009c 0323     		movs	r3, #3
 834 009e 0093     		str	r3, [sp]
 835 00a0 4FF48063 		mov	r3, #1024
 836 00a4 7A68     		ldr	r2, [r7, #4]
 837 00a6 0849     		ldr	r1, .L55+16
 838 00a8 0848     		ldr	r0, .L55+20
 839 00aa FFF7FEFF 		bl	sys_thread_new
 414:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****                  SLIPIF_THREAD_STACKSIZE, SLIPIF_THREAD_PRIO);
 415:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** #endif /* SLIP_USE_RX_THREAD */
 416:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   return ERR_OK;
 840              		.loc 1 416 10
 841 00ae 0023     		movs	r3, #0
 842              	.L53:
 417:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 843              		.loc 1 417 1
 844 00b0 1846     		mov	r0, r3
 845 00b2 1037     		adds	r7, r7, #16
 846              	.LCFI26:
 847              		.cfi_def_cfa_offset 8
 848 00b4 BD46     		mov	sp, r7
 849              	.LCFI27:
 850              		.cfi_def_cfa_register 13
 851              		@ sp needed
ARM GAS  /tmp/cciFBL1K.s 			page 24


 852 00b6 80BD     		pop	{r7, pc}
 853              	.L56:
 854              		.align	2
 855              	.L55:
 856 00b8 00000000 		.word	.LC0
 857 00bc 8C000000 		.word	.LC5
 858 00c0 40000000 		.word	.LC2
 859 00c4 00000000 		.word	slipif_output_v4
 860 00c8 00000000 		.word	slipif_loop_thread
 861 00cc AC000000 		.word	.LC6
 862              		.cfi_endproc
 863              	.LFE142:
 865              		.section	.text.slipif_poll,"ax",%progbits
 866              		.align	1
 867              		.global	slipif_poll
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 871              		.fpu fpv4-sp-d16
 873              	slipif_poll:
 874              	.LFB143:
 418:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 419:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** /**
 420:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @ingroup slipif
 421:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * Polls the serial device and feeds the IP layer with incoming packets.
 422:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  *
 423:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  * @param netif The lwip network interface structure for this slipif
 424:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****  */
 425:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** void
 426:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** slipif_poll(struct netif *netif)
 427:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** {
 875              		.loc 1 427 1
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 16
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879 0000 80B5     		push	{r7, lr}
 880              	.LCFI28:
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 14, -4
 884 0002 84B0     		sub	sp, sp, #16
 885              	.LCFI29:
 886              		.cfi_def_cfa_offset 24
 887 0004 00AF     		add	r7, sp, #0
 888              	.LCFI30:
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 428:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   u8_t c;
 429:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   struct slipif_priv *priv;
 430:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 431:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 891              		.loc 1 431 3
 892 0008 7B68     		ldr	r3, [r7, #4]
 893 000a 002B     		cmp	r3, #0
 894 000c 06D1     		bne	.L58
 895              		.loc 1 431 3 is_stmt 0 discriminator 1
 896 000e 154B     		ldr	r3, .L62
ARM GAS  /tmp/cciFBL1K.s 			page 25


 897 0010 40F2AF12 		movw	r2, #431
 898 0014 1449     		ldr	r1, .L62+4
 899 0016 1548     		ldr	r0, .L62+8
 900 0018 FFF7FEFF 		bl	printf
 901              	.L58:
 432:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   LWIP_ASSERT("netif->state != NULL", (netif->state != NULL));
 902              		.loc 1 432 3 is_stmt 1
 903 001c 7B68     		ldr	r3, [r7, #4]
 904 001e 1B6A     		ldr	r3, [r3, #32]
 905 0020 002B     		cmp	r3, #0
 906 0022 06D1     		bne	.L59
 907              		.loc 1 432 3 is_stmt 0 discriminator 1
 908 0024 0F4B     		ldr	r3, .L62
 909 0026 4FF4D872 		mov	r2, #432
 910 002a 1149     		ldr	r1, .L62+12
 911 002c 0F48     		ldr	r0, .L62+8
 912 002e FFF7FEFF 		bl	printf
 913              	.L59:
 433:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 434:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   priv = (struct slipif_priv *)netif->state;
 914              		.loc 1 434 8 is_stmt 1
 915 0032 7B68     		ldr	r3, [r7, #4]
 916 0034 1B6A     		ldr	r3, [r3, #32]
 917 0036 FB60     		str	r3, [r7, #12]
 435:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** 
 436:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   while (sio_tryread(priv->sd, &c, 1) > 0) {
 918              		.loc 1 436 9
 919 0038 04E0     		b	.L60
 920              	.L61:
 437:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     slipif_rxbyte_input(netif, c);
 921              		.loc 1 437 5
 922 003a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 923 003c 1946     		mov	r1, r3
 924 003e 7868     		ldr	r0, [r7, #4]
 925 0040 FFF7FEFF 		bl	slipif_rxbyte_input
 926              	.L60:
 436:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     slipif_rxbyte_input(netif, c);
 927              		.loc 1 436 10
 928 0044 FB68     		ldr	r3, [r7, #12]
 929 0046 1B68     		ldr	r3, [r3]
 930 0048 07F10B01 		add	r1, r7, #11
 931 004c 0122     		movs	r2, #1
 932 004e 1846     		mov	r0, r3
 933 0050 FFF7FEFF 		bl	sio_tryread
 934 0054 0346     		mov	r3, r0
 436:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****     slipif_rxbyte_input(netif, c);
 935              		.loc 1 436 9
 936 0056 002B     		cmp	r3, #0
 937 0058 EFD1     		bne	.L61
 438:Middlewares/Third_Party/LwIP/src/netif/slipif.c ****   }
 439:Middlewares/Third_Party/LwIP/src/netif/slipif.c **** }
 938              		.loc 1 439 1
 939 005a 00BF     		nop
 940 005c 1037     		adds	r7, r7, #16
 941              	.LCFI31:
 942              		.cfi_def_cfa_offset 8
 943 005e BD46     		mov	sp, r7
ARM GAS  /tmp/cciFBL1K.s 			page 26


 944              	.LCFI32:
 945              		.cfi_def_cfa_register 13
 946              		@ sp needed
 947 0060 80BD     		pop	{r7, pc}
 948              	.L63:
 949 0062 00BF     		.align	2
 950              	.L62:
 951 0064 00000000 		.word	.LC0
 952 0068 30000000 		.word	.LC1
 953 006c 40000000 		.word	.LC2
 954 0070 68000000 		.word	.LC3
 955              		.cfi_endproc
 956              	.LFE143:
 958              		.text
 959              	.Letext0:
 960              		.file 2 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_typ
 961              		.file 3 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 962              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 963              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 964              		.file 6 "/home/mego-ros2/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stddef
 965              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 966              		.file 8 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 967              		.file 9 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 968              		.file 10 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 969              		.file 11 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/stdlib.h"
 970              		.file 12 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 971              		.file 13 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/ctype.h"
 972              		.file 14 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 973              		.file 15 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 974              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 975              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 976              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 977              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 978              		.file 20 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 979              		.file 21 "Middlewares/Third_Party/LwIP/src/include/lwip/sio.h"
ARM GAS  /tmp/cciFBL1K.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 slipif.c
     /tmp/cciFBL1K.s:18     .rodata:0000000000000000 $d
     /tmp/cciFBL1K.s:34     .text.slipif_output:0000000000000000 $t
     /tmp/cciFBL1K.s:41     .text.slipif_output:0000000000000000 slipif_output
     /tmp/cciFBL1K.s:216    .text.slipif_output:00000000000000f0 $d
     /tmp/cciFBL1K.s:225    .text.slipif_output_v4:0000000000000000 $t
     /tmp/cciFBL1K.s:231    .text.slipif_output_v4:0000000000000000 slipif_output_v4
     /tmp/cciFBL1K.s:270    .text.slipif_rxbyte:0000000000000000 $t
     /tmp/cciFBL1K.s:276    .text.slipif_rxbyte:0000000000000000 slipif_rxbyte
     /tmp/cciFBL1K.s:582    .text.slipif_rxbyte:000000000000018c $d
     /tmp/cciFBL1K.s:590    .text.slipif_rxbyte_input:0000000000000000 $t
     /tmp/cciFBL1K.s:596    .text.slipif_rxbyte_input:0000000000000000 slipif_rxbyte_input
     /tmp/cciFBL1K.s:656    .text.slipif_loop_thread:0000000000000000 $t
     /tmp/cciFBL1K.s:662    .text.slipif_loop_thread:0000000000000000 slipif_loop_thread
     /tmp/cciFBL1K.s:717    .text.slipif_init:0000000000000000 $t
     /tmp/cciFBL1K.s:724    .text.slipif_init:0000000000000000 slipif_init
     /tmp/cciFBL1K.s:856    .text.slipif_init:00000000000000b8 $d
     /tmp/cciFBL1K.s:866    .text.slipif_poll:0000000000000000 $t
     /tmp/cciFBL1K.s:873    .text.slipif_poll:0000000000000000 slipif_poll
     /tmp/cciFBL1K.s:951    .text.slipif_poll:0000000000000064 $d

UNDEFINED SYMBOLS
printf
sio_send
pbuf_realloc
pbuf_alloc
pbuf_cat
pbuf_free
sio_read
mem_malloc
sio_open
mem_free
sys_thread_new
sio_tryread
