ARM GAS  /tmp/ccjirD2S.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  /tmp/ccjirD2S.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccjirD2S.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
ARM GAS  /tmp/ccjirD2S.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccjirD2S.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  29              		.loc 1 203 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  41              		.loc 1 204 10
  42 0004 0023     		movs	r3, #0
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  43              		.loc 1 205 1
  44 0006 1846     		mov	r0, r3
  45 0008 BD46     		mov	sp, r7
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 13
  48              		@ sp needed
  49 000a 5DF8047B 		ldr	r7, [sp], #4
  50              	.LCFI3:
  51              		.cfi_restore 7
  52              		.cfi_def_cfa_offset 0
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE130:
  57              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  58              		.align	1
  59              		.weak	HAL_RCC_OscConfig
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	HAL_RCC_OscConfig:
  66              	.LFB131:
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccjirD2S.s 			page 6


  67              		.loc 1 222 1
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 24
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              	.LCFI4:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 86B0     		sub	sp, sp, #24
  77              	.LCFI5:
  78              		.cfi_def_cfa_offset 32
  79 0004 00AF     		add	r7, sp, #0
  80              	.LCFI6:
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart, pll_config;
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  83              		.loc 1 226 5
  84 0008 7B68     		ldr	r3, [r7, #4]
  85 000a 002B     		cmp	r3, #0
  86 000c 01D1     		bne	.L4
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  87              		.loc 1 228 12
  88 000e 0123     		movs	r3, #1
  89 0010 5BE2     		b	.L5
  90              	.L4:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  91              		.loc 1 234 25
  92 0012 7B68     		ldr	r3, [r7, #4]
  93 0014 1B68     		ldr	r3, [r3]
  94              		.loc 1 234 43
  95 0016 03F00103 		and	r3, r3, #1
  96              		.loc 1 234 5
  97 001a 002B     		cmp	r3, #0
  98 001c 75D0     		beq	.L6
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  99              		.loc 1 239 9
 100 001e A34B     		ldr	r3, .L59
 101 0020 9B68     		ldr	r3, [r3, #8]
 102 0022 03F00C03 		and	r3, r3, #12
 103              		.loc 1 239 7
 104 0026 042B     		cmp	r3, #4
 105 0028 0CD0     		beq	.L7
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
ARM GAS  /tmp/ccjirD2S.s 			page 7


 106              		.loc 1 240 9 discriminator 1
 107 002a A04B     		ldr	r3, .L59
 108 002c 9B68     		ldr	r3, [r3, #8]
 109 002e 03F00C03 		and	r3, r3, #12
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 110              		.loc 1 239 60 discriminator 1
 111 0032 082B     		cmp	r3, #8
 112 0034 12D1     		bne	.L8
 113              		.loc 1 240 68
 114 0036 9D4B     		ldr	r3, .L59
 115 0038 5B68     		ldr	r3, [r3, #4]
 116              		.loc 1 240 78
 117 003a 03F48003 		and	r3, r3, #4194304
 118              		.loc 1 240 60
 119 003e B3F5800F 		cmp	r3, #4194304
 120 0042 0BD1     		bne	.L8
 121              	.L7:
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 122              		.loc 1 242 11
 123 0044 994B     		ldr	r3, .L59
 124 0046 1B68     		ldr	r3, [r3]
 125 0048 03F40033 		and	r3, r3, #131072
 126              		.loc 1 242 9
 127 004c 002B     		cmp	r3, #0
 128 004e 5BD0     		beq	.L58
 129              		.loc 1 242 78 discriminator 1
 130 0050 7B68     		ldr	r3, [r7, #4]
 131 0052 5B68     		ldr	r3, [r3, #4]
 132              		.loc 1 242 57 discriminator 1
 133 0054 002B     		cmp	r3, #0
 134 0056 57D1     		bne	.L58
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 135              		.loc 1 244 16
 136 0058 0123     		movs	r3, #1
 137 005a 36E2     		b	.L5
 138              	.L8:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 139              		.loc 1 250 7
 140 005c 7B68     		ldr	r3, [r7, #4]
 141 005e 5B68     		ldr	r3, [r3, #4]
 142 0060 B3F5803F 		cmp	r3, #65536
 143 0064 06D1     		bne	.L10
 144              		.loc 1 250 7 is_stmt 0 discriminator 1
 145 0066 914B     		ldr	r3, .L59
 146 0068 1B68     		ldr	r3, [r3]
 147 006a 904A     		ldr	r2, .L59
 148 006c 43F48033 		orr	r3, r3, #65536
 149 0070 1360     		str	r3, [r2]
 150 0072 1DE0     		b	.L11
 151              	.L10:
ARM GAS  /tmp/ccjirD2S.s 			page 8


 152              		.loc 1 250 7 discriminator 2
 153 0074 7B68     		ldr	r3, [r7, #4]
 154 0076 5B68     		ldr	r3, [r3, #4]
 155 0078 B3F5A02F 		cmp	r3, #327680
 156 007c 0CD1     		bne	.L12
 157              		.loc 1 250 7 discriminator 3
 158 007e 8B4B     		ldr	r3, .L59
 159 0080 1B68     		ldr	r3, [r3]
 160 0082 8A4A     		ldr	r2, .L59
 161 0084 43F48023 		orr	r3, r3, #262144
 162 0088 1360     		str	r3, [r2]
 163 008a 884B     		ldr	r3, .L59
 164 008c 1B68     		ldr	r3, [r3]
 165 008e 874A     		ldr	r2, .L59
 166 0090 43F48033 		orr	r3, r3, #65536
 167 0094 1360     		str	r3, [r2]
 168 0096 0BE0     		b	.L11
 169              	.L12:
 170              		.loc 1 250 7 discriminator 4
 171 0098 844B     		ldr	r3, .L59
 172 009a 1B68     		ldr	r3, [r3]
 173 009c 834A     		ldr	r2, .L59
 174 009e 23F48033 		bic	r3, r3, #65536
 175 00a2 1360     		str	r3, [r2]
 176 00a4 814B     		ldr	r3, .L59
 177 00a6 1B68     		ldr	r3, [r3]
 178 00a8 804A     		ldr	r2, .L59
 179 00aa 23F48023 		bic	r3, r3, #262144
 180 00ae 1360     		str	r3, [r2]
 181              	.L11:
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 182              		.loc 1 253 28 is_stmt 1
 183 00b0 7B68     		ldr	r3, [r7, #4]
 184 00b2 5B68     		ldr	r3, [r3, #4]
 185              		.loc 1 253 9
 186 00b4 002B     		cmp	r3, #0
 187 00b6 13D0     		beq	.L13
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 188              		.loc 1 256 21
 189 00b8 FFF7FEFF 		bl	HAL_GetTick
 190 00bc 3861     		str	r0, [r7, #16]
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 191              		.loc 1 259 14
 192 00be 08E0     		b	.L14
 193              	.L15:
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 194              		.loc 1 261 15
 195 00c0 FFF7FEFF 		bl	HAL_GetTick
 196 00c4 0246     		mov	r2, r0
 197              		.loc 1 261 29
ARM GAS  /tmp/ccjirD2S.s 			page 9


 198 00c6 3B69     		ldr	r3, [r7, #16]
 199 00c8 D31A     		subs	r3, r2, r3
 200              		.loc 1 261 13
 201 00ca 642B     		cmp	r3, #100
 202 00cc 01D9     		bls	.L14
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 203              		.loc 1 263 20
 204 00ce 0323     		movs	r3, #3
 205 00d0 FBE1     		b	.L5
 206              	.L14:
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 207              		.loc 1 259 15
 208 00d2 764B     		ldr	r3, .L59
 209 00d4 1B68     		ldr	r3, [r3]
 210 00d6 03F40033 		and	r3, r3, #131072
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 211              		.loc 1 259 14
 212 00da 002B     		cmp	r3, #0
 213 00dc F0D0     		beq	.L15
 214 00de 14E0     		b	.L6
 215              	.L13:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 216              		.loc 1 270 21
 217 00e0 FFF7FEFF 		bl	HAL_GetTick
 218 00e4 3861     		str	r0, [r7, #16]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 219              		.loc 1 273 14
 220 00e6 08E0     		b	.L16
 221              	.L17:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 222              		.loc 1 275 15
 223 00e8 FFF7FEFF 		bl	HAL_GetTick
 224 00ec 0246     		mov	r2, r0
 225              		.loc 1 275 29
 226 00ee 3B69     		ldr	r3, [r7, #16]
 227 00f0 D31A     		subs	r3, r2, r3
 228              		.loc 1 275 13
 229 00f2 642B     		cmp	r3, #100
 230 00f4 01D9     		bls	.L16
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 231              		.loc 1 277 20
 232 00f6 0323     		movs	r3, #3
 233 00f8 E7E1     		b	.L5
 234              	.L16:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 235              		.loc 1 273 15
ARM GAS  /tmp/ccjirD2S.s 			page 10


 236 00fa 6C4B     		ldr	r3, .L59
 237 00fc 1B68     		ldr	r3, [r3]
 238 00fe 03F40033 		and	r3, r3, #131072
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 239              		.loc 1 273 14
 240 0102 002B     		cmp	r3, #0
 241 0104 F0D1     		bne	.L17
 242 0106 00E0     		b	.L6
 243              	.L58:
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244              		.loc 1 242 9
 245 0108 00BF     		nop
 246              	.L6:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 247              		.loc 1 284 25
 248 010a 7B68     		ldr	r3, [r7, #4]
 249 010c 1B68     		ldr	r3, [r3]
 250              		.loc 1 284 43
 251 010e 03F00203 		and	r3, r3, #2
 252              		.loc 1 284 5
 253 0112 002B     		cmp	r3, #0
 254 0114 63D0     		beq	.L18
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 255              		.loc 1 291 9
 256 0116 654B     		ldr	r3, .L59
 257 0118 9B68     		ldr	r3, [r3, #8]
 258 011a 03F00C03 		and	r3, r3, #12
 259              		.loc 1 291 7
 260 011e 002B     		cmp	r3, #0
 261 0120 0BD0     		beq	.L19
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 262              		.loc 1 292 9 discriminator 1
 263 0122 624B     		ldr	r3, .L59
 264 0124 9B68     		ldr	r3, [r3, #8]
 265 0126 03F00C03 		and	r3, r3, #12
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 266              		.loc 1 291 60 discriminator 1
 267 012a 082B     		cmp	r3, #8
 268 012c 1CD1     		bne	.L20
 269              		.loc 1 292 68
 270 012e 5F4B     		ldr	r3, .L59
 271 0130 5B68     		ldr	r3, [r3, #4]
 272              		.loc 1 292 78
 273 0132 03F48003 		and	r3, r3, #4194304
 274              		.loc 1 292 60
ARM GAS  /tmp/ccjirD2S.s 			page 11


 275 0136 002B     		cmp	r3, #0
 276 0138 16D1     		bne	.L20
 277              	.L19:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 278              		.loc 1 295 11
 279 013a 5C4B     		ldr	r3, .L59
 280 013c 1B68     		ldr	r3, [r3]
 281 013e 03F00203 		and	r3, r3, #2
 282              		.loc 1 295 9
 283 0142 002B     		cmp	r3, #0
 284 0144 05D0     		beq	.L21
 285              		.loc 1 295 78 discriminator 1
 286 0146 7B68     		ldr	r3, [r7, #4]
 287 0148 DB68     		ldr	r3, [r3, #12]
 288              		.loc 1 295 57 discriminator 1
 289 014a 012B     		cmp	r3, #1
 290 014c 01D0     		beq	.L21
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 291              		.loc 1 297 16
 292 014e 0123     		movs	r3, #1
 293 0150 BBE1     		b	.L5
 294              	.L21:
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 295              		.loc 1 303 9
 296 0152 564B     		ldr	r3, .L59
 297 0154 1B68     		ldr	r3, [r3]
 298 0156 23F0F802 		bic	r2, r3, #248
 299 015a 7B68     		ldr	r3, [r7, #4]
 300 015c 1B69     		ldr	r3, [r3, #16]
 301 015e DB00     		lsls	r3, r3, #3
 302 0160 5249     		ldr	r1, .L59
 303 0162 1343     		orrs	r3, r3, r2
 304 0164 0B60     		str	r3, [r1]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 305              		.loc 1 295 9
 306 0166 3AE0     		b	.L18
 307              	.L20:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 308              		.loc 1 309 28
 309 0168 7B68     		ldr	r3, [r7, #4]
 310 016a DB68     		ldr	r3, [r3, #12]
 311              		.loc 1 309 9
 312 016c 002B     		cmp	r3, #0
 313 016e 20D0     		beq	.L22
ARM GAS  /tmp/ccjirD2S.s 			page 12


 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 314              		.loc 1 312 9
 315 0170 4F4B     		ldr	r3, .L59+4
 316 0172 0122     		movs	r2, #1
 317 0174 1A60     		str	r2, [r3]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 318              		.loc 1 315 21
 319 0176 FFF7FEFF 		bl	HAL_GetTick
 320 017a 3861     		str	r0, [r7, #16]
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 321              		.loc 1 318 14
 322 017c 08E0     		b	.L23
 323              	.L24:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 324              		.loc 1 320 15
 325 017e FFF7FEFF 		bl	HAL_GetTick
 326 0182 0246     		mov	r2, r0
 327              		.loc 1 320 29
 328 0184 3B69     		ldr	r3, [r7, #16]
 329 0186 D31A     		subs	r3, r2, r3
 330              		.loc 1 320 13
 331 0188 022B     		cmp	r3, #2
 332 018a 01D9     		bls	.L23
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 333              		.loc 1 322 20
 334 018c 0323     		movs	r3, #3
 335 018e 9CE1     		b	.L5
 336              	.L23:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 337              		.loc 1 318 15
 338 0190 464B     		ldr	r3, .L59
 339 0192 1B68     		ldr	r3, [r3]
 340 0194 03F00203 		and	r3, r3, #2
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 341              		.loc 1 318 14
 342 0198 002B     		cmp	r3, #0
 343 019a F0D0     		beq	.L24
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 344              		.loc 1 327 9
 345 019c 434B     		ldr	r3, .L59
 346 019e 1B68     		ldr	r3, [r3]
 347 01a0 23F0F802 		bic	r2, r3, #248
 348 01a4 7B68     		ldr	r3, [r7, #4]
 349 01a6 1B69     		ldr	r3, [r3, #16]
 350 01a8 DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/ccjirD2S.s 			page 13


 351 01aa 4049     		ldr	r1, .L59
 352 01ac 1343     		orrs	r3, r3, r2
 353 01ae 0B60     		str	r3, [r1]
 354 01b0 15E0     		b	.L18
 355              	.L22:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 356              		.loc 1 332 9
 357 01b2 3F4B     		ldr	r3, .L59+4
 358 01b4 0022     		movs	r2, #0
 359 01b6 1A60     		str	r2, [r3]
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 360              		.loc 1 335 21
 361 01b8 FFF7FEFF 		bl	HAL_GetTick
 362 01bc 3861     		str	r0, [r7, #16]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 363              		.loc 1 338 14
 364 01be 08E0     		b	.L25
 365              	.L26:
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 366              		.loc 1 340 15
 367 01c0 FFF7FEFF 		bl	HAL_GetTick
 368 01c4 0246     		mov	r2, r0
 369              		.loc 1 340 29
 370 01c6 3B69     		ldr	r3, [r7, #16]
 371 01c8 D31A     		subs	r3, r2, r3
 372              		.loc 1 340 13
 373 01ca 022B     		cmp	r3, #2
 374 01cc 01D9     		bls	.L25
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 375              		.loc 1 342 20
 376 01ce 0323     		movs	r3, #3
 377 01d0 7BE1     		b	.L5
 378              	.L25:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 379              		.loc 1 338 15
 380 01d2 364B     		ldr	r3, .L59
 381 01d4 1B68     		ldr	r3, [r3]
 382 01d6 03F00203 		and	r3, r3, #2
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 383              		.loc 1 338 14
 384 01da 002B     		cmp	r3, #0
 385 01dc F0D1     		bne	.L26
 386              	.L18:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccjirD2S.s 			page 14


 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 387              		.loc 1 349 25
 388 01de 7B68     		ldr	r3, [r7, #4]
 389 01e0 1B68     		ldr	r3, [r3]
 390              		.loc 1 349 43
 391 01e2 03F00803 		and	r3, r3, #8
 392              		.loc 1 349 5
 393 01e6 002B     		cmp	r3, #0
 394 01e8 30D0     		beq	.L27
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 395              		.loc 1 355 26
 396 01ea 7B68     		ldr	r3, [r7, #4]
 397 01ec 5B69     		ldr	r3, [r3, #20]
 398              		.loc 1 355 7
 399 01ee 002B     		cmp	r3, #0
 400 01f0 16D0     		beq	.L28
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 401              		.loc 1 358 7
 402 01f2 304B     		ldr	r3, .L59+8
 403 01f4 0122     		movs	r2, #1
 404 01f6 1A60     		str	r2, [r3]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 405              		.loc 1 361 19
 406 01f8 FFF7FEFF 		bl	HAL_GetTick
 407 01fc 3861     		str	r0, [r7, #16]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 408              		.loc 1 364 12
 409 01fe 08E0     		b	.L29
 410              	.L30:
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 411              		.loc 1 366 13
 412 0200 FFF7FEFF 		bl	HAL_GetTick
 413 0204 0246     		mov	r2, r0
 414              		.loc 1 366 27
 415 0206 3B69     		ldr	r3, [r7, #16]
 416 0208 D31A     		subs	r3, r2, r3
 417              		.loc 1 366 11
 418 020a 022B     		cmp	r3, #2
 419 020c 01D9     		bls	.L29
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 420              		.loc 1 368 18
 421 020e 0323     		movs	r3, #3
ARM GAS  /tmp/ccjirD2S.s 			page 15


 422 0210 5BE1     		b	.L5
 423              	.L29:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 424              		.loc 1 364 13
 425 0212 264B     		ldr	r3, .L59
 426 0214 5B6F     		ldr	r3, [r3, #116]
 427 0216 03F00203 		and	r3, r3, #2
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 428              		.loc 1 364 12
 429 021a 002B     		cmp	r3, #0
 430 021c F0D0     		beq	.L30
 431 021e 15E0     		b	.L27
 432              	.L28:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 433              		.loc 1 375 7
 434 0220 244B     		ldr	r3, .L59+8
 435 0222 0022     		movs	r2, #0
 436 0224 1A60     		str	r2, [r3]
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 437              		.loc 1 378 19
 438 0226 FFF7FEFF 		bl	HAL_GetTick
 439 022a 3861     		str	r0, [r7, #16]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 440              		.loc 1 381 12
 441 022c 08E0     		b	.L31
 442              	.L32:
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 443              		.loc 1 383 13
 444 022e FFF7FEFF 		bl	HAL_GetTick
 445 0232 0246     		mov	r2, r0
 446              		.loc 1 383 27
 447 0234 3B69     		ldr	r3, [r7, #16]
 448 0236 D31A     		subs	r3, r2, r3
 449              		.loc 1 383 11
 450 0238 022B     		cmp	r3, #2
 451 023a 01D9     		bls	.L31
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 452              		.loc 1 385 18
 453 023c 0323     		movs	r3, #3
 454 023e 44E1     		b	.L5
 455              	.L31:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 456              		.loc 1 381 13
 457 0240 1A4B     		ldr	r3, .L59
 458 0242 5B6F     		ldr	r3, [r3, #116]
ARM GAS  /tmp/ccjirD2S.s 			page 16


 459 0244 03F00203 		and	r3, r3, #2
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 460              		.loc 1 381 12
 461 0248 002B     		cmp	r3, #0
 462 024a F0D1     		bne	.L32
 463              	.L27:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 464              		.loc 1 391 25
 465 024c 7B68     		ldr	r3, [r7, #4]
 466 024e 1B68     		ldr	r3, [r3]
 467              		.loc 1 391 43
 468 0250 03F00403 		and	r3, r3, #4
 469              		.loc 1 391 5
 470 0254 002B     		cmp	r3, #0
 471 0256 00F0A080 		beq	.L33
 472              	.LBB2:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 473              		.loc 1 393 22
 474 025a 0023     		movs	r3, #0
 475 025c FB75     		strb	r3, [r7, #23]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 476              		.loc 1 400 8
 477 025e 134B     		ldr	r3, .L59
 478 0260 1B6C     		ldr	r3, [r3, #64]
 479 0262 03F08053 		and	r3, r3, #268435456
 480              		.loc 1 400 7
 481 0266 002B     		cmp	r3, #0
 482 0268 0FD1     		bne	.L34
 483              	.LBB3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 484              		.loc 1 402 7
 485 026a 0023     		movs	r3, #0
 486 026c BB60     		str	r3, [r7, #8]
 487 026e 0F4B     		ldr	r3, .L59
 488 0270 1B6C     		ldr	r3, [r3, #64]
 489 0272 0E4A     		ldr	r2, .L59
 490 0274 43F08053 		orr	r3, r3, #268435456
 491 0278 1364     		str	r3, [r2, #64]
 492 027a 0C4B     		ldr	r3, .L59
 493 027c 1B6C     		ldr	r3, [r3, #64]
 494 027e 03F08053 		and	r3, r3, #268435456
 495 0282 BB60     		str	r3, [r7, #8]
 496 0284 BB68     		ldr	r3, [r7, #8]
 497              	.LBE3:
ARM GAS  /tmp/ccjirD2S.s 			page 17


 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 498              		.loc 1 403 21
 499 0286 0123     		movs	r3, #1
 500 0288 FB75     		strb	r3, [r7, #23]
 501              	.L34:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 502              		.loc 1 406 8
 503 028a 0B4B     		ldr	r3, .L59+12
 504 028c 1B68     		ldr	r3, [r3]
 505 028e 03F48073 		and	r3, r3, #256
 506              		.loc 1 406 7
 507 0292 002B     		cmp	r3, #0
 508 0294 21D1     		bne	.L35
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 509              		.loc 1 409 7
 510 0296 084B     		ldr	r3, .L59+12
 511 0298 1B68     		ldr	r3, [r3]
 512 029a 074A     		ldr	r2, .L59+12
 513 029c 43F48073 		orr	r3, r3, #256
 514 02a0 1360     		str	r3, [r2]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 515              		.loc 1 412 19
 516 02a2 FFF7FEFF 		bl	HAL_GetTick
 517 02a6 3861     		str	r0, [r7, #16]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 518              		.loc 1 414 12
 519 02a8 11E0     		b	.L36
 520              	.L60:
 521 02aa 00BF     		.align	2
 522              	.L59:
 523 02ac 00380240 		.word	1073887232
 524 02b0 00004742 		.word	1111949312
 525 02b4 800E4742 		.word	1111953024
 526 02b8 00700040 		.word	1073770496
 527              	.L37:
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 528              		.loc 1 416 13
 529 02bc FFF7FEFF 		bl	HAL_GetTick
 530 02c0 0246     		mov	r2, r0
 531              		.loc 1 416 27
 532 02c2 3B69     		ldr	r3, [r7, #16]
 533 02c4 D31A     		subs	r3, r2, r3
 534              		.loc 1 416 11
 535 02c6 022B     		cmp	r3, #2
 536 02c8 01D9     		bls	.L36
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 537              		.loc 1 418 18
 538 02ca 0323     		movs	r3, #3
ARM GAS  /tmp/ccjirD2S.s 			page 18


 539 02cc FDE0     		b	.L5
 540              	.L36:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 541              		.loc 1 414 13
 542 02ce 814B     		ldr	r3, .L61
 543 02d0 1B68     		ldr	r3, [r3]
 544 02d2 03F48073 		and	r3, r3, #256
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 545              		.loc 1 414 12
 546 02d6 002B     		cmp	r3, #0
 547 02d8 F0D0     		beq	.L37
 548              	.L35:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 549              		.loc 1 424 5
 550 02da 7B68     		ldr	r3, [r7, #4]
 551 02dc 9B68     		ldr	r3, [r3, #8]
 552 02de 012B     		cmp	r3, #1
 553 02e0 06D1     		bne	.L38
 554              		.loc 1 424 5 is_stmt 0 discriminator 1
 555 02e2 7D4B     		ldr	r3, .L61+4
 556 02e4 1B6F     		ldr	r3, [r3, #112]
 557 02e6 7C4A     		ldr	r2, .L61+4
 558 02e8 43F00103 		orr	r3, r3, #1
 559 02ec 1367     		str	r3, [r2, #112]
 560 02ee 1CE0     		b	.L39
 561              	.L38:
 562              		.loc 1 424 5 discriminator 2
 563 02f0 7B68     		ldr	r3, [r7, #4]
 564 02f2 9B68     		ldr	r3, [r3, #8]
 565 02f4 052B     		cmp	r3, #5
 566 02f6 0CD1     		bne	.L40
 567              		.loc 1 424 5 discriminator 3
 568 02f8 774B     		ldr	r3, .L61+4
 569 02fa 1B6F     		ldr	r3, [r3, #112]
 570 02fc 764A     		ldr	r2, .L61+4
 571 02fe 43F00403 		orr	r3, r3, #4
 572 0302 1367     		str	r3, [r2, #112]
 573 0304 744B     		ldr	r3, .L61+4
 574 0306 1B6F     		ldr	r3, [r3, #112]
 575 0308 734A     		ldr	r2, .L61+4
 576 030a 43F00103 		orr	r3, r3, #1
 577 030e 1367     		str	r3, [r2, #112]
 578 0310 0BE0     		b	.L39
 579              	.L40:
 580              		.loc 1 424 5 discriminator 4
 581 0312 714B     		ldr	r3, .L61+4
 582 0314 1B6F     		ldr	r3, [r3, #112]
 583 0316 704A     		ldr	r2, .L61+4
 584 0318 23F00103 		bic	r3, r3, #1
 585 031c 1367     		str	r3, [r2, #112]
 586 031e 6E4B     		ldr	r3, .L61+4
 587 0320 1B6F     		ldr	r3, [r3, #112]
ARM GAS  /tmp/ccjirD2S.s 			page 19


 588 0322 6D4A     		ldr	r2, .L61+4
 589 0324 23F00403 		bic	r3, r3, #4
 590 0328 1367     		str	r3, [r2, #112]
 591              	.L39:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 592              		.loc 1 426 26 is_stmt 1
 593 032a 7B68     		ldr	r3, [r7, #4]
 594 032c 9B68     		ldr	r3, [r3, #8]
 595              		.loc 1 426 7
 596 032e 002B     		cmp	r3, #0
 597 0330 15D0     		beq	.L41
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 598              		.loc 1 429 19
 599 0332 FFF7FEFF 		bl	HAL_GetTick
 600 0336 3861     		str	r0, [r7, #16]
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 601              		.loc 1 432 12
 602 0338 0AE0     		b	.L42
 603              	.L43:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 604              		.loc 1 434 13
 605 033a FFF7FEFF 		bl	HAL_GetTick
 606 033e 0246     		mov	r2, r0
 607              		.loc 1 434 27
 608 0340 3B69     		ldr	r3, [r7, #16]
 609 0342 D31A     		subs	r3, r2, r3
 610              		.loc 1 434 11
 611 0344 41F28832 		movw	r2, #5000
 612 0348 9342     		cmp	r3, r2
 613 034a 01D9     		bls	.L42
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 614              		.loc 1 436 18
 615 034c 0323     		movs	r3, #3
 616 034e BCE0     		b	.L5
 617              	.L42:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 618              		.loc 1 432 13
 619 0350 614B     		ldr	r3, .L61+4
 620 0352 1B6F     		ldr	r3, [r3, #112]
 621 0354 03F00203 		and	r3, r3, #2
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 622              		.loc 1 432 12
 623 0358 002B     		cmp	r3, #0
 624 035a EED0     		beq	.L43
 625 035c 14E0     		b	.L44
 626              	.L41:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
ARM GAS  /tmp/ccjirD2S.s 			page 20


 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 627              		.loc 1 443 19
 628 035e FFF7FEFF 		bl	HAL_GetTick
 629 0362 3861     		str	r0, [r7, #16]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 630              		.loc 1 446 12
 631 0364 0AE0     		b	.L45
 632              	.L46:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 633              		.loc 1 448 13
 634 0366 FFF7FEFF 		bl	HAL_GetTick
 635 036a 0246     		mov	r2, r0
 636              		.loc 1 448 27
 637 036c 3B69     		ldr	r3, [r7, #16]
 638 036e D31A     		subs	r3, r2, r3
 639              		.loc 1 448 11
 640 0370 41F28832 		movw	r2, #5000
 641 0374 9342     		cmp	r3, r2
 642 0376 01D9     		bls	.L45
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 643              		.loc 1 450 18
 644 0378 0323     		movs	r3, #3
 645 037a A6E0     		b	.L5
 646              	.L45:
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 647              		.loc 1 446 13
 648 037c 564B     		ldr	r3, .L61+4
 649 037e 1B6F     		ldr	r3, [r3, #112]
 650 0380 03F00203 		and	r3, r3, #2
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 651              		.loc 1 446 12
 652 0384 002B     		cmp	r3, #0
 653 0386 EED1     		bne	.L46
 654              	.L44:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 655              		.loc 1 456 7
 656 0388 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 657 038a 012B     		cmp	r3, #1
 658 038c 05D1     		bne	.L33
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 659              		.loc 1 458 7
 660 038e 524B     		ldr	r3, .L61+4
 661 0390 1B6C     		ldr	r3, [r3, #64]
 662 0392 514A     		ldr	r2, .L61+4
 663 0394 23F08053 		bic	r3, r3, #268435456
ARM GAS  /tmp/ccjirD2S.s 			page 21


 664 0398 1364     		str	r3, [r2, #64]
 665              	.L33:
 666              	.LBE2:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 667              		.loc 1 464 30
 668 039a 7B68     		ldr	r3, [r7, #4]
 669 039c 9B69     		ldr	r3, [r3, #24]
 670              		.loc 1 464 6
 671 039e 002B     		cmp	r3, #0
 672 03a0 00F09280 		beq	.L47
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 673              		.loc 1 467 8
 674 03a4 4C4B     		ldr	r3, .L61+4
 675 03a6 9B68     		ldr	r3, [r3, #8]
 676 03a8 03F00C03 		and	r3, r3, #12
 677              		.loc 1 467 7
 678 03ac 082B     		cmp	r3, #8
 679 03ae 5CD0     		beq	.L48
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 680              		.loc 1 469 33
 681 03b0 7B68     		ldr	r3, [r7, #4]
 682 03b2 9B69     		ldr	r3, [r3, #24]
 683              		.loc 1 469 9
 684 03b4 022B     		cmp	r3, #2
 685 03b6 41D1     		bne	.L49
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 686              		.loc 1 479 9
 687 03b8 484B     		ldr	r3, .L61+8
 688 03ba 0022     		movs	r2, #0
 689 03bc 1A60     		str	r2, [r3]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 690              		.loc 1 482 21
 691 03be FFF7FEFF 		bl	HAL_GetTick
 692 03c2 3861     		str	r0, [r7, #16]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 693              		.loc 1 485 14
ARM GAS  /tmp/ccjirD2S.s 			page 22


 694 03c4 08E0     		b	.L50
 695              	.L51:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 696              		.loc 1 487 15
 697 03c6 FFF7FEFF 		bl	HAL_GetTick
 698 03ca 0246     		mov	r2, r0
 699              		.loc 1 487 29
 700 03cc 3B69     		ldr	r3, [r7, #16]
 701 03ce D31A     		subs	r3, r2, r3
 702              		.loc 1 487 13
 703 03d0 022B     		cmp	r3, #2
 704 03d2 01D9     		bls	.L50
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 705              		.loc 1 489 20
 706 03d4 0323     		movs	r3, #3
 707 03d6 78E0     		b	.L5
 708              	.L50:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 709              		.loc 1 485 15
 710 03d8 3F4B     		ldr	r3, .L61+4
 711 03da 1B68     		ldr	r3, [r3]
 712 03dc 03F00073 		and	r3, r3, #33554432
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 713              		.loc 1 485 14
 714 03e0 002B     		cmp	r3, #0
 715 03e2 F0D1     		bne	.L51
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 716              		.loc 1 494 9
 717 03e4 7B68     		ldr	r3, [r7, #4]
 718 03e6 DA69     		ldr	r2, [r3, #28]
 719 03e8 7B68     		ldr	r3, [r7, #4]
 720 03ea 1B6A     		ldr	r3, [r3, #32]
 721 03ec 1A43     		orrs	r2, r2, r3
 722 03ee 7B68     		ldr	r3, [r7, #4]
 723 03f0 5B6A     		ldr	r3, [r3, #36]
 724 03f2 9B01     		lsls	r3, r3, #6
 725 03f4 1A43     		orrs	r2, r2, r3
 726 03f6 7B68     		ldr	r3, [r7, #4]
 727 03f8 9B6A     		ldr	r3, [r3, #40]
 728 03fa 5B08     		lsrs	r3, r3, #1
 729 03fc 013B     		subs	r3, r3, #1
 730 03fe 1B04     		lsls	r3, r3, #16
 731 0400 1A43     		orrs	r2, r2, r3
 732 0402 7B68     		ldr	r3, [r7, #4]
 733 0404 DB6A     		ldr	r3, [r3, #44]
 734 0406 1B06     		lsls	r3, r3, #24
 735 0408 3349     		ldr	r1, .L61+4
 736 040a 1343     		orrs	r3, r3, r2
 737 040c 4B60     		str	r3, [r1, #4]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
ARM GAS  /tmp/ccjirD2S.s 			page 23


 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 738              		.loc 1 500 9
 739 040e 334B     		ldr	r3, .L61+8
 740 0410 0122     		movs	r2, #1
 741 0412 1A60     		str	r2, [r3]
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 742              		.loc 1 503 21
 743 0414 FFF7FEFF 		bl	HAL_GetTick
 744 0418 3861     		str	r0, [r7, #16]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 745              		.loc 1 506 14
 746 041a 08E0     		b	.L52
 747              	.L53:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 748              		.loc 1 508 15
 749 041c FFF7FEFF 		bl	HAL_GetTick
 750 0420 0246     		mov	r2, r0
 751              		.loc 1 508 29
 752 0422 3B69     		ldr	r3, [r7, #16]
 753 0424 D31A     		subs	r3, r2, r3
 754              		.loc 1 508 13
 755 0426 022B     		cmp	r3, #2
 756 0428 01D9     		bls	.L52
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 757              		.loc 1 510 20
 758 042a 0323     		movs	r3, #3
 759 042c 4DE0     		b	.L5
 760              	.L52:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 761              		.loc 1 506 15
 762 042e 2A4B     		ldr	r3, .L61+4
 763 0430 1B68     		ldr	r3, [r3]
 764 0432 03F00073 		and	r3, r3, #33554432
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 765              		.loc 1 506 14
 766 0436 002B     		cmp	r3, #0
 767 0438 F0D0     		beq	.L53
 768 043a 45E0     		b	.L47
 769              	.L49:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 770              		.loc 1 517 9
 771 043c 274B     		ldr	r3, .L61+8
ARM GAS  /tmp/ccjirD2S.s 			page 24


 772 043e 0022     		movs	r2, #0
 773 0440 1A60     		str	r2, [r3]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 774              		.loc 1 520 21
 775 0442 FFF7FEFF 		bl	HAL_GetTick
 776 0446 3861     		str	r0, [r7, #16]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 777              		.loc 1 523 14
 778 0448 08E0     		b	.L54
 779              	.L55:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 780              		.loc 1 525 15
 781 044a FFF7FEFF 		bl	HAL_GetTick
 782 044e 0246     		mov	r2, r0
 783              		.loc 1 525 29
 784 0450 3B69     		ldr	r3, [r7, #16]
 785 0452 D31A     		subs	r3, r2, r3
 786              		.loc 1 525 13
 787 0454 022B     		cmp	r3, #2
 788 0456 01D9     		bls	.L54
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 789              		.loc 1 527 20
 790 0458 0323     		movs	r3, #3
 791 045a 36E0     		b	.L5
 792              	.L54:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 793              		.loc 1 523 15
 794 045c 1E4B     		ldr	r3, .L61+4
 795 045e 1B68     		ldr	r3, [r3]
 796 0460 03F00073 		and	r3, r3, #33554432
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 797              		.loc 1 523 14
 798 0464 002B     		cmp	r3, #0
 799 0466 F0D1     		bne	.L55
 800 0468 2EE0     		b	.L47
 801              	.L48:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 802              		.loc 1 535 33
 803 046a 7B68     		ldr	r3, [r7, #4]
 804 046c 9B69     		ldr	r3, [r3, #24]
 805              		.loc 1 535 9
 806 046e 012B     		cmp	r3, #1
 807 0470 01D1     		bne	.L56
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccjirD2S.s 			page 25


 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 808              		.loc 1 537 16
 809 0472 0123     		movs	r3, #1
 810 0474 29E0     		b	.L5
 811              	.L56:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 812              		.loc 1 542 25
 813 0476 184B     		ldr	r3, .L61+4
 814              		.loc 1 542 20
 815 0478 5B68     		ldr	r3, [r3, #4]
 816 047a FB60     		str	r3, [r7, #12]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 817              		.loc 1 543 13
 818 047c FB68     		ldr	r3, [r7, #12]
 819 047e 03F48002 		and	r2, r3, #4194304
 820              		.loc 1 543 79
 821 0482 7B68     		ldr	r3, [r7, #4]
 822 0484 DB69     		ldr	r3, [r3, #28]
 823              		.loc 1 543 11
 824 0486 9A42     		cmp	r2, r3
 825 0488 1CD1     		bne	.L57
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 826              		.loc 1 544 13 discriminator 1
 827 048a FB68     		ldr	r3, [r7, #12]
 828 048c 03F03F02 		and	r2, r3, #63
 829              		.loc 1 544 77 discriminator 1
 830 0490 7B68     		ldr	r3, [r7, #4]
 831 0492 1B6A     		ldr	r3, [r3, #32]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 832              		.loc 1 543 91 discriminator 1
 833 0494 9A42     		cmp	r2, r3
 834 0496 15D1     		bne	.L57
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 835              		.loc 1 545 13
 836 0498 FA68     		ldr	r2, [r7, #12]
 837 049a 47F6C073 		movw	r3, #32704
 838 049e 1340     		ands	r3, r3, r2
 839              		.loc 1 545 77
 840 04a0 7A68     		ldr	r2, [r7, #4]
 841 04a2 526A     		ldr	r2, [r2, #36]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 842              		.loc 1 544 84
 843 04a4 9342     		cmp	r3, r2
 844 04a6 0DD1     		bne	.L57
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 845              		.loc 1 546 13
 846 04a8 FB68     		ldr	r3, [r7, #12]
 847 04aa 03F44032 		and	r2, r3, #196608
 848              		.loc 1 546 77
 849 04ae 7B68     		ldr	r3, [r7, #4]
 850 04b0 9B6A     		ldr	r3, [r3, #40]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 851              		.loc 1 545 84
ARM GAS  /tmp/ccjirD2S.s 			page 26


 852 04b2 9A42     		cmp	r2, r3
 853 04b4 06D1     		bne	.L57
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 854              		.loc 1 547 13
 855 04b6 FB68     		ldr	r3, [r7, #12]
 856 04b8 03F07062 		and	r2, r3, #251658240
 857              		.loc 1 547 77
 858 04bc 7B68     		ldr	r3, [r7, #4]
 859 04be DB6A     		ldr	r3, [r3, #44]
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 860              		.loc 1 546 84
 861 04c0 9A42     		cmp	r2, r3
 862 04c2 01D0     		beq	.L47
 863              	.L57:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 864              		.loc 1 549 18
 865 04c4 0123     		movs	r3, #1
 866 04c6 00E0     		b	.L5
 867              	.L47:
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 868              		.loc 1 554 10
 869 04c8 0023     		movs	r3, #0
 870              	.L5:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 871              		.loc 1 555 1
 872 04ca 1846     		mov	r0, r3
 873 04cc 1837     		adds	r7, r7, #24
 874              	.LCFI7:
 875              		.cfi_def_cfa_offset 8
 876 04ce BD46     		mov	sp, r7
 877              	.LCFI8:
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 04d0 80BD     		pop	{r7, pc}
 881              	.L62:
 882 04d2 00BF     		.align	2
 883              	.L61:
 884 04d4 00700040 		.word	1073770496
 885 04d8 00380240 		.word	1073887232
 886 04dc 60004742 		.word	1111949408
 887              		.cfi_endproc
 888              	.LFE131:
 890              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 891              		.align	1
 892              		.global	HAL_RCC_ClockConfig
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv4-sp-d16
 898              	HAL_RCC_ClockConfig:
 899              	.LFB132:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccjirD2S.s 			page 27


 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 900              		.loc 1 583 1
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 16
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 80B5     		push	{r7, lr}
 905              	.LCFI9:
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 84B0     		sub	sp, sp, #16
 910              	.LCFI10:
 911              		.cfi_def_cfa_offset 24
 912 0004 00AF     		add	r7, sp, #0
 913              	.LCFI11:
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
 916 0008 3960     		str	r1, [r7]
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 917              		.loc 1 587 5
 918 000a 7B68     		ldr	r3, [r7, #4]
 919 000c 002B     		cmp	r3, #0
 920 000e 01D1     		bne	.L64
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 921              		.loc 1 589 12
 922 0010 0123     		movs	r3, #1
 923 0012 CCE0     		b	.L65
ARM GAS  /tmp/ccjirD2S.s 			page 28


 924              	.L64:
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 925              		.loc 1 601 17
 926 0014 684B     		ldr	r3, .L81
 927 0016 1B68     		ldr	r3, [r3]
 928 0018 03F00F03 		and	r3, r3, #15
 929              		.loc 1 601 5
 930 001c 3A68     		ldr	r2, [r7]
 931 001e 9A42     		cmp	r2, r3
 932 0020 0CD9     		bls	.L66
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 933              		.loc 1 604 5
 934 0022 654B     		ldr	r3, .L81
 935 0024 3A68     		ldr	r2, [r7]
 936 0026 D2B2     		uxtb	r2, r2
 937 0028 1A70     		strb	r2, [r3]
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 938              		.loc 1 608 8
 939 002a 634B     		ldr	r3, .L81
 940 002c 1B68     		ldr	r3, [r3]
 941 002e 03F00F03 		and	r3, r3, #15
 942              		.loc 1 608 7
 943 0032 3A68     		ldr	r2, [r7]
 944 0034 9A42     		cmp	r2, r3
 945 0036 01D0     		beq	.L66
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 946              		.loc 1 610 14
 947 0038 0123     		movs	r3, #1
 948 003a B8E0     		b	.L65
 949              	.L66:
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 950              		.loc 1 615 25
 951 003c 7B68     		ldr	r3, [r7, #4]
 952 003e 1B68     		ldr	r3, [r3]
 953              		.loc 1 615 38
 954 0040 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccjirD2S.s 			page 29


 955              		.loc 1 615 5
 956 0044 002B     		cmp	r3, #0
 957 0046 20D0     		beq	.L67
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 958              		.loc 1 619 27
 959 0048 7B68     		ldr	r3, [r7, #4]
 960 004a 1B68     		ldr	r3, [r3]
 961              		.loc 1 619 40
 962 004c 03F00403 		and	r3, r3, #4
 963              		.loc 1 619 7
 964 0050 002B     		cmp	r3, #0
 965 0052 05D0     		beq	.L68
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 966              		.loc 1 621 7
 967 0054 594B     		ldr	r3, .L81+4
 968 0056 9B68     		ldr	r3, [r3, #8]
 969 0058 584A     		ldr	r2, .L81+4
 970 005a 43F4E053 		orr	r3, r3, #7168
 971 005e 9360     		str	r3, [r2, #8]
 972              	.L68:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 973              		.loc 1 624 27
 974 0060 7B68     		ldr	r3, [r7, #4]
 975 0062 1B68     		ldr	r3, [r3]
 976              		.loc 1 624 40
 977 0064 03F00803 		and	r3, r3, #8
 978              		.loc 1 624 7
 979 0068 002B     		cmp	r3, #0
 980 006a 05D0     		beq	.L69
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 981              		.loc 1 626 7
 982 006c 534B     		ldr	r3, .L81+4
 983 006e 9B68     		ldr	r3, [r3, #8]
 984 0070 524A     		ldr	r2, .L81+4
 985 0072 43F46043 		orr	r3, r3, #57344
 986 0076 9360     		str	r3, [r2, #8]
 987              	.L69:
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 988              		.loc 1 630 5
 989 0078 504B     		ldr	r3, .L81+4
 990 007a 9B68     		ldr	r3, [r3, #8]
 991 007c 23F0F002 		bic	r2, r3, #240
 992 0080 7B68     		ldr	r3, [r7, #4]
 993 0082 9B68     		ldr	r3, [r3, #8]
 994 0084 4D49     		ldr	r1, .L81+4
 995 0086 1343     		orrs	r3, r3, r2
 996 0088 8B60     		str	r3, [r1, #8]
ARM GAS  /tmp/ccjirD2S.s 			page 30


 997              	.L67:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 998              		.loc 1 634 25
 999 008a 7B68     		ldr	r3, [r7, #4]
 1000 008c 1B68     		ldr	r3, [r3]
 1001              		.loc 1 634 38
 1002 008e 03F00103 		and	r3, r3, #1
 1003              		.loc 1 634 5
 1004 0092 002B     		cmp	r3, #0
 1005 0094 44D0     		beq	.L70
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1006              		.loc 1 639 25
 1007 0096 7B68     		ldr	r3, [r7, #4]
 1008 0098 5B68     		ldr	r3, [r3, #4]
 1009              		.loc 1 639 7
 1010 009a 012B     		cmp	r3, #1
 1011 009c 07D1     		bne	.L71
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1012              		.loc 1 642 10
 1013 009e 474B     		ldr	r3, .L81+4
 1014 00a0 1B68     		ldr	r3, [r3]
 1015 00a2 03F40033 		and	r3, r3, #131072
 1016              		.loc 1 642 9
 1017 00a6 002B     		cmp	r3, #0
 1018 00a8 19D1     		bne	.L72
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1019              		.loc 1 644 16
 1020 00aa 0123     		movs	r3, #1
 1021 00ac 7FE0     		b	.L65
 1022              	.L71:
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 1023              		.loc 1 648 31
 1024 00ae 7B68     		ldr	r3, [r7, #4]
 1025 00b0 5B68     		ldr	r3, [r3, #4]
 1026              		.loc 1 648 12
 1027 00b2 022B     		cmp	r3, #2
 1028 00b4 03D0     		beq	.L73
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1029              		.loc 1 649 31 discriminator 1
 1030 00b6 7B68     		ldr	r3, [r7, #4]
 1031 00b8 5B68     		ldr	r3, [r3, #4]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1032              		.loc 1 648 76 discriminator 1
 1033 00ba 032B     		cmp	r3, #3
ARM GAS  /tmp/ccjirD2S.s 			page 31


 1034 00bc 07D1     		bne	.L74
 1035              	.L73:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1036              		.loc 1 652 10
 1037 00be 3F4B     		ldr	r3, .L81+4
 1038 00c0 1B68     		ldr	r3, [r3]
 1039 00c2 03F00073 		and	r3, r3, #33554432
 1040              		.loc 1 652 9
 1041 00c6 002B     		cmp	r3, #0
 1042 00c8 09D1     		bne	.L72
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1043              		.loc 1 654 16
 1044 00ca 0123     		movs	r3, #1
 1045 00cc 6FE0     		b	.L65
 1046              	.L74:
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1047              		.loc 1 661 10
 1048 00ce 3B4B     		ldr	r3, .L81+4
 1049 00d0 1B68     		ldr	r3, [r3]
 1050 00d2 03F00203 		and	r3, r3, #2
 1051              		.loc 1 661 9
 1052 00d6 002B     		cmp	r3, #0
 1053 00d8 01D1     		bne	.L72
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1054              		.loc 1 663 16
 1055 00da 0123     		movs	r3, #1
 1056 00dc 67E0     		b	.L65
 1057              	.L72:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1058              		.loc 1 667 5
 1059 00de 374B     		ldr	r3, .L81+4
 1060 00e0 9B68     		ldr	r3, [r3, #8]
 1061 00e2 23F00302 		bic	r2, r3, #3
 1062 00e6 7B68     		ldr	r3, [r7, #4]
 1063 00e8 5B68     		ldr	r3, [r3, #4]
 1064 00ea 3449     		ldr	r1, .L81+4
 1065 00ec 1343     		orrs	r3, r3, r2
 1066 00ee 8B60     		str	r3, [r1, #8]
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1067              		.loc 1 670 17
 1068 00f0 FFF7FEFF 		bl	HAL_GetTick
 1069 00f4 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccjirD2S.s 			page 32


 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1070              		.loc 1 672 11
 1071 00f6 0AE0     		b	.L76
 1072              	.L77:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1073              		.loc 1 674 12
 1074 00f8 FFF7FEFF 		bl	HAL_GetTick
 1075 00fc 0246     		mov	r2, r0
 1076              		.loc 1 674 26
 1077 00fe FB68     		ldr	r3, [r7, #12]
 1078 0100 D31A     		subs	r3, r2, r3
 1079              		.loc 1 674 10
 1080 0102 41F28832 		movw	r2, #5000
 1081 0106 9342     		cmp	r3, r2
 1082 0108 01D9     		bls	.L76
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1083              		.loc 1 676 16
 1084 010a 0323     		movs	r3, #3
 1085 010c 4FE0     		b	.L65
 1086              	.L76:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1087              		.loc 1 672 12
 1088 010e 2B4B     		ldr	r3, .L81+4
 1089 0110 9B68     		ldr	r3, [r3, #8]
 1090 0112 03F00C02 		and	r2, r3, #12
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1091              		.loc 1 672 63
 1092 0116 7B68     		ldr	r3, [r7, #4]
 1093 0118 5B68     		ldr	r3, [r3, #4]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1094              		.loc 1 672 78
 1095 011a 9B00     		lsls	r3, r3, #2
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1096              		.loc 1 672 11
 1097 011c 9A42     		cmp	r2, r3
 1098 011e EBD1     		bne	.L77
 1099              	.L70:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1100              		.loc 1 682 17
 1101 0120 254B     		ldr	r3, .L81
 1102 0122 1B68     		ldr	r3, [r3]
 1103 0124 03F00F03 		and	r3, r3, #15
 1104              		.loc 1 682 5
 1105 0128 3A68     		ldr	r2, [r7]
 1106 012a 9A42     		cmp	r2, r3
 1107 012c 0CD2     		bcs	.L78
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
ARM GAS  /tmp/ccjirD2S.s 			page 33


 1108              		.loc 1 685 5
 1109 012e 224B     		ldr	r3, .L81
 1110 0130 3A68     		ldr	r2, [r7]
 1111 0132 D2B2     		uxtb	r2, r2
 1112 0134 1A70     		strb	r2, [r3]
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1113              		.loc 1 689 8
 1114 0136 204B     		ldr	r3, .L81
 1115 0138 1B68     		ldr	r3, [r3]
 1116 013a 03F00F03 		and	r3, r3, #15
 1117              		.loc 1 689 7
 1118 013e 3A68     		ldr	r2, [r7]
 1119 0140 9A42     		cmp	r2, r3
 1120 0142 01D0     		beq	.L78
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1121              		.loc 1 691 14
 1122 0144 0123     		movs	r3, #1
 1123 0146 32E0     		b	.L65
 1124              	.L78:
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1125              		.loc 1 696 25
 1126 0148 7B68     		ldr	r3, [r7, #4]
 1127 014a 1B68     		ldr	r3, [r3]
 1128              		.loc 1 696 38
 1129 014c 03F00403 		and	r3, r3, #4
 1130              		.loc 1 696 5
 1131 0150 002B     		cmp	r3, #0
 1132 0152 08D0     		beq	.L79
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1133              		.loc 1 699 5
 1134 0154 194B     		ldr	r3, .L81+4
 1135 0156 9B68     		ldr	r3, [r3, #8]
 1136 0158 23F4E052 		bic	r2, r3, #7168
 1137 015c 7B68     		ldr	r3, [r7, #4]
 1138 015e DB68     		ldr	r3, [r3, #12]
 1139 0160 1649     		ldr	r1, .L81+4
 1140 0162 1343     		orrs	r3, r3, r2
 1141 0164 8B60     		str	r3, [r1, #8]
 1142              	.L79:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1143              		.loc 1 703 25
 1144 0166 7B68     		ldr	r3, [r7, #4]
 1145 0168 1B68     		ldr	r3, [r3]
 1146              		.loc 1 703 38
ARM GAS  /tmp/ccjirD2S.s 			page 34


 1147 016a 03F00803 		and	r3, r3, #8
 1148              		.loc 1 703 5
 1149 016e 002B     		cmp	r3, #0
 1150 0170 09D0     		beq	.L80
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1151              		.loc 1 706 5
 1152 0172 124B     		ldr	r3, .L81+4
 1153 0174 9B68     		ldr	r3, [r3, #8]
 1154 0176 23F46042 		bic	r2, r3, #57344
 1155 017a 7B68     		ldr	r3, [r7, #4]
 1156 017c 1B69     		ldr	r3, [r3, #16]
 1157 017e DB00     		lsls	r3, r3, #3
 1158 0180 0E49     		ldr	r1, .L81+4
 1159 0182 1343     		orrs	r3, r3, r2
 1160 0184 8B60     		str	r3, [r1, #8]
 1161              	.L80:
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1162              		.loc 1 710 21
 1163 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1164 018a 0146     		mov	r1, r0
 1165              		.loc 1 710 68
 1166 018c 0B4B     		ldr	r3, .L81+4
 1167 018e 9B68     		ldr	r3, [r3, #8]
 1168              		.loc 1 710 91
 1169 0190 1B09     		lsrs	r3, r3, #4
 1170 0192 03F00F03 		and	r3, r3, #15
 1171              		.loc 1 710 63
 1172 0196 0A4A     		ldr	r2, .L81+8
 1173 0198 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1174              		.loc 1 710 47
 1175 019a 21FA03F3 		lsr	r3, r1, r3
 1176              		.loc 1 710 19
 1177 019e 094A     		ldr	r2, .L81+12
 1178 01a0 1360     		str	r3, [r2]
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 1179              		.loc 1 713 3
 1180 01a2 094B     		ldr	r3, .L81+16
 1181 01a4 1B68     		ldr	r3, [r3]
 1182 01a6 1846     		mov	r0, r3
 1183 01a8 FFF7FEFF 		bl	HAL_InitTick
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1184              		.loc 1 715 10
 1185 01ac 0023     		movs	r3, #0
 1186              	.L65:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1187              		.loc 1 716 1
 1188 01ae 1846     		mov	r0, r3
 1189 01b0 1037     		adds	r7, r7, #16
 1190              	.LCFI12:
ARM GAS  /tmp/ccjirD2S.s 			page 35


 1191              		.cfi_def_cfa_offset 8
 1192 01b2 BD46     		mov	sp, r7
 1193              	.LCFI13:
 1194              		.cfi_def_cfa_register 13
 1195              		@ sp needed
 1196 01b4 80BD     		pop	{r7, pc}
 1197              	.L82:
 1198 01b6 00BF     		.align	2
 1199              	.L81:
 1200 01b8 003C0240 		.word	1073888256
 1201 01bc 00380240 		.word	1073887232
 1202 01c0 00000000 		.word	AHBPrescTable
 1203 01c4 00000000 		.word	SystemCoreClock
 1204 01c8 00000000 		.word	uwTickPrio
 1205              		.cfi_endproc
 1206              	.LFE132:
 1208              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1209              		.align	1
 1210              		.global	HAL_RCC_MCOConfig
 1211              		.syntax unified
 1212              		.thumb
 1213              		.thumb_func
 1214              		.fpu fpv4-sp-d16
 1216              	HAL_RCC_MCOConfig:
 1217              	.LFB133:
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
ARM GAS  /tmp/ccjirD2S.s 			page 36


 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1218              		.loc 1 767 1
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 48
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222 0000 80B5     		push	{r7, lr}
 1223              	.LCFI14:
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 8CB0     		sub	sp, sp, #48
 1228              	.LCFI15:
 1229              		.cfi_def_cfa_offset 56
 1230 0004 00AF     		add	r7, sp, #0
 1231              	.LCFI16:
 1232              		.cfi_def_cfa_register 7
 1233 0006 F860     		str	r0, [r7, #12]
 1234 0008 B960     		str	r1, [r7, #8]
 1235 000a 7A60     		str	r2, [r7, #4]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1236              		.loc 1 773 5
 1237 000c FB68     		ldr	r3, [r7, #12]
 1238 000e 002B     		cmp	r3, #0
 1239 0010 29D1     		bne	.L84
 1240              	.LBB4:
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1241              		.loc 1 778 5
 1242 0012 0023     		movs	r3, #0
 1243 0014 BB61     		str	r3, [r7, #24]
 1244 0016 2B4B     		ldr	r3, .L87
ARM GAS  /tmp/ccjirD2S.s 			page 37


 1245 0018 1B6B     		ldr	r3, [r3, #48]
 1246 001a 2A4A     		ldr	r2, .L87
 1247 001c 43F00103 		orr	r3, r3, #1
 1248 0020 1363     		str	r3, [r2, #48]
 1249 0022 284B     		ldr	r3, .L87
 1250 0024 1B6B     		ldr	r3, [r3, #48]
 1251 0026 03F00103 		and	r3, r3, #1
 1252 002a BB61     		str	r3, [r7, #24]
 1253 002c BB69     		ldr	r3, [r7, #24]
 1254              	.LBE4:
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1255              		.loc 1 781 25
 1256 002e 4FF48073 		mov	r3, #256
 1257 0032 FB61     		str	r3, [r7, #28]
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1258              		.loc 1 782 26
 1259 0034 0223     		movs	r3, #2
 1260 0036 3B62     		str	r3, [r7, #32]
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1261              		.loc 1 783 27
 1262 0038 0323     		movs	r3, #3
 1263 003a BB62     		str	r3, [r7, #40]
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1264              		.loc 1 784 26
 1265 003c 0023     		movs	r3, #0
 1266 003e 7B62     		str	r3, [r7, #36]
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1267              		.loc 1 785 31
 1268 0040 0023     		movs	r3, #0
 1269 0042 FB62     		str	r3, [r7, #44]
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1270              		.loc 1 786 5
 1271 0044 07F11C03 		add	r3, r7, #28
 1272 0048 1946     		mov	r1, r3
 1273 004a 1F48     		ldr	r0, .L87+4
 1274 004c FFF7FEFF 		bl	HAL_GPIO_Init
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1275              		.loc 1 789 5
 1276 0050 1C4B     		ldr	r3, .L87
 1277 0052 9B68     		ldr	r3, [r3, #8]
 1278 0054 23F0EC62 		bic	r2, r3, #123731968
 1279 0058 B968     		ldr	r1, [r7, #8]
 1280 005a 7B68     		ldr	r3, [r7, #4]
 1281 005c 0B43     		orrs	r3, r3, r1
 1282 005e 1949     		ldr	r1, .L87
 1283 0060 1343     		orrs	r3, r3, r2
 1284 0062 8B60     		str	r3, [r1, #8]
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccjirD2S.s 			page 38


 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1285              		.loc 1 821 1
 1286 0064 29E0     		b	.L86
 1287              	.L84:
 1288              	.LBB5:
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1289              		.loc 1 802 5
 1290 0066 0023     		movs	r3, #0
 1291 0068 7B61     		str	r3, [r7, #20]
 1292 006a 164B     		ldr	r3, .L87
 1293 006c 1B6B     		ldr	r3, [r3, #48]
 1294 006e 154A     		ldr	r2, .L87
 1295 0070 43F00403 		orr	r3, r3, #4
 1296 0074 1363     		str	r3, [r2, #48]
 1297 0076 134B     		ldr	r3, .L87
 1298 0078 1B6B     		ldr	r3, [r3, #48]
 1299 007a 03F00403 		and	r3, r3, #4
 1300 007e 7B61     		str	r3, [r7, #20]
 1301 0080 7B69     		ldr	r3, [r7, #20]
 1302              	.LBE5:
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1303              		.loc 1 805 25
 1304 0082 4FF40073 		mov	r3, #512
 1305 0086 FB61     		str	r3, [r7, #28]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1306              		.loc 1 806 26
 1307 0088 0223     		movs	r3, #2
 1308 008a 3B62     		str	r3, [r7, #32]
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1309              		.loc 1 807 27
 1310 008c 0323     		movs	r3, #3
 1311 008e BB62     		str	r3, [r7, #40]
ARM GAS  /tmp/ccjirD2S.s 			page 39


 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1312              		.loc 1 808 26
 1313 0090 0023     		movs	r3, #0
 1314 0092 7B62     		str	r3, [r7, #36]
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1315              		.loc 1 809 31
 1316 0094 0023     		movs	r3, #0
 1317 0096 FB62     		str	r3, [r7, #44]
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1318              		.loc 1 810 5
 1319 0098 07F11C03 		add	r3, r7, #28
 1320 009c 1946     		mov	r1, r3
 1321 009e 0B48     		ldr	r0, .L87+8
 1322 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1323              		.loc 1 813 5
 1324 00a4 074B     		ldr	r3, .L87
 1325 00a6 9B68     		ldr	r3, [r3, #8]
 1326 00a8 23F07842 		bic	r2, r3, #-134217728
 1327 00ac 7B68     		ldr	r3, [r7, #4]
 1328 00ae D900     		lsls	r1, r3, #3
 1329 00b0 BB68     		ldr	r3, [r7, #8]
 1330 00b2 0B43     		orrs	r3, r3, r1
 1331 00b4 0349     		ldr	r1, .L87
 1332 00b6 1343     		orrs	r3, r3, r2
 1333 00b8 8B60     		str	r3, [r1, #8]
 1334              	.L86:
 1335              		.loc 1 821 1
 1336 00ba 00BF     		nop
 1337 00bc 3037     		adds	r7, r7, #48
 1338              	.LCFI17:
 1339              		.cfi_def_cfa_offset 8
 1340 00be BD46     		mov	sp, r7
 1341              	.LCFI18:
 1342              		.cfi_def_cfa_register 13
 1343              		@ sp needed
 1344 00c0 80BD     		pop	{r7, pc}
 1345              	.L88:
 1346 00c2 00BF     		.align	2
 1347              	.L87:
 1348 00c4 00380240 		.word	1073887232
 1349 00c8 00000240 		.word	1073872896
 1350 00cc 00080240 		.word	1073874944
 1351              		.cfi_endproc
 1352              	.LFE133:
 1354              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1355              		.align	1
 1356              		.global	HAL_RCC_EnableCSS
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu fpv4-sp-d16
 1362              	HAL_RCC_EnableCSS:
 1363              	.LFB134:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
ARM GAS  /tmp/ccjirD2S.s 			page 40


 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1364              		.loc 1 833 1
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 0000 80B4     		push	{r7}
 1370              	.LCFI19:
 1371              		.cfi_def_cfa_offset 4
 1372              		.cfi_offset 7, -4
 1373 0002 00AF     		add	r7, sp, #0
 1374              	.LCFI20:
 1375              		.cfi_def_cfa_register 7
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1376              		.loc 1 834 3
 1377 0004 034B     		ldr	r3, .L90
 1378              		.loc 1 834 38
 1379 0006 0122     		movs	r2, #1
 1380 0008 1A60     		str	r2, [r3]
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1381              		.loc 1 835 1
 1382 000a 00BF     		nop
 1383 000c BD46     		mov	sp, r7
 1384              	.LCFI21:
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 000e 5DF8047B 		ldr	r7, [sp], #4
 1388              	.LCFI22:
 1389              		.cfi_restore 7
 1390              		.cfi_def_cfa_offset 0
 1391 0012 7047     		bx	lr
 1392              	.L91:
 1393              		.align	2
 1394              	.L90:
 1395 0014 4C004742 		.word	1111949388
 1396              		.cfi_endproc
 1397              	.LFE134:
 1399              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1400              		.align	1
 1401              		.global	HAL_RCC_DisableCSS
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	HAL_RCC_DisableCSS:
 1408              	.LFB135:
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
ARM GAS  /tmp/ccjirD2S.s 			page 41


 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1409              		.loc 1 842 1
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
 1414 0000 80B4     		push	{r7}
 1415              	.LCFI23:
 1416              		.cfi_def_cfa_offset 4
 1417              		.cfi_offset 7, -4
 1418 0002 00AF     		add	r7, sp, #0
 1419              	.LCFI24:
 1420              		.cfi_def_cfa_register 7
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1421              		.loc 1 843 3
 1422 0004 034B     		ldr	r3, .L93
 1423              		.loc 1 843 38
 1424 0006 0022     		movs	r2, #0
 1425 0008 1A60     		str	r2, [r3]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1426              		.loc 1 844 1
 1427 000a 00BF     		nop
 1428 000c BD46     		mov	sp, r7
 1429              	.LCFI25:
 1430              		.cfi_def_cfa_register 13
 1431              		@ sp needed
 1432 000e 5DF8047B 		ldr	r7, [sp], #4
 1433              	.LCFI26:
 1434              		.cfi_restore 7
 1435              		.cfi_def_cfa_offset 0
 1436 0012 7047     		bx	lr
 1437              	.L94:
 1438              		.align	2
 1439              	.L93:
 1440 0014 4C004742 		.word	1111949388
 1441              		.cfi_endproc
 1442              	.LFE135:
 1444              		.global	__aeabi_uldivmod
 1445              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1446              		.align	1
 1447              		.weak	HAL_RCC_GetSysClockFreq
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	HAL_RCC_GetSysClockFreq:
 1454              	.LFB136:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
ARM GAS  /tmp/ccjirD2S.s 			page 42


 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1455              		.loc 1 877 1
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 16
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1460              	.LCFI27:
 1461              		.cfi_def_cfa_offset 20
 1462              		.cfi_offset 4, -20
 1463              		.cfi_offset 5, -16
 1464              		.cfi_offset 6, -12
 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 85B0     		sub	sp, sp, #20
 1468              	.LCFI28:
 1469              		.cfi_def_cfa_offset 40
 1470 0004 00AF     		add	r7, sp, #0
 1471              	.LCFI29:
 1472              		.cfi_def_cfa_register 7
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1473              		.loc 1 878 12
 1474 0006 0022     		movs	r2, #0
 1475 0008 7A60     		str	r2, [r7, #4]
 1476              		.loc 1 878 23
 1477 000a 0022     		movs	r2, #0
 1478 000c FA60     		str	r2, [r7, #12]
 1479              		.loc 1 878 36
 1480 000e 0022     		movs	r2, #0
 1481 0010 3A60     		str	r2, [r7]
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1482              		.loc 1 879 12
 1483 0012 0022     		movs	r2, #0
ARM GAS  /tmp/ccjirD2S.s 			page 43


 1484 0014 BA60     		str	r2, [r7, #8]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1485              		.loc 1 882 14
 1486 0016 504A     		ldr	r2, .L103
 1487 0018 9268     		ldr	r2, [r2, #8]
 1488              		.loc 1 882 21
 1489 001a 02F00C02 		and	r2, r2, #12
 1490              		.loc 1 882 3
 1491 001e 042A     		cmp	r2, #4
 1492 0020 07D0     		beq	.L96
 1493 0022 082A     		cmp	r2, #8
 1494 0024 08D0     		beq	.L97
 1495 0026 002A     		cmp	r2, #0
 1496 0028 40F08E80 		bne	.L98
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1497              		.loc 1 886 20
 1498 002c 4B4B     		ldr	r3, .L103+4
 1499 002e BB60     		str	r3, [r7, #8]
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1500              		.loc 1 887 8
 1501 0030 8DE0     		b	.L99
 1502              	.L96:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1503              		.loc 1 891 20
 1504 0032 4B4B     		ldr	r3, .L103+8
 1505 0034 BB60     		str	r3, [r7, #8]
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1506              		.loc 1 892 7
 1507 0036 8AE0     		b	.L99
 1508              	.L97:
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1509              		.loc 1 898 17
 1510 0038 474A     		ldr	r2, .L103
 1511 003a 5268     		ldr	r2, [r2, #4]
 1512              		.loc 1 898 12
 1513 003c 02F03F02 		and	r2, r2, #63
 1514 0040 7A60     		str	r2, [r7, #4]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1515              		.loc 1 899 10
 1516 0042 454A     		ldr	r2, .L103
 1517 0044 5268     		ldr	r2, [r2, #4]
 1518 0046 02F48002 		and	r2, r2, #4194304
 1519              		.loc 1 899 9
 1520 004a 002A     		cmp	r2, #0
ARM GAS  /tmp/ccjirD2S.s 			page 44


 1521 004c 24D0     		beq	.L100
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1522              		.loc 1 902 72
 1523 004e 424A     		ldr	r2, .L103
 1524 0050 5268     		ldr	r2, [r2, #4]
 1525              		.loc 1 902 102
 1526 0052 9209     		lsrs	r2, r2, #6
 1527              		.loc 1 902 56
 1528 0054 1146     		mov	r1, r2
 1529 0056 4FF00002 		mov	r2, #0
 1530 005a 40F2FF15 		movw	r5, #511
 1531 005e 4FF00006 		mov	r6, #0
 1532 0062 01EA0503 		and	r3, r1, r5
 1533 0066 02EA0604 		and	r4, r2, r6
 1534              		.loc 1 902 53
 1535 006a 3D4A     		ldr	r2, .L103+8
 1536 006c 02FB04F1 		mul	r1, r2, r4
 1537 0070 0022     		movs	r2, #0
 1538 0072 02FB03F2 		mul	r2, r2, r3
 1539 0076 0A44     		add	r2, r2, r1
 1540 0078 3949     		ldr	r1, .L103+8
 1541 007a A3FB0101 		umull	r0, r1, r3, r1
 1542 007e 5318     		adds	r3, r2, r1
 1543 0080 1946     		mov	r1, r3
 1544              		.loc 1 902 132
 1545 0082 7B68     		ldr	r3, [r7, #4]
 1546 0084 4FF00004 		mov	r4, #0
 1547              		.loc 1 902 130
 1548 0088 1A46     		mov	r2, r3
 1549 008a 2346     		mov	r3, r4
 1550 008c FFF7FEFF 		bl	__aeabi_uldivmod
 1551              	.LVL0:
 1552 0090 0346     		mov	r3, r0
 1553 0092 0C46     		mov	r4, r1
 1554              		.loc 1 902 16
 1555 0094 FB60     		str	r3, [r7, #12]
 1556 0096 49E0     		b	.L101
 1557              	.L100:
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1558              		.loc 1 907 72
 1559 0098 2F4B     		ldr	r3, .L103
 1560 009a 5B68     		ldr	r3, [r3, #4]
 1561              		.loc 1 907 102
 1562 009c 9B09     		lsrs	r3, r3, #6
 1563              		.loc 1 907 56
 1564 009e 4FF00004 		mov	r4, #0
 1565 00a2 40F2FF11 		movw	r1, #511
 1566 00a6 4FF00002 		mov	r2, #0
 1567 00aa 03EA0105 		and	r5, r3, r1
 1568 00ae 04EA0206 		and	r6, r4, r2
 1569              		.loc 1 907 53
ARM GAS  /tmp/ccjirD2S.s 			page 45


 1570 00b2 2946     		mov	r1, r5
 1571 00b4 3246     		mov	r2, r6
 1572 00b6 4FF00003 		mov	r3, #0
 1573 00ba 4FF00004 		mov	r4, #0
 1574 00be 5401     		lsls	r4, r2, #5
 1575 00c0 44EAD164 		orr	r4, r4, r1, lsr #27
 1576 00c4 4B01     		lsls	r3, r1, #5
 1577 00c6 1946     		mov	r1, r3
 1578 00c8 2246     		mov	r2, r4
 1579 00ca 491B     		subs	r1, r1, r5
 1580 00cc 62EB0602 		sbc	r2, r2, r6
 1581 00d0 4FF00003 		mov	r3, #0
 1582 00d4 4FF00004 		mov	r4, #0
 1583 00d8 9401     		lsls	r4, r2, #6
 1584 00da 44EA9164 		orr	r4, r4, r1, lsr #26
 1585 00de 8B01     		lsls	r3, r1, #6
 1586 00e0 5B1A     		subs	r3, r3, r1
 1587 00e2 64EB0204 		sbc	r4, r4, r2
 1588 00e6 4FF00001 		mov	r1, #0
 1589 00ea 4FF00002 		mov	r2, #0
 1590 00ee E200     		lsls	r2, r4, #3
 1591 00f0 42EA5372 		orr	r2, r2, r3, lsr #29
 1592 00f4 D900     		lsls	r1, r3, #3
 1593 00f6 0B46     		mov	r3, r1
 1594 00f8 1446     		mov	r4, r2
 1595 00fa 5B19     		adds	r3, r3, r5
 1596 00fc 46EB0404 		adc	r4, r6, r4
 1597 0100 4FF00001 		mov	r1, #0
 1598 0104 4FF00002 		mov	r2, #0
 1599 0108 A202     		lsls	r2, r4, #10
 1600 010a 42EA9352 		orr	r2, r2, r3, lsr #22
 1601 010e 9902     		lsls	r1, r3, #10
 1602 0110 0B46     		mov	r3, r1
 1603 0112 1446     		mov	r4, r2
 1604 0114 1846     		mov	r0, r3
 1605 0116 2146     		mov	r1, r4
 1606              		.loc 1 907 132
 1607 0118 7B68     		ldr	r3, [r7, #4]
 1608 011a 4FF00004 		mov	r4, #0
 1609              		.loc 1 907 130
 1610 011e 1A46     		mov	r2, r3
 1611 0120 2346     		mov	r3, r4
 1612 0122 FFF7FEFF 		bl	__aeabi_uldivmod
 1613              	.LVL1:
 1614 0126 0346     		mov	r3, r0
 1615 0128 0C46     		mov	r4, r1
 1616              		.loc 1 907 16
 1617 012a FB60     		str	r3, [r7, #12]
 1618              	.L101:
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1619              		.loc 1 909 21
 1620 012c 0A4B     		ldr	r3, .L103
 1621 012e 5B68     		ldr	r3, [r3, #4]
 1622              		.loc 1 909 51
 1623 0130 1B0C     		lsrs	r3, r3, #16
 1624 0132 03F00303 		and	r3, r3, #3
ARM GAS  /tmp/ccjirD2S.s 			page 46


 1625              		.loc 1 909 82
 1626 0136 0133     		adds	r3, r3, #1
 1627              		.loc 1 909 12
 1628 0138 5B00     		lsls	r3, r3, #1
 1629 013a 3B60     		str	r3, [r7]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1630              		.loc 1 911 20
 1631 013c FA68     		ldr	r2, [r7, #12]
 1632 013e 3B68     		ldr	r3, [r7]
 1633 0140 B2FBF3F3 		udiv	r3, r2, r3
 1634 0144 BB60     		str	r3, [r7, #8]
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1635              		.loc 1 912 7
 1636 0146 02E0     		b	.L99
 1637              	.L98:
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1638              		.loc 1 916 20
 1639 0148 044B     		ldr	r3, .L103+4
 1640 014a BB60     		str	r3, [r7, #8]
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1641              		.loc 1 917 7
 1642 014c 00BF     		nop
 1643              	.L99:
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1644              		.loc 1 920 10
 1645 014e BB68     		ldr	r3, [r7, #8]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1646              		.loc 1 921 1
 1647 0150 1846     		mov	r0, r3
 1648 0152 1437     		adds	r7, r7, #20
 1649              	.LCFI30:
 1650              		.cfi_def_cfa_offset 20
 1651 0154 BD46     		mov	sp, r7
 1652              	.LCFI31:
 1653              		.cfi_def_cfa_register 13
 1654              		@ sp needed
 1655 0156 F0BD     		pop	{r4, r5, r6, r7, pc}
 1656              	.L104:
 1657              		.align	2
 1658              	.L103:
 1659 0158 00380240 		.word	1073887232
 1660 015c 0024F400 		.word	16000000
 1661 0160 40787D01 		.word	25000000
 1662              		.cfi_endproc
 1663              	.LFE136:
 1665              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1666              		.align	1
 1667              		.global	HAL_RCC_GetHCLKFreq
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
ARM GAS  /tmp/ccjirD2S.s 			page 47


 1671              		.fpu fpv4-sp-d16
 1673              	HAL_RCC_GetHCLKFreq:
 1674              	.LFB137:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1675              		.loc 1 933 1
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679              		@ link register save eliminated.
 1680 0000 80B4     		push	{r7}
 1681              	.LCFI32:
 1682              		.cfi_def_cfa_offset 4
 1683              		.cfi_offset 7, -4
 1684 0002 00AF     		add	r7, sp, #0
 1685              	.LCFI33:
 1686              		.cfi_def_cfa_register 7
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1687              		.loc 1 934 10
 1688 0004 034B     		ldr	r3, .L107
 1689 0006 1B68     		ldr	r3, [r3]
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1690              		.loc 1 935 1
 1691 0008 1846     		mov	r0, r3
 1692 000a BD46     		mov	sp, r7
 1693              	.LCFI34:
 1694              		.cfi_def_cfa_register 13
 1695              		@ sp needed
 1696 000c 5DF8047B 		ldr	r7, [sp], #4
 1697              	.LCFI35:
 1698              		.cfi_restore 7
 1699              		.cfi_def_cfa_offset 0
 1700 0010 7047     		bx	lr
 1701              	.L108:
 1702 0012 00BF     		.align	2
 1703              	.L107:
 1704 0014 00000000 		.word	SystemCoreClock
 1705              		.cfi_endproc
 1706              	.LFE137:
 1708              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1709              		.align	1
 1710              		.global	HAL_RCC_GetPCLK1Freq
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu fpv4-sp-d16
 1716              	HAL_RCC_GetPCLK1Freq:
ARM GAS  /tmp/ccjirD2S.s 			page 48


 1717              	.LFB138:
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1718              		.loc 1 944 1
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
 1723              	.LCFI36:
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 7, -8
 1726              		.cfi_offset 14, -4
 1727 0002 00AF     		add	r7, sp, #0
 1728              	.LCFI37:
 1729              		.cfi_def_cfa_register 7
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1730              		.loc 1 946 11
 1731 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1732 0008 0146     		mov	r1, r0
 1733              		.loc 1 946 54
 1734 000a 054B     		ldr	r3, .L111
 1735 000c 9B68     		ldr	r3, [r3, #8]
 1736              		.loc 1 946 78
 1737 000e 9B0A     		lsrs	r3, r3, #10
 1738 0010 03F00703 		and	r3, r3, #7
 1739              		.loc 1 946 49
 1740 0014 034A     		ldr	r2, .L111+4
 1741 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1742              		.loc 1 946 33
 1743 0018 21FA03F3 		lsr	r3, r1, r3
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1744              		.loc 1 947 1
 1745 001c 1846     		mov	r0, r3
 1746 001e 80BD     		pop	{r7, pc}
 1747              	.L112:
 1748              		.align	2
 1749              	.L111:
 1750 0020 00380240 		.word	1073887232
 1751 0024 00000000 		.word	APBPrescTable
 1752              		.cfi_endproc
 1753              	.LFE138:
 1755              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1756              		.align	1
 1757              		.global	HAL_RCC_GetPCLK2Freq
 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1761              		.fpu fpv4-sp-d16
 1763              	HAL_RCC_GetPCLK2Freq:
ARM GAS  /tmp/ccjirD2S.s 			page 49


 1764              	.LFB139:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1765              		.loc 1 956 1
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 80B5     		push	{r7, lr}
 1770              	.LCFI38:
 1771              		.cfi_def_cfa_offset 8
 1772              		.cfi_offset 7, -8
 1773              		.cfi_offset 14, -4
 1774 0002 00AF     		add	r7, sp, #0
 1775              	.LCFI39:
 1776              		.cfi_def_cfa_register 7
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1777              		.loc 1 958 11
 1778 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1779 0008 0146     		mov	r1, r0
 1780              		.loc 1 958 53
 1781 000a 054B     		ldr	r3, .L115
 1782 000c 9B68     		ldr	r3, [r3, #8]
 1783              		.loc 1 958 77
 1784 000e 5B0B     		lsrs	r3, r3, #13
 1785 0010 03F00703 		and	r3, r3, #7
 1786              		.loc 1 958 48
 1787 0014 034A     		ldr	r2, .L115+4
 1788 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1789              		.loc 1 958 32
 1790 0018 21FA03F3 		lsr	r3, r1, r3
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1791              		.loc 1 959 1
 1792 001c 1846     		mov	r0, r3
 1793 001e 80BD     		pop	{r7, pc}
 1794              	.L116:
 1795              		.align	2
 1796              	.L115:
 1797 0020 00380240 		.word	1073887232
 1798 0024 00000000 		.word	APBPrescTable
 1799              		.cfi_endproc
 1800              	.LFE139:
 1802              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1803              		.align	1
 1804              		.weak	HAL_RCC_GetOscConfig
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1808              		.fpu fpv4-sp-d16
 1810              	HAL_RCC_GetOscConfig:
ARM GAS  /tmp/ccjirD2S.s 			page 50


 1811              	.LFB140:
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1812              		.loc 1 969 1
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 8
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
 1817 0000 80B4     		push	{r7}
 1818              	.LCFI40:
 1819              		.cfi_def_cfa_offset 4
 1820              		.cfi_offset 7, -4
 1821 0002 83B0     		sub	sp, sp, #12
 1822              	.LCFI41:
 1823              		.cfi_def_cfa_offset 16
 1824 0004 00AF     		add	r7, sp, #0
 1825              	.LCFI42:
 1826              		.cfi_def_cfa_register 7
 1827 0006 7860     		str	r0, [r7, #4]
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1828              		.loc 1 971 37
 1829 0008 7B68     		ldr	r3, [r7, #4]
 1830 000a 0F22     		movs	r2, #15
 1831 000c 1A60     		str	r2, [r3]
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1832              		.loc 1 974 10
 1833 000e 454B     		ldr	r3, .L130
 1834 0010 1B68     		ldr	r3, [r3]
 1835              		.loc 1 974 15
 1836 0012 03F48023 		and	r3, r3, #262144
 1837              		.loc 1 974 5
 1838 0016 B3F5802F 		cmp	r3, #262144
 1839 001a 04D1     		bne	.L118
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1840              		.loc 1 976 33
 1841 001c 7B68     		ldr	r3, [r7, #4]
 1842 001e 4FF4A022 		mov	r2, #327680
 1843 0022 5A60     		str	r2, [r3, #4]
 1844 0024 0EE0     		b	.L119
 1845              	.L118:
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1846              		.loc 1 978 15
 1847 0026 3F4B     		ldr	r3, .L130
 1848 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjirD2S.s 			page 51


 1849              		.loc 1 978 20
 1850 002a 03F48033 		and	r3, r3, #65536
 1851              		.loc 1 978 10
 1852 002e B3F5803F 		cmp	r3, #65536
 1853 0032 04D1     		bne	.L120
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1854              		.loc 1 980 33
 1855 0034 7B68     		ldr	r3, [r7, #4]
 1856 0036 4FF48032 		mov	r2, #65536
 1857 003a 5A60     		str	r2, [r3, #4]
 1858 003c 02E0     		b	.L119
 1859              	.L120:
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1860              		.loc 1 984 33
 1861 003e 7B68     		ldr	r3, [r7, #4]
 1862 0040 0022     		movs	r2, #0
 1863 0042 5A60     		str	r2, [r3, #4]
 1864              	.L119:
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1865              		.loc 1 988 10
 1866 0044 374B     		ldr	r3, .L130
 1867 0046 1B68     		ldr	r3, [r3]
 1868              		.loc 1 988 15
 1869 0048 03F00103 		and	r3, r3, #1
 1870              		.loc 1 988 5
 1871 004c 012B     		cmp	r3, #1
 1872 004e 03D1     		bne	.L121
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1873              		.loc 1 990 33
 1874 0050 7B68     		ldr	r3, [r7, #4]
 1875 0052 0122     		movs	r2, #1
 1876 0054 DA60     		str	r2, [r3, #12]
 1877 0056 02E0     		b	.L122
 1878              	.L121:
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1879              		.loc 1 994 33
 1880 0058 7B68     		ldr	r3, [r7, #4]
 1881 005a 0022     		movs	r2, #0
 1882 005c DA60     		str	r2, [r3, #12]
 1883              	.L122:
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1884              		.loc 1 997 59
 1885 005e 314B     		ldr	r3, .L130
 1886 0060 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjirD2S.s 			page 52


 1887              		.loc 1 997 44
 1888 0062 DB08     		lsrs	r3, r3, #3
 1889 0064 03F01F02 		and	r2, r3, #31
 1890              		.loc 1 997 42
 1891 0068 7B68     		ldr	r3, [r7, #4]
 1892 006a 1A61     		str	r2, [r3, #16]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1893              		.loc 1 1000 10
 1894 006c 2D4B     		ldr	r3, .L130
 1895 006e 1B6F     		ldr	r3, [r3, #112]
 1896              		.loc 1 1000 17
 1897 0070 03F00403 		and	r3, r3, #4
 1898              		.loc 1 1000 5
 1899 0074 042B     		cmp	r3, #4
 1900 0076 03D1     		bne	.L123
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1901              		.loc 1 1002 33
 1902 0078 7B68     		ldr	r3, [r7, #4]
 1903 007a 0522     		movs	r2, #5
 1904 007c 9A60     		str	r2, [r3, #8]
 1905 007e 0CE0     		b	.L124
 1906              	.L123:
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1907              		.loc 1 1004 15
 1908 0080 284B     		ldr	r3, .L130
 1909 0082 1B6F     		ldr	r3, [r3, #112]
 1910              		.loc 1 1004 22
 1911 0084 03F00103 		and	r3, r3, #1
 1912              		.loc 1 1004 10
 1913 0088 012B     		cmp	r3, #1
 1914 008a 03D1     		bne	.L125
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1915              		.loc 1 1006 33
 1916 008c 7B68     		ldr	r3, [r7, #4]
 1917 008e 0122     		movs	r2, #1
 1918 0090 9A60     		str	r2, [r3, #8]
 1919 0092 02E0     		b	.L124
 1920              	.L125:
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1921              		.loc 1 1010 33
 1922 0094 7B68     		ldr	r3, [r7, #4]
 1923 0096 0022     		movs	r2, #0
 1924 0098 9A60     		str	r2, [r3, #8]
 1925              	.L124:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1926              		.loc 1 1014 10
ARM GAS  /tmp/ccjirD2S.s 			page 53


 1927 009a 224B     		ldr	r3, .L130
 1928 009c 5B6F     		ldr	r3, [r3, #116]
 1929              		.loc 1 1014 16
 1930 009e 03F00103 		and	r3, r3, #1
 1931              		.loc 1 1014 5
 1932 00a2 012B     		cmp	r3, #1
 1933 00a4 03D1     		bne	.L126
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1934              		.loc 1 1016 33
 1935 00a6 7B68     		ldr	r3, [r7, #4]
 1936 00a8 0122     		movs	r2, #1
 1937 00aa 5A61     		str	r2, [r3, #20]
 1938 00ac 02E0     		b	.L127
 1939              	.L126:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1940              		.loc 1 1020 33
 1941 00ae 7B68     		ldr	r3, [r7, #4]
 1942 00b0 0022     		movs	r2, #0
 1943 00b2 5A61     		str	r2, [r3, #20]
 1944              	.L127:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1945              		.loc 1 1024 10
 1946 00b4 1B4B     		ldr	r3, .L130
 1947 00b6 1B68     		ldr	r3, [r3]
 1948              		.loc 1 1024 15
 1949 00b8 03F08073 		and	r3, r3, #16777216
 1950              		.loc 1 1024 5
 1951 00bc B3F1807F 		cmp	r3, #16777216
 1952 00c0 03D1     		bne	.L128
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1953              		.loc 1 1026 37
 1954 00c2 7B68     		ldr	r3, [r7, #4]
 1955 00c4 0222     		movs	r2, #2
 1956 00c6 9A61     		str	r2, [r3, #24]
 1957 00c8 02E0     		b	.L129
 1958              	.L128:
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1959              		.loc 1 1030 37
 1960 00ca 7B68     		ldr	r3, [r7, #4]
 1961 00cc 0122     		movs	r2, #1
 1962 00ce 9A61     		str	r2, [r3, #24]
 1963              	.L129:
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 1964              		.loc 1 1032 52
 1965 00d0 144B     		ldr	r3, .L130
ARM GAS  /tmp/ccjirD2S.s 			page 54


 1966 00d2 5B68     		ldr	r3, [r3, #4]
 1967              		.loc 1 1032 38
 1968 00d4 03F48002 		and	r2, r3, #4194304
 1969              		.loc 1 1032 36
 1970 00d8 7B68     		ldr	r3, [r7, #4]
 1971 00da DA61     		str	r2, [r3, #28]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 1972              		.loc 1 1033 47
 1973 00dc 114B     		ldr	r3, .L130
 1974 00de 5B68     		ldr	r3, [r3, #4]
 1975              		.loc 1 1033 33
 1976 00e0 03F03F02 		and	r2, r3, #63
 1977              		.loc 1 1033 31
 1978 00e4 7B68     		ldr	r3, [r7, #4]
 1979 00e6 1A62     		str	r2, [r3, #32]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1980              		.loc 1 1034 48
 1981 00e8 0E4B     		ldr	r3, .L130
 1982 00ea 5B68     		ldr	r3, [r3, #4]
 1983              		.loc 1 1034 33
 1984 00ec 9B09     		lsrs	r3, r3, #6
 1985 00ee C3F30802 		ubfx	r2, r3, #0, #9
 1986              		.loc 1 1034 31
 1987 00f2 7B68     		ldr	r3, [r7, #4]
 1988 00f4 5A62     		str	r2, [r3, #36]
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 1989              		.loc 1 1035 50
 1990 00f6 0B4B     		ldr	r3, .L130
 1991 00f8 5B68     		ldr	r3, [r3, #4]
 1992              		.loc 1 1035 60
 1993 00fa 03F44033 		and	r3, r3, #196608
 1994              		.loc 1 1035 80
 1995 00fe 03F58033 		add	r3, r3, #65536
 1996              		.loc 1 1035 102
 1997 0102 5B00     		lsls	r3, r3, #1
 1998              		.loc 1 1035 33
 1999 0104 1A0C     		lsrs	r2, r3, #16
 2000              		.loc 1 1035 31
 2001 0106 7B68     		ldr	r3, [r7, #4]
 2002 0108 9A62     		str	r2, [r3, #40]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2003              		.loc 1 1036 48
 2004 010a 064B     		ldr	r3, .L130
 2005 010c 5B68     		ldr	r3, [r3, #4]
 2006              		.loc 1 1036 33
 2007 010e 1B0E     		lsrs	r3, r3, #24
 2008 0110 03F00F02 		and	r2, r3, #15
 2009              		.loc 1 1036 31
 2010 0114 7B68     		ldr	r3, [r7, #4]
 2011 0116 DA62     		str	r2, [r3, #44]
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2012              		.loc 1 1037 1
 2013 0118 00BF     		nop
 2014 011a 0C37     		adds	r7, r7, #12
 2015              	.LCFI43:
 2016              		.cfi_def_cfa_offset 4
 2017 011c BD46     		mov	sp, r7
ARM GAS  /tmp/ccjirD2S.s 			page 55


 2018              	.LCFI44:
 2019              		.cfi_def_cfa_register 13
 2020              		@ sp needed
 2021 011e 5DF8047B 		ldr	r7, [sp], #4
 2022              	.LCFI45:
 2023              		.cfi_restore 7
 2024              		.cfi_def_cfa_offset 0
 2025 0122 7047     		bx	lr
 2026              	.L131:
 2027              		.align	2
 2028              	.L130:
 2029 0124 00380240 		.word	1073887232
 2030              		.cfi_endproc
 2031              	.LFE140:
 2033              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2034              		.align	1
 2035              		.global	HAL_RCC_GetClockConfig
 2036              		.syntax unified
 2037              		.thumb
 2038              		.thumb_func
 2039              		.fpu fpv4-sp-d16
 2041              	HAL_RCC_GetClockConfig:
 2042              	.LFB141:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2043              		.loc 1 1048 1
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 8
 2046              		@ frame_needed = 1, uses_anonymous_args = 0
 2047              		@ link register save eliminated.
 2048 0000 80B4     		push	{r7}
 2049              	.LCFI46:
 2050              		.cfi_def_cfa_offset 4
 2051              		.cfi_offset 7, -4
 2052 0002 83B0     		sub	sp, sp, #12
 2053              	.LCFI47:
 2054              		.cfi_def_cfa_offset 16
 2055 0004 00AF     		add	r7, sp, #0
 2056              	.LCFI48:
 2057              		.cfi_def_cfa_register 7
 2058 0006 7860     		str	r0, [r7, #4]
 2059 0008 3960     		str	r1, [r7]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2060              		.loc 1 1050 32
 2061 000a 7B68     		ldr	r3, [r7, #4]
 2062 000c 0F22     		movs	r2, #15
 2063 000e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjirD2S.s 			page 56


1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2064              		.loc 1 1053 51
 2065 0010 124B     		ldr	r3, .L133
 2066 0012 9B68     		ldr	r3, [r3, #8]
 2067              		.loc 1 1053 37
 2068 0014 03F00302 		and	r2, r3, #3
 2069              		.loc 1 1053 35
 2070 0018 7B68     		ldr	r3, [r7, #4]
 2071 001a 5A60     		str	r2, [r3, #4]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2072              		.loc 1 1056 52
 2073 001c 0F4B     		ldr	r3, .L133
 2074 001e 9B68     		ldr	r3, [r3, #8]
 2075              		.loc 1 1056 38
 2076 0020 03F0F002 		and	r2, r3, #240
 2077              		.loc 1 1056 36
 2078 0024 7B68     		ldr	r3, [r7, #4]
 2079 0026 9A60     		str	r2, [r3, #8]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2080              		.loc 1 1059 53
 2081 0028 0C4B     		ldr	r3, .L133
 2082 002a 9B68     		ldr	r3, [r3, #8]
 2083              		.loc 1 1059 39
 2084 002c 03F4E052 		and	r2, r3, #7168
 2085              		.loc 1 1059 37
 2086 0030 7B68     		ldr	r3, [r7, #4]
 2087 0032 DA60     		str	r2, [r3, #12]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2088              		.loc 1 1062 54
 2089 0034 094B     		ldr	r3, .L133
 2090 0036 9B68     		ldr	r3, [r3, #8]
 2091              		.loc 1 1062 39
 2092 0038 DB08     		lsrs	r3, r3, #3
 2093 003a 03F4E052 		and	r2, r3, #7168
 2094              		.loc 1 1062 37
 2095 003e 7B68     		ldr	r3, [r7, #4]
 2096 0040 1A61     		str	r2, [r3, #16]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2097              		.loc 1 1065 32
 2098 0042 074B     		ldr	r3, .L133+4
 2099 0044 1B68     		ldr	r3, [r3]
 2100              		.loc 1 1065 16
 2101 0046 03F00F02 		and	r2, r3, #15
 2102              		.loc 1 1065 14
 2103 004a 3B68     		ldr	r3, [r7]
 2104 004c 1A60     		str	r2, [r3]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
ARM GAS  /tmp/ccjirD2S.s 			page 57


 2105              		.loc 1 1066 1
 2106 004e 00BF     		nop
 2107 0050 0C37     		adds	r7, r7, #12
 2108              	.LCFI49:
 2109              		.cfi_def_cfa_offset 4
 2110 0052 BD46     		mov	sp, r7
 2111              	.LCFI50:
 2112              		.cfi_def_cfa_register 13
 2113              		@ sp needed
 2114 0054 5DF8047B 		ldr	r7, [sp], #4
 2115              	.LCFI51:
 2116              		.cfi_restore 7
 2117              		.cfi_def_cfa_offset 0
 2118 0058 7047     		bx	lr
 2119              	.L134:
 2120 005a 00BF     		.align	2
 2121              	.L133:
 2122 005c 00380240 		.word	1073887232
 2123 0060 003C0240 		.word	1073888256
 2124              		.cfi_endproc
 2125              	.LFE141:
 2127              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2128              		.align	1
 2129              		.global	HAL_RCC_NMI_IRQHandler
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2133              		.fpu fpv4-sp-d16
 2135              	HAL_RCC_NMI_IRQHandler:
 2136              	.LFB142:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2137              		.loc 1 1074 1
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141 0000 80B5     		push	{r7, lr}
 2142              	.LCFI52:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 7, -8
 2145              		.cfi_offset 14, -4
 2146 0002 00AF     		add	r7, sp, #0
 2147              	.LCFI53:
 2148              		.cfi_def_cfa_register 7
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2149              		.loc 1 1076 6
 2150 0004 064B     		ldr	r3, .L138
 2151 0006 DB68     		ldr	r3, [r3, #12]
 2152 0008 03F08003 		and	r3, r3, #128
 2153              		.loc 1 1076 5
ARM GAS  /tmp/ccjirD2S.s 			page 58


 2154 000c 802B     		cmp	r3, #128
 2155 000e 04D1     		bne	.L137
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2156              		.loc 1 1079 5
 2157 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2158              		.loc 1 1082 5
 2159 0014 034B     		ldr	r3, .L138+4
 2160 0016 8022     		movs	r2, #128
 2161 0018 1A70     		strb	r2, [r3]
 2162              	.L137:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2163              		.loc 1 1084 1
 2164 001a 00BF     		nop
 2165 001c 80BD     		pop	{r7, pc}
 2166              	.L139:
 2167 001e 00BF     		.align	2
 2168              	.L138:
 2169 0020 00380240 		.word	1073887232
 2170 0024 0E380240 		.word	1073887246
 2171              		.cfi_endproc
 2172              	.LFE142:
 2174              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2175              		.align	1
 2176              		.weak	HAL_RCC_CSSCallback
 2177              		.syntax unified
 2178              		.thumb
 2179              		.thumb_func
 2180              		.fpu fpv4-sp-d16
 2182              	HAL_RCC_CSSCallback:
 2183              	.LFB143:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2184              		.loc 1 1091 1
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 1, uses_anonymous_args = 0
 2188              		@ link register save eliminated.
 2189 0000 80B4     		push	{r7}
 2190              	.LCFI54:
 2191              		.cfi_def_cfa_offset 4
 2192              		.cfi_offset 7, -4
 2193 0002 00AF     		add	r7, sp, #0
 2194              	.LCFI55:
 2195              		.cfi_def_cfa_register 7
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
ARM GAS  /tmp/ccjirD2S.s 			page 59


1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2196              		.loc 1 1095 1
 2197 0004 00BF     		nop
 2198 0006 BD46     		mov	sp, r7
 2199              	.LCFI56:
 2200              		.cfi_def_cfa_register 13
 2201              		@ sp needed
 2202 0008 5DF8047B 		ldr	r7, [sp], #4
 2203              	.LCFI57:
 2204              		.cfi_restore 7
 2205              		.cfi_def_cfa_offset 0
 2206 000c 7047     		bx	lr
 2207              		.cfi_endproc
 2208              	.LFE143:
 2210              		.text
 2211              	.Letext0:
 2212              		.file 2 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_types.h"
 2213              		.file 3 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 2214              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2215              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2216              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2217              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2218              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2219              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2220              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2221              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2222              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccjirD2S.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/ccjirD2S.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccjirD2S.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccjirD2S.s:58     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccjirD2S.s:65     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccjirD2S.s:523    .text.HAL_RCC_OscConfig:00000000000002ac $d
     /tmp/ccjirD2S.s:529    .text.HAL_RCC_OscConfig:00000000000002bc $t
     /tmp/ccjirD2S.s:884    .text.HAL_RCC_OscConfig:00000000000004d4 $d
     /tmp/ccjirD2S.s:891    .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccjirD2S.s:898    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccjirD2S.s:1453   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccjirD2S.s:1200   .text.HAL_RCC_ClockConfig:00000000000001b8 $d
     /tmp/ccjirD2S.s:1209   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccjirD2S.s:1216   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccjirD2S.s:1348   .text.HAL_RCC_MCOConfig:00000000000000c4 $d
     /tmp/ccjirD2S.s:1355   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccjirD2S.s:1362   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccjirD2S.s:1395   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/ccjirD2S.s:1400   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccjirD2S.s:1407   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccjirD2S.s:1440   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/ccjirD2S.s:1446   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccjirD2S.s:1659   .text.HAL_RCC_GetSysClockFreq:0000000000000158 $d
     /tmp/ccjirD2S.s:1666   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccjirD2S.s:1673   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccjirD2S.s:1704   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccjirD2S.s:1709   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccjirD2S.s:1716   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccjirD2S.s:1750   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/ccjirD2S.s:1756   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccjirD2S.s:1763   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccjirD2S.s:1797   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/ccjirD2S.s:1803   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccjirD2S.s:1810   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccjirD2S.s:2029   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/ccjirD2S.s:2034   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccjirD2S.s:2041   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccjirD2S.s:2122   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccjirD2S.s:2128   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccjirD2S.s:2135   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccjirD2S.s:2182   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccjirD2S.s:2169   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccjirD2S.s:2175   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
