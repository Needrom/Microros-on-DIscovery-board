ARM GAS  /tmp/ccZmxTZn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.rmw_qos_profile_sensor_data,"a"
  18              		.align	3
  21              	rmw_qos_profile_sensor_data:
  22 0000 01       		.byte	1
  23 0001 000000   		.space	3
  24 0004 05000000 		.word	5
  25 0008 02       		.byte	2
  26 0009 02       		.byte	2
  27 000a 00000000 		.space	6
  27      0000
  28 0010 00000000 		.word	0
  29 0014 00000000 		.word	0
  30 0018 00000000 		.word	0
  31 001c 00000000 		.word	0
  32 0020 00000000 		.word	0
  33 0024 00000000 		.word	0
  34 0028 00000000 		.word	0
  35 002c 00000000 		.word	0
  36 0030 00       		.byte	0
  37 0031 00000000 		.space	7
  37      000000
  38 0038 00000000 		.word	0
  39 003c 00000000 		.word	0
  40 0040 00000000 		.word	0
  41 0044 00000000 		.word	0
  42 0048 00       		.byte	0
  43 0049 00000000 		.space	7
  43      000000
  44              		.section	.rodata.rmw_qos_profile_parameters,"a"
  45              		.align	3
  48              	rmw_qos_profile_parameters:
  49 0000 01       		.byte	1
  50 0001 000000   		.space	3
  51 0004 E8030000 		.word	1000
  52 0008 01       		.byte	1
  53 0009 02       		.byte	2
  54 000a 00000000 		.space	6
  54      0000
  55 0010 00000000 		.word	0
  56 0014 00000000 		.word	0
  57 0018 00000000 		.word	0
ARM GAS  /tmp/ccZmxTZn.s 			page 2


  58 001c 00000000 		.word	0
  59 0020 00000000 		.word	0
  60 0024 00000000 		.word	0
  61 0028 00000000 		.word	0
  62 002c 00000000 		.word	0
  63 0030 00       		.byte	0
  64 0031 00000000 		.space	7
  64      000000
  65 0038 00000000 		.word	0
  66 003c 00000000 		.word	0
  67 0040 00000000 		.word	0
  68 0044 00000000 		.word	0
  69 0048 00       		.byte	0
  70 0049 00000000 		.space	7
  70      000000
  71              		.section	.rodata.rmw_qos_profile_default,"a"
  72              		.align	3
  75              	rmw_qos_profile_default:
  76 0000 01       		.byte	1
  77 0001 000000   		.space	3
  78 0004 0A000000 		.word	10
  79 0008 01       		.byte	1
  80 0009 02       		.byte	2
  81 000a 00000000 		.space	6
  81      0000
  82 0010 00000000 		.word	0
  83 0014 00000000 		.word	0
  84 0018 00000000 		.word	0
  85 001c 00000000 		.word	0
  86 0020 00000000 		.word	0
  87 0024 00000000 		.word	0
  88 0028 00000000 		.word	0
  89 002c 00000000 		.word	0
  90 0030 00       		.byte	0
  91 0031 00000000 		.space	7
  91      000000
  92 0038 00000000 		.word	0
  93 003c 00000000 		.word	0
  94 0040 00000000 		.word	0
  95 0044 00000000 		.word	0
  96 0048 00       		.byte	0
  97 0049 00000000 		.space	7
  97      000000
  98              		.section	.rodata.rmw_qos_profile_services_default,"a"
  99              		.align	3
 102              	rmw_qos_profile_services_default:
 103 0000 01       		.byte	1
 104 0001 000000   		.space	3
 105 0004 0A000000 		.word	10
 106 0008 01       		.byte	1
 107 0009 02       		.byte	2
 108 000a 00000000 		.space	6
 108      0000
 109 0010 00000000 		.word	0
 110 0014 00000000 		.word	0
 111 0018 00000000 		.word	0
 112 001c 00000000 		.word	0
ARM GAS  /tmp/ccZmxTZn.s 			page 3


 113 0020 00000000 		.word	0
 114 0024 00000000 		.word	0
 115 0028 00000000 		.word	0
 116 002c 00000000 		.word	0
 117 0030 00       		.byte	0
 118 0031 00000000 		.space	7
 118      000000
 119 0038 00000000 		.word	0
 120 003c 00000000 		.word	0
 121 0040 00000000 		.word	0
 122 0044 00000000 		.word	0
 123 0048 00       		.byte	0
 124 0049 00000000 		.space	7
 124      000000
 125              		.section	.rodata.rmw_qos_profile_parameter_events,"a"
 126              		.align	3
 129              	rmw_qos_profile_parameter_events:
 130 0000 01       		.byte	1
 131 0001 000000   		.space	3
 132 0004 E8030000 		.word	1000
 133 0008 01       		.byte	1
 134 0009 02       		.byte	2
 135 000a 00000000 		.space	6
 135      0000
 136 0010 00000000 		.word	0
 137 0014 00000000 		.word	0
 138 0018 00000000 		.word	0
 139 001c 00000000 		.word	0
 140 0020 00000000 		.word	0
 141 0024 00000000 		.word	0
 142 0028 00000000 		.word	0
 143 002c 00000000 		.word	0
 144 0030 00       		.byte	0
 145 0031 00000000 		.space	7
 145      000000
 146 0038 00000000 		.word	0
 147 003c 00000000 		.word	0
 148 0040 00000000 		.word	0
 149 0044 00000000 		.word	0
 150 0048 00       		.byte	0
 151 0049 00000000 		.space	7
 151      000000
 152              		.section	.rodata.rmw_qos_profile_system_default,"a"
 153              		.align	3
 156              	rmw_qos_profile_system_default:
 157 0000 00000000 		.space	80
 157      00000000 
 157      00000000 
 157      00000000 
 157      00000000 
 158              		.section	.rodata.rmw_qos_profile_unknown,"a"
 159              		.align	3
 162              	rmw_qos_profile_unknown:
 163 0000 03       		.byte	3
 164 0001 000000   		.space	3
 165 0004 00000000 		.word	0
 166 0008 03       		.byte	3
ARM GAS  /tmp/ccZmxTZn.s 			page 4


 167 0009 03       		.byte	3
 168 000a 00000000 		.space	6
 168      0000
 169 0010 00000000 		.word	0
 170 0014 00000000 		.word	0
 171 0018 00000000 		.word	0
 172 001c 00000000 		.word	0
 173 0020 00000000 		.word	0
 174 0024 00000000 		.word	0
 175 0028 00000000 		.word	0
 176 002c 00000000 		.word	0
 177 0030 04       		.byte	4
 178 0031 00000000 		.space	7
 178      000000
 179 0038 00000000 		.word	0
 180 003c 00000000 		.word	0
 181 0040 00000000 		.word	0
 182 0044 00000000 		.word	0
 183 0048 00       		.byte	0
 184 0049 00000000 		.space	7
 184      000000
 185              		.comm	defaultTaskHandle,4,4
 186              		.global	defaultTask_attributes
 187              		.section	.rodata
 188              		.align	2
 189              	.LC0:
 190 0000 64656661 		.ascii	"defaultTask\000"
 190      756C7454 
 190      61736B00 
 191              		.section	.rodata.defaultTask_attributes,"a"
 192              		.align	2
 195              	defaultTask_attributes:
 196 0000 00000000 		.word	.LC0
 197 0004 00000000 		.space	16
 197      00000000 
 197      00000000 
 197      00000000 
 198 0014 70170000 		.word	6000
 199 0018 18000000 		.word	24
 200 001c 00000000 		.space	8
 200      00000000 
 201              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 202              		.align	1
 203              		.global	MX_FREERTOS_Init
 204              		.arch armv7e-m
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	MX_FREERTOS_Init:
 211              	.LFB138:
 212              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
ARM GAS  /tmp/ccZmxTZn.s 			page 5


   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include <stdbool.h>
  30:Core/Src/freertos.c **** #include "allocators.h"
  31:Core/Src/freertos.c **** #include "cmsis_os.h"
  32:Core/Src/freertos.c **** 
  33:Core/Src/freertos.c **** #include <rcl/rcl.h>
  34:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  35:Core/Src/freertos.c **** #include <ucdr/microcdr.h>
  36:Core/Src/freertos.c **** #include <uxr/client/client.h>
  37:Core/Src/freertos.c **** #include <lwip.h>
  38:Core/Src/freertos.c **** #include <stdio.h>
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  41:Core/Src/freertos.c **** #include "microros_transports.h"
  42:Core/Src/freertos.c **** #include "usart.h"
  43:Core/Src/freertos.c **** #include "retarget.h"
  44:Core/Src/freertos.c **** #include "../../Component/Key/key.h"
  45:Core/Src/freertos.c **** #include "../../Component/PWM/pwm.h"
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** #include "tim.h"
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Includes */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  53:Core/Src/freertos.c **** void CheckGPIO();
  54:Core/Src/freertos.c **** /* USER CODE END PTD */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  57:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  58:Core/Src/freertos.c **** extern struct netif gnetif;
  59:Core/Src/freertos.c **** /* USER CODE END PD */
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  62:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
ARM GAS  /tmp/ccZmxTZn.s 			page 6


  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** /* USER CODE END PM */
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  67:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** /* USER CODE END Variables */
  70:Core/Src/freertos.c **** /* Definitions for defaultTask */
  71:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  72:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  73:Core/Src/freertos.c ****   .name = "defaultTask",
  74:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  75:Core/Src/freertos.c ****   .stack_size = 1500 * 4
  76:Core/Src/freertos.c **** };
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  79:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** extern void MX_LWIP_Init(void);
  86:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** /**
  89:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  90:Core/Src/freertos.c ****   * @param  None
  91:Core/Src/freertos.c ****   * @retval None
  92:Core/Src/freertos.c ****   */
  93:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 213              		.loc 1 93 29
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              	.LCFI0:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 00AF     		add	r7, sp, #0
 223              	.LCFI1:
 224              		.cfi_def_cfa_register 7
  94:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c ****   /* USER CODE END Init */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  99:Core/Src/freertos.c ****   /* add mutexes, ... */
 100:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 103:Core/Src/freertos.c ****   /* add semaphores, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 107:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
ARM GAS  /tmp/ccZmxTZn.s 			page 7


 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 111:Core/Src/freertos.c ****   /* add queues, ... */
 112:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c ****   /* Create the thread(s) */
 115:Core/Src/freertos.c ****   /* creation of defaultTask */
 116:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 225              		.loc 1 116 23
 226 0004 044A     		ldr	r2, .L2
 227 0006 0021     		movs	r1, #0
 228 0008 0448     		ldr	r0, .L2+4
 229 000a FFF7FEFF 		bl	osThreadNew
 230 000e 0246     		mov	r2, r0
 231              		.loc 1 116 21
 232 0010 034B     		ldr	r3, .L2+8
 233 0012 1A60     		str	r2, [r3]
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 119:Core/Src/freertos.c ****   /* add threads, ... */
 120:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 121:Core/Src/freertos.c **** 
 122:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 123:Core/Src/freertos.c ****   /* add events, ... */
 124:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 125:Core/Src/freertos.c **** 
 126:Core/Src/freertos.c **** }
 234              		.loc 1 126 1
 235 0014 00BF     		nop
 236 0016 80BD     		pop	{r7, pc}
 237              	.L3:
 238              		.align	2
 239              	.L2:
 240 0018 00000000 		.word	defaultTask_attributes
 241 001c 00000000 		.word	StartDefaultTask
 242 0020 00000000 		.word	defaultTaskHandle
 243              		.cfi_endproc
 244              	.LFE138:
 246              		.section	.rodata
 247              		.align	2
 248              	.LC1:
 249 000c 656E6469 		.ascii	"endif----- \015\000"
 249      662D2D2D 
 249      2D2D200D 
 249      00
 250 0019 000000   		.align	2
 251              	.LC2:
 252 001c 4572726F 		.ascii	"Error on default allocators (line %d)\012\000"
 252      72206F6E 
 252      20646566 
 252      61756C74 
 252      20616C6C 
 253 0043 00       		.align	2
 254              	.LC3:
 255 0044 66726565 		.ascii	"freeRTOS allocator success \015\000"
 255      52544F53 
ARM GAS  /tmp/ccZmxTZn.s 			page 8


 255      20616C6C 
 255      6F636174 
 255      6F722073 
 256 0061 000000   		.align	2
 257              	.LC4:
 258 0064 6D696372 		.ascii	"microROS_app\000"
 258      6F524F53 
 258      5F617070 
 258      00
 259 0071 000000   		.align	2
 260              	.LC5:
 261 0074 6265666F 		.ascii	"before appMain \015\000"
 261      72652061 
 261      70704D61 
 261      696E200D 
 261      00
 262 0085 000000   		.align	2
 263              	.LC6:
 264 0088 2A2A2A2A 		.ascii	"**********************************\000"
 264      2A2A2A2A 
 264      2A2A2A2A 
 264      2A2A2A2A 
 264      2A2A2A2A 
 265 00ab 00       		.align	2
 266              	.LC7:
 267 00ac 5461736B 		.ascii	"Task  State   Prio    Stack    Num\000"
 267      20205374 
 267      61746520 
 267      20205072 
 267      696F2020 
 268              		.section	.text.StartDefaultTask,"ax",%progbits
 269              		.align	1
 270              		.global	StartDefaultTask
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv4-sp-d16
 276              	StartDefaultTask:
 277              	.LFB139:
 127:Core/Src/freertos.c **** 
 128:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 129:Core/Src/freertos.c **** /**
 130:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 131:Core/Src/freertos.c ****   * @param  argument: Not used
 132:Core/Src/freertos.c ****   * @retval None
 133:Core/Src/freertos.c ****   */
 134:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 135:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 136:Core/Src/freertos.c **** {
 278              		.loc 1 136 1
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 576
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI2:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
ARM GAS  /tmp/ccZmxTZn.s 			page 9


 286              		.cfi_offset 14, -4
 287 0002 ADF5127D 		sub	sp, sp, #584
 288              	.LCFI3:
 289              		.cfi_def_cfa_offset 592
 290 0006 02AF     		add	r7, sp, #8
 291              	.LCFI4:
 292              		.cfi_def_cfa 7, 584
 293 0008 3B1D     		adds	r3, r7, #4
 294 000a 1860     		str	r0, [r3]
 137:Core/Src/freertos.c ****   /* init code for LWIP */
 138:Core/Src/freertos.c ****   MX_LWIP_Init();
 295              		.loc 1 138 3
 296 000c FFF7FEFF 		bl	MX_LWIP_Init
 139:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 140:Core/Src/freertos.c ****   /* Infinite loop */
 141:Core/Src/freertos.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_9, GPIO_PIN_SET);
 297              		.loc 1 141 3
 298 0010 0122     		movs	r2, #1
 299 0012 4FF40071 		mov	r1, #512
 300 0016 3C48     		ldr	r0, .L8
 301 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 142:Core/Src/freertos.c ****   bool availableNetwork = false;
 302              		.loc 1 142 8
 303 001c 0023     		movs	r3, #0
 304 001e 87F83F32 		strb	r3, [r7, #575]
 143:Core/Src/freertos.c **** 
 144:Core/Src/freertos.c **** #ifdef RMW_UXRCE_TRANSPORT_CUSTOM 
 145:Core/Src/freertos.c ****   availableNetwork = true; 
 305              		.loc 1 145 20
 306 0022 0123     		movs	r3, #1
 307 0024 87F83F32 		strb	r3, [r7, #575]
 146:Core/Src/freertos.c ****   rmw_uros_set_custom_transport( 
 308              		.loc 1 146 3
 309 0028 384B     		ldr	r3, .L8+4
 310 002a 0193     		str	r3, [sp, #4]
 311 002c 384B     		ldr	r3, .L8+8
 312 002e 0093     		str	r3, [sp]
 313 0030 384B     		ldr	r3, .L8+12
 314 0032 394A     		ldr	r2, .L8+16
 315 0034 3949     		ldr	r1, .L8+20
 316 0036 0120     		movs	r0, #1
 317 0038 FFF7FEFF 		bl	rmw_uros_set_custom_transport
 147:Core/Src/freertos.c ****     true, 
 148:Core/Src/freertos.c ****     (void *) &huart1, 
 149:Core/Src/freertos.c ****     freertos_serial_open, 
 150:Core/Src/freertos.c ****     freertos_serial_close, 
 151:Core/Src/freertos.c ****     freertos_serial_write, 
 152:Core/Src/freertos.c ****     freertos_serial_read); 
 153:Core/Src/freertos.c **** #elif defined(MICRO_XRCEDDS_UDP)
 154:Core/Src/freertos.c ****   printf("Ethernet Initialization \r\n");
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c ****   printf("Waiting for IP \r\n");
 157:Core/Src/freertos.c ****   int retries = 0;
 158:Core/Src/freertos.c ****   
 159:Core/Src/freertos.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_SET);
 160:Core/Src/freertos.c **** 
 161:Core/Src/freertos.c ****   while(gnetif.ip_addr.addr == 0 && retries < 10){
ARM GAS  /tmp/ccZmxTZn.s 			page 10


 162:Core/Src/freertos.c ****   	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_SET);
 163:Core/Src/freertos.c **** 	osDelay(500);
 164:Core/Src/freertos.c **** 	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_RESET);
 165:Core/Src/freertos.c **** 	retries++;
 166:Core/Src/freertos.c ****   };
 167:Core/Src/freertos.c **** 
 168:Core/Src/freertos.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_9, GPIO_PIN_RESET);
 169:Core/Src/freertos.c **** 
 170:Core/Src/freertos.c ****   availableNetwork = (gnetif.ip_addr.addr != 0);
 171:Core/Src/freertos.c ****   if(availableNetwork){
 172:Core/Src/freertos.c ****   	printf("IP: %s \r\n", ip4addr_ntoa(&(gnetif.ip_addr)));
 173:Core/Src/freertos.c ****   } else {
 174:Core/Src/freertos.c ****   	printf("Impossible to retrieve an IP \n");
 175:Core/Src/freertos.c ****   }
 176:Core/Src/freertos.c **** #endif
 177:Core/Src/freertos.c ****   printf("endif----- \r\n");
 318              		.loc 1 177 3
 319 003c 3848     		ldr	r0, .L8+24
 320 003e FFF7FEFF 		bl	puts
 178:Core/Src/freertos.c **** 
 179:Core/Src/freertos.c ****   rcl_allocator_t freeRTOS_allocator = rcutils_get_zero_initialized_allocator();
 321              		.loc 1 179 40
 322 0042 07F50973 		add	r3, r7, #548
 323 0046 1846     		mov	r0, r3
 324 0048 FFF7FEFF 		bl	rcutils_get_zero_initialized_allocator
 180:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = __freertos_allocate;
 325              		.loc 1 180 31
 326 004c 354B     		ldr	r3, .L8+28
 327 004e C7F82432 		str	r3, [r7, #548]
 181:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = __freertos_deallocate;
 328              		.loc 1 181 33
 329 0052 354B     		ldr	r3, .L8+32
 330 0054 C7F82832 		str	r3, [r7, #552]
 182:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = __freertos_reallocate;
 331              		.loc 1 182 33
 332 0058 344B     		ldr	r3, .L8+36
 333 005a C7F82C32 		str	r3, [r7, #556]
 183:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate = __freertos_zero_allocate;
 334              		.loc 1 183 36
 335 005e 344B     		ldr	r3, .L8+40
 336 0060 C7F83032 		str	r3, [r7, #560]
 184:Core/Src/freertos.c ****   
 185:Core/Src/freertos.c ****   if(!rcutils_set_default_allocator(&freeRTOS_allocator)){
 337              		.loc 1 185 7
 338 0064 07F50973 		add	r3, r7, #548
 339 0068 1846     		mov	r0, r3
 340 006a FFF7FEFF 		bl	rcutils_set_default_allocator
 341 006e 0346     		mov	r3, r0
 342              		.loc 1 185 6
 343 0070 83F00103 		eor	r3, r3, #1
 344 0074 DBB2     		uxtb	r3, r3
 345              		.loc 1 185 5
 346 0076 002B     		cmp	r3, #0
 347 0078 04D0     		beq	.L5
 186:Core/Src/freertos.c ****   	printf("Error on default allocators (line %d)\n", __LINE__);
 348              		.loc 1 186 4
 349 007a BA21     		movs	r1, #186
ARM GAS  /tmp/ccZmxTZn.s 			page 11


 350 007c 2D48     		ldr	r0, .L8+44
 351 007e FFF7FEFF 		bl	printf
 352 0082 02E0     		b	.L6
 353              	.L5:
 187:Core/Src/freertos.c ****   }
 188:Core/Src/freertos.c ****   else {
 189:Core/Src/freertos.c ****   	printf("freeRTOS allocator success \r\n");
 354              		.loc 1 189 4
 355 0084 2C48     		ldr	r0, .L8+48
 356 0086 FFF7FEFF 		bl	puts
 357              	.L6:
 190:Core/Src/freertos.c ****   }
 191:Core/Src/freertos.c **** 
 192:Core/Src/freertos.c ****   osThreadAttr_t attributes;
 193:Core/Src/freertos.c ****   memset(&attributes, 0x0, sizeof(osThreadAttr_t));
 358              		.loc 1 193 3
 359 008a 07F50073 		add	r3, r7, #512
 360 008e 2422     		movs	r2, #36
 361 0090 0021     		movs	r1, #0
 362 0092 1846     		mov	r0, r3
 363 0094 FFF7FEFF 		bl	memset
 194:Core/Src/freertos.c ****   attributes.name = "microROS_app";
 364              		.loc 1 194 19
 365 0098 284B     		ldr	r3, .L8+52
 366 009a C7F80032 		str	r3, [r7, #512]
 195:Core/Src/freertos.c ****   attributes.stack_size = 3 * 10000;
 367              		.loc 1 195 25
 368 009e 47F23053 		movw	r3, #30000
 369 00a2 C7F81432 		str	r3, [r7, #532]
 196:Core/Src/freertos.c ****   attributes.priority = (osPriority_t)osPriorityNormal1;
 370              		.loc 1 196 23
 371 00a6 1923     		movs	r3, #25
 372 00a8 C7F81832 		str	r3, [r7, #536]
 197:Core/Src/freertos.c ****   printf("before appMain \r\n");
 373              		.loc 1 197 3
 374 00ac 2448     		ldr	r0, .L8+56
 375 00ae FFF7FEFF 		bl	puts
 198:Core/Src/freertos.c **** //  osThreadNew(appMain, NULL, &attributes);
 199:Core/Src/freertos.c ****   Retarget_Init(&huart1);
 376              		.loc 1 199 3
 377 00b2 1A48     		ldr	r0, .L8+20
 378 00b4 FFF7FEFF 		bl	Retarget_Init
 200:Core/Src/freertos.c ****   osDelay(500);
 379              		.loc 1 200 3
 380 00b8 4FF4FA70 		mov	r0, #500
 381 00bc FFF7FEFF 		bl	osDelay
 201:Core/Src/freertos.c ****   char ptrTaskList[500];
 202:Core/Src/freertos.c ****   vTaskList(ptrTaskList);
 382              		.loc 1 202 3
 383 00c0 07F10C03 		add	r3, r7, #12
 384 00c4 1846     		mov	r0, r3
 385 00c6 FFF7FEFF 		bl	vTaskList
 203:Core/Src/freertos.c ****   printf("**********************************\n");
 386              		.loc 1 203 3
 387 00ca 1E48     		ldr	r0, .L8+60
 388 00cc FFF7FEFF 		bl	puts
 204:Core/Src/freertos.c ****   printf("Task  State   Prio    Stack    Num\n");
ARM GAS  /tmp/ccZmxTZn.s 			page 12


 389              		.loc 1 204 3
 390 00d0 1D48     		ldr	r0, .L8+64
 391 00d2 FFF7FEFF 		bl	puts
 205:Core/Src/freertos.c ****   printf("**********************************\n");
 392              		.loc 1 205 3
 393 00d6 1B48     		ldr	r0, .L8+60
 394 00d8 FFF7FEFF 		bl	puts
 206:Core/Src/freertos.c ****   printf(ptrTaskList);
 395              		.loc 1 206 3
 396 00dc 07F10C03 		add	r3, r7, #12
 397 00e0 1846     		mov	r0, r3
 398 00e2 FFF7FEFF 		bl	printf
 207:Core/Src/freertos.c ****   printf("**********************************\n");
 399              		.loc 1 207 3
 400 00e6 1748     		ldr	r0, .L8+60
 401 00e8 FFF7FEFF 		bl	puts
 208:Core/Src/freertos.c **** 
 209:Core/Src/freertos.c ****   TaskHandle_t xHandle;
 210:Core/Src/freertos.c ****   xHandle = xTaskGetHandle("microROS_app");
 402              		.loc 1 210 13
 403 00ec 1348     		ldr	r0, .L8+52
 404 00ee FFF7FEFF 		bl	xTaskGetHandle
 405 00f2 C7F83802 		str	r0, [r7, #568]
 211:Core/Src/freertos.c **** 
 212:Core/Src/freertos.c ****   PWM_SetMode(PWM_OPM); 
 406              		.loc 1 212 3
 407 00f6 0020     		movs	r0, #0
 408 00f8 FFF7FEFF 		bl	PWM_SetMode
 409              	.L7:
 213:Core/Src/freertos.c ****   
 214:Core/Src/freertos.c ****   for(;;)
 215:Core/Src/freertos.c ****   {
 216:Core/Src/freertos.c **** //    printf("into the printf \r\n");
 217:Core/Src/freertos.c ****     osDelay(1);
 410              		.loc 1 217 5 discriminator 1
 411 00fc 0120     		movs	r0, #1
 412 00fe FFF7FEFF 		bl	osDelay
 218:Core/Src/freertos.c **** //    HAL_TIM_OnePulse_Start(&htim9, TIM_CHANNEL_1);
 219:Core/Src/freertos.c ****     CheckGPIO();
 413              		.loc 1 219 5 discriminator 1
 414 0102 FFF7FEFF 		bl	CheckGPIO
 217:Core/Src/freertos.c **** //    HAL_TIM_OnePulse_Start(&htim9, TIM_CHANNEL_1);
 415              		.loc 1 217 5 discriminator 1
 416 0106 F9E7     		b	.L7
 417              	.L9:
 418              		.align	2
 419              	.L8:
 420 0108 00140240 		.word	1073878016
 421 010c 00000000 		.word	freertos_serial_read
 422 0110 00000000 		.word	freertos_serial_write
 423 0114 00000000 		.word	freertos_serial_close
 424 0118 00000000 		.word	freertos_serial_open
 425 011c 00000000 		.word	huart1
 426 0120 0C000000 		.word	.LC1
 427 0124 00000000 		.word	__freertos_allocate
 428 0128 00000000 		.word	__freertos_deallocate
 429 012c 00000000 		.word	__freertos_reallocate
ARM GAS  /tmp/ccZmxTZn.s 			page 13


 430 0130 00000000 		.word	__freertos_zero_allocate
 431 0134 1C000000 		.word	.LC2
 432 0138 44000000 		.word	.LC3
 433 013c 64000000 		.word	.LC4
 434 0140 74000000 		.word	.LC5
 435 0144 88000000 		.word	.LC6
 436 0148 AC000000 		.word	.LC7
 437              		.cfi_endproc
 438              	.LFE139:
 440              		.section	.text.CheckGPIO,"ax",%progbits
 441              		.align	1
 442              		.global	CheckGPIO
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	CheckGPIO:
 449              	.LFB140:
 220:Core/Src/freertos.c **** //    if (eTaskGetState(xHandle) != eSuspended && availableNetwork)
 221:Core/Src/freertos.c **** //    if(0)
 222:Core/Src/freertos.c **** //    {
 223:Core/Src/freertos.c **** //    	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_SET);    
 224:Core/Src/freertos.c **** //	osDelay(150);
 225:Core/Src/freertos.c **** //	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_RESET);
 226:Core/Src/freertos.c **** //	osDelay(150);	
 227:Core/Src/freertos.c **** //	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_9, GPIO_PIN_SET);    
 228:Core/Src/freertos.c **** //	osDelay(150);
 229:Core/Src/freertos.c **** //	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_9, GPIO_PIN_RESET);
 230:Core/Src/freertos.c **** //	osDelay(150);
 231:Core/Src/freertos.c **** //    }
 232:Core/Src/freertos.c **** //    else {
 233:Core/Src/freertos.c **** //        HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_SET);    
 234:Core/Src/freertos.c **** //	osDelay(1000);
 235:Core/Src/freertos.c **** //	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_RESET);
 236:Core/Src/freertos.c **** //	osDelay(1000);	
 237:Core/Src/freertos.c **** //	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_9, GPIO_PIN_SET);    
 238:Core/Src/freertos.c **** //	osDelay(1000);
 239:Core/Src/freertos.c **** //	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_9, GPIO_PIN_RESET);
 240:Core/Src/freertos.c **** //	osDelay(1000);
 241:Core/Src/freertos.c **** //    }
 242:Core/Src/freertos.c ****   }
 243:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 244:Core/Src/freertos.c **** }
 245:Core/Src/freertos.c **** 
 246:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 247:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 248:Core/Src/freertos.c **** void CheckGPIO(){
 450              		.loc 1 248 17
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 80B5     		push	{r7, lr}
 455              	.LCFI5:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 14, -4
 459 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccZmxTZn.s 			page 14


 460              	.LCFI6:
 461              		.cfi_def_cfa_register 7
 249:Core/Src/freertos.c **** 	//printf("PE2: %d \r\n", HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_2));
 250:Core/Src/freertos.c **** 	//printf("PE3: %d \r\n", HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_3));
 251:Core/Src/freertos.c **** 	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_3, GPIO_PIN_SET);
 462              		.loc 1 251 2
 463 0004 0122     		movs	r2, #1
 464 0006 0821     		movs	r1, #8
 465 0008 0D48     		ldr	r0, .L11
 466 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 252:Core/Src/freertos.c **** 	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, GPIO_PIN_SET);
 467              		.loc 1 252 2
 468 000e 0122     		movs	r2, #1
 469 0010 0421     		movs	r1, #4
 470 0012 0B48     		ldr	r0, .L11
 471 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253:Core/Src/freertos.c **** 	osDelay(1000);
 472              		.loc 1 253 2
 473 0018 4FF47A70 		mov	r0, #1000
 474 001c FFF7FEFF 		bl	osDelay
 254:Core/Src/freertos.c **** 	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_3, GPIO_PIN_RESET);
 475              		.loc 1 254 2
 476 0020 0022     		movs	r2, #0
 477 0022 0821     		movs	r1, #8
 478 0024 0648     		ldr	r0, .L11
 479 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 255:Core/Src/freertos.c **** 	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, GPIO_PIN_RESET);
 480              		.loc 1 255 2
 481 002a 0022     		movs	r2, #0
 482 002c 0421     		movs	r1, #4
 483 002e 0448     		ldr	r0, .L11
 484 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 256:Core/Src/freertos.c **** 	osDelay(1000);
 485              		.loc 1 256 2
 486 0034 4FF47A70 		mov	r0, #1000
 487 0038 FFF7FEFF 		bl	osDelay
 257:Core/Src/freertos.c **** 
 258:Core/Src/freertos.c **** }
 488              		.loc 1 258 1
 489 003c 00BF     		nop
 490 003e 80BD     		pop	{r7, pc}
 491              	.L12:
 492              		.align	2
 493              	.L11:
 494 0040 00140240 		.word	1073878016
 495              		.cfi_endproc
 496              	.LFE140:
 498              		.text
 499              	.Letext0:
 500              		.file 2 "/home/mego/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 501              		.file 3 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_types.h"
 502              		.file 4 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 503              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 504              		.file 6 "Core/Inc/FreeRTOSConfig.h"
 505              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 506              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 507              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  /tmp/ccZmxTZn.s 			page 15


 508              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 509              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 510              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 511              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_eth.h"
 512              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 513              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 514              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 515              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 516              		.file 18 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 517              		.file 19 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 518              		.file 20 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 519              		.file 21 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/stdlib.h"
 520              		.file 22 "Core/Inc/allocators.h"
 521              		.file 23 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rcu
 522              		.file 24 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rcl
 523              		.file 25 "/home/mego/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stdarg.h"
 524              		.file 26 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rcu
 525              		.file 27 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rcu
 526              		.file 28 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rmw
 527              		.file 29 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rcl
 528              		.file 30 "/home/mego/microros_ws/firmware/freertos_apps/stm32MakefileTest/../../mcu_ws/install/rmw
 529              		.file 31 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 530              		.file 32 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/ctype.h"
 531              		.file 33 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 532              		.file 34 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 533              		.file 35 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 534              		.file 36 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 535              		.file 37 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 536              		.file 38 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 537              		.file 39 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 538              		.file 40 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 539              		.file 41 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 540              		.file 42 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 541              		.file 43 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 542              		.file 44 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 543              		.file 45 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 544              		.file 46 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 545              		.file 47 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 546              		.file 48 "LWIP/App/lwip.h"
 547              		.file 49 "Core/Inc/usart.h"
 548              		.file 50 "Core/Inc/tim.h"
 549              		.file 51 "Core/Src/../../Component/PWM/pwm.h"
 550              		.file 52 "<built-in>"
ARM GAS  /tmp/ccZmxTZn.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccZmxTZn.s:18     .rodata.rmw_qos_profile_sensor_data:0000000000000000 $d
     /tmp/ccZmxTZn.s:21     .rodata.rmw_qos_profile_sensor_data:0000000000000000 rmw_qos_profile_sensor_data
     /tmp/ccZmxTZn.s:45     .rodata.rmw_qos_profile_parameters:0000000000000000 $d
     /tmp/ccZmxTZn.s:48     .rodata.rmw_qos_profile_parameters:0000000000000000 rmw_qos_profile_parameters
     /tmp/ccZmxTZn.s:72     .rodata.rmw_qos_profile_default:0000000000000000 $d
     /tmp/ccZmxTZn.s:75     .rodata.rmw_qos_profile_default:0000000000000000 rmw_qos_profile_default
     /tmp/ccZmxTZn.s:99     .rodata.rmw_qos_profile_services_default:0000000000000000 $d
     /tmp/ccZmxTZn.s:102    .rodata.rmw_qos_profile_services_default:0000000000000000 rmw_qos_profile_services_default
     /tmp/ccZmxTZn.s:126    .rodata.rmw_qos_profile_parameter_events:0000000000000000 $d
     /tmp/ccZmxTZn.s:129    .rodata.rmw_qos_profile_parameter_events:0000000000000000 rmw_qos_profile_parameter_events
     /tmp/ccZmxTZn.s:153    .rodata.rmw_qos_profile_system_default:0000000000000000 $d
     /tmp/ccZmxTZn.s:156    .rodata.rmw_qos_profile_system_default:0000000000000000 rmw_qos_profile_system_default
     /tmp/ccZmxTZn.s:159    .rodata.rmw_qos_profile_unknown:0000000000000000 $d
     /tmp/ccZmxTZn.s:162    .rodata.rmw_qos_profile_unknown:0000000000000000 rmw_qos_profile_unknown
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccZmxTZn.s:195    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccZmxTZn.s:188    .rodata:0000000000000000 $d
     /tmp/ccZmxTZn.s:192    .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccZmxTZn.s:202    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccZmxTZn.s:210    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccZmxTZn.s:240    .text.MX_FREERTOS_Init:0000000000000018 $d
     /tmp/ccZmxTZn.s:276    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccZmxTZn.s:269    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccZmxTZn.s:448    .text.CheckGPIO:0000000000000000 CheckGPIO
     /tmp/ccZmxTZn.s:420    .text.StartDefaultTask:0000000000000108 $d
     /tmp/ccZmxTZn.s:441    .text.CheckGPIO:0000000000000000 $t
     /tmp/ccZmxTZn.s:494    .text.CheckGPIO:0000000000000040 $d

UNDEFINED SYMBOLS
osThreadNew
MX_LWIP_Init
HAL_GPIO_WritePin
rmw_uros_set_custom_transport
puts
rcutils_get_zero_initialized_allocator
rcutils_set_default_allocator
printf
memset
Retarget_Init
osDelay
vTaskList
xTaskGetHandle
PWM_SetMode
freertos_serial_read
freertos_serial_write
freertos_serial_close
freertos_serial_open
huart1
__freertos_allocate
__freertos_deallocate
__freertos_reallocate
__freertos_zero_allocate
