ARM GAS  /tmp/ccaGaNfs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ethernetif.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	DMARxDscrTab,128,4
  18              		.comm	DMATxDscrTab,128,4
  19              		.comm	Rx_Buff,6096,4
  20              		.comm	Tx_Buff,6096,4
  21              		.global	s_xSemaphore
  22              		.section	.bss.s_xSemaphore,"aw",%nobits
  23              		.align	2
  26              	s_xSemaphore:
  27 0000 00000000 		.space	4
  28              		.comm	heth,72,4
  29              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
  30              		.align	1
  31              		.global	HAL_ETH_MspInit
  32              		.arch armv7e-m
  33              		.syntax unified
  34              		.thumb
  35              		.thumb_func
  36              		.fpu fpv4-sp-d16
  38              	HAL_ETH_MspInit:
  39              	.LFB137:
  40              		.file 1 "LWIP/Target/ethernetif.c"
   1:LWIP/Target/ethernetif.c **** /**
   2:LWIP/Target/ethernetif.c ****   ******************************************************************************
   3:LWIP/Target/ethernetif.c ****   * File Name          : ethernetif.c
   4:LWIP/Target/ethernetif.c ****   * Description        : This file provides code for the configuration
   5:LWIP/Target/ethernetif.c ****   *                      of the Target/ethernetif.c MiddleWare.
   6:LWIP/Target/ethernetif.c ****   ******************************************************************************
   7:LWIP/Target/ethernetif.c ****   * @attention
   8:LWIP/Target/ethernetif.c ****   *
   9:LWIP/Target/ethernetif.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:LWIP/Target/ethernetif.c ****   * All rights reserved.</center></h2>
  11:LWIP/Target/ethernetif.c ****   *
  12:LWIP/Target/ethernetif.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:LWIP/Target/ethernetif.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:LWIP/Target/ethernetif.c ****   * the License. You may obtain a copy of the License at:
  15:LWIP/Target/ethernetif.c ****   *                             www.st.com/SLA0044
  16:LWIP/Target/ethernetif.c ****   *
  17:LWIP/Target/ethernetif.c ****   ******************************************************************************
  18:LWIP/Target/ethernetif.c ****   */
  19:LWIP/Target/ethernetif.c **** 
  20:LWIP/Target/ethernetif.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccaGaNfs.s 			page 2


  21:LWIP/Target/ethernetif.c **** #include "main.h"
  22:LWIP/Target/ethernetif.c **** #include "lwip/opt.h"
  23:LWIP/Target/ethernetif.c **** 
  24:LWIP/Target/ethernetif.c **** #include "lwip/timeouts.h"
  25:LWIP/Target/ethernetif.c **** #include "netif/ethernet.h"
  26:LWIP/Target/ethernetif.c **** #include "netif/etharp.h"
  27:LWIP/Target/ethernetif.c **** #include "lwip/ethip6.h"
  28:LWIP/Target/ethernetif.c **** #include "ethernetif.h"
  29:LWIP/Target/ethernetif.c **** #include <string.h>
  30:LWIP/Target/ethernetif.c **** #include "cmsis_os.h"
  31:LWIP/Target/ethernetif.c **** #include "lwip/tcpip.h"
  32:LWIP/Target/ethernetif.c **** /* Within 'USER CODE' section, code will be kept by default at each generation */
  33:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 0 */
  34:LWIP/Target/ethernetif.c **** 
  35:LWIP/Target/ethernetif.c **** /* USER CODE END 0 */
  36:LWIP/Target/ethernetif.c **** 
  37:LWIP/Target/ethernetif.c **** /* Private define ------------------------------------------------------------*/
  38:LWIP/Target/ethernetif.c **** /* The time to block waiting for input. */
  39:LWIP/Target/ethernetif.c **** #define TIME_WAITING_FOR_INPUT ( portMAX_DELAY )
  40:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN OS_THREAD_STACK_SIZE_WITH_RTOS */
  41:LWIP/Target/ethernetif.c **** /* Stack size of the interface thread */
  42:LWIP/Target/ethernetif.c **** #define INTERFACE_THREAD_STACK_SIZE ( 350 )
  43:LWIP/Target/ethernetif.c **** /* USER CODE END OS_THREAD_STACK_SIZE_WITH_RTOS */
  44:LWIP/Target/ethernetif.c **** /* Network interface name */
  45:LWIP/Target/ethernetif.c **** #define IFNAME0 's'
  46:LWIP/Target/ethernetif.c **** #define IFNAME1 't'
  47:LWIP/Target/ethernetif.c **** 
  48:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 1 */
  49:LWIP/Target/ethernetif.c **** 
  50:LWIP/Target/ethernetif.c **** /* USER CODE END 1 */
  51:LWIP/Target/ethernetif.c **** 
  52:LWIP/Target/ethernetif.c **** /* Private variables ---------------------------------------------------------*/
  53:LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  54:LWIP/Target/ethernetif.c ****   #pragma data_alignment=4
  55:LWIP/Target/ethernetif.c **** #endif
  56:LWIP/Target/ethernetif.c **** __ALIGN_BEGIN ETH_DMADescTypeDef  DMARxDscrTab[ETH_RXBUFNB] __ALIGN_END;/* Ethernet Rx MA Descripto
  57:LWIP/Target/ethernetif.c **** 
  58:LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  59:LWIP/Target/ethernetif.c ****   #pragma data_alignment=4
  60:LWIP/Target/ethernetif.c **** #endif
  61:LWIP/Target/ethernetif.c **** __ALIGN_BEGIN ETH_DMADescTypeDef  DMATxDscrTab[ETH_TXBUFNB] __ALIGN_END;/* Ethernet Tx DMA Descript
  62:LWIP/Target/ethernetif.c **** 
  63:LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  64:LWIP/Target/ethernetif.c ****   #pragma data_alignment=4
  65:LWIP/Target/ethernetif.c **** #endif
  66:LWIP/Target/ethernetif.c **** __ALIGN_BEGIN uint8_t Rx_Buff[ETH_RXBUFNB][ETH_RX_BUF_SIZE] __ALIGN_END; /* Ethernet Receive Buffer
  67:LWIP/Target/ethernetif.c **** 
  68:LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  69:LWIP/Target/ethernetif.c ****   #pragma data_alignment=4
  70:LWIP/Target/ethernetif.c **** #endif
  71:LWIP/Target/ethernetif.c **** __ALIGN_BEGIN uint8_t Tx_Buff[ETH_TXBUFNB][ETH_TX_BUF_SIZE] __ALIGN_END; /* Ethernet Transmit Buffe
  72:LWIP/Target/ethernetif.c **** 
  73:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 2 */
  74:LWIP/Target/ethernetif.c **** 
  75:LWIP/Target/ethernetif.c **** /* USER CODE END 2 */
  76:LWIP/Target/ethernetif.c **** 
  77:LWIP/Target/ethernetif.c **** /* Semaphore to signal incoming packets */
ARM GAS  /tmp/ccaGaNfs.s 			page 3


  78:LWIP/Target/ethernetif.c **** osSemaphoreId s_xSemaphore = NULL;
  79:LWIP/Target/ethernetif.c **** /* Global Ethernet handle */
  80:LWIP/Target/ethernetif.c **** ETH_HandleTypeDef heth;
  81:LWIP/Target/ethernetif.c **** 
  82:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 3 */
  83:LWIP/Target/ethernetif.c **** 
  84:LWIP/Target/ethernetif.c **** /* USER CODE END 3 */
  85:LWIP/Target/ethernetif.c **** 
  86:LWIP/Target/ethernetif.c **** /* Private functions ---------------------------------------------------------*/
  87:LWIP/Target/ethernetif.c **** 
  88:LWIP/Target/ethernetif.c **** void HAL_ETH_MspInit(ETH_HandleTypeDef* ethHandle)
  89:LWIP/Target/ethernetif.c **** {
  41              		.loc 1 89 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 56
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 8EB0     		sub	sp, sp, #56
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 64
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
  56 0006 7860     		str	r0, [r7, #4]
  90:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  57              		.loc 1 90 20
  58 0008 07F12403 		add	r3, r7, #36
  59 000c 0022     		movs	r2, #0
  60 000e 1A60     		str	r2, [r3]
  61 0010 5A60     		str	r2, [r3, #4]
  62 0012 9A60     		str	r2, [r3, #8]
  63 0014 DA60     		str	r2, [r3, #12]
  64 0016 1A61     		str	r2, [r3, #16]
  91:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
  65              		.loc 1 91 15
  66 0018 7B68     		ldr	r3, [r7, #4]
  67 001a 1B68     		ldr	r3, [r3]
  68              		.loc 1 91 5
  69 001c 4A4A     		ldr	r2, .L4
  70 001e 9342     		cmp	r3, r2
  71 0020 40F08D80 		bne	.L3
  72              	.LBB2:
  92:LWIP/Target/ethernetif.c ****   {
  93:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 0 */
  94:LWIP/Target/ethernetif.c **** 
  95:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 0 */
  96:LWIP/Target/ethernetif.c ****     /* Enable Peripheral clock */
  97:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH_CLK_ENABLE();
  73              		.loc 1 97 5
  74 0024 0023     		movs	r3, #0
  75 0026 3B62     		str	r3, [r7, #32]
  76 0028 484B     		ldr	r3, .L4+4
  77 002a 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccaGaNfs.s 			page 4


  78 002c 474A     		ldr	r2, .L4+4
  79 002e 43F00073 		orr	r3, r3, #33554432
  80 0032 1363     		str	r3, [r2, #48]
  81 0034 454B     		ldr	r3, .L4+4
  82 0036 1B6B     		ldr	r3, [r3, #48]
  83 0038 03F00073 		and	r3, r3, #33554432
  84 003c 3B62     		str	r3, [r7, #32]
  85 003e 3B6A     		ldr	r3, [r7, #32]
  86              	.LBE2:
  87              	.LBB3:
  88 0040 0023     		movs	r3, #0
  89 0042 FB61     		str	r3, [r7, #28]
  90 0044 414B     		ldr	r3, .L4+4
  91 0046 1B6B     		ldr	r3, [r3, #48]
  92 0048 404A     		ldr	r2, .L4+4
  93 004a 43F08063 		orr	r3, r3, #67108864
  94 004e 1363     		str	r3, [r2, #48]
  95 0050 3E4B     		ldr	r3, .L4+4
  96 0052 1B6B     		ldr	r3, [r3, #48]
  97 0054 03F08063 		and	r3, r3, #67108864
  98 0058 FB61     		str	r3, [r7, #28]
  99 005a FB69     		ldr	r3, [r7, #28]
 100              	.LBE3:
 101              	.LBB4:
 102 005c 0023     		movs	r3, #0
 103 005e BB61     		str	r3, [r7, #24]
 104 0060 3A4B     		ldr	r3, .L4+4
 105 0062 1B6B     		ldr	r3, [r3, #48]
 106 0064 394A     		ldr	r2, .L4+4
 107 0066 43F00063 		orr	r3, r3, #134217728
 108 006a 1363     		str	r3, [r2, #48]
 109 006c 374B     		ldr	r3, .L4+4
 110 006e 1B6B     		ldr	r3, [r3, #48]
 111 0070 03F00063 		and	r3, r3, #134217728
 112 0074 BB61     		str	r3, [r7, #24]
 113 0076 BB69     		ldr	r3, [r7, #24]
 114              	.LBE4:
 115              	.LBB5:
  98:LWIP/Target/ethernetif.c **** 
  99:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 116              		.loc 1 99 5
 117 0078 0023     		movs	r3, #0
 118 007a 7B61     		str	r3, [r7, #20]
 119 007c 334B     		ldr	r3, .L4+4
 120 007e 1B6B     		ldr	r3, [r3, #48]
 121 0080 324A     		ldr	r2, .L4+4
 122 0082 43F00403 		orr	r3, r3, #4
 123 0086 1363     		str	r3, [r2, #48]
 124 0088 304B     		ldr	r3, .L4+4
 125 008a 1B6B     		ldr	r3, [r3, #48]
 126 008c 03F00403 		and	r3, r3, #4
 127 0090 7B61     		str	r3, [r7, #20]
 128 0092 7B69     		ldr	r3, [r7, #20]
 129              	.LBE5:
 130              	.LBB6:
 100:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 131              		.loc 1 100 5
ARM GAS  /tmp/ccaGaNfs.s 			page 5


 132 0094 0023     		movs	r3, #0
 133 0096 3B61     		str	r3, [r7, #16]
 134 0098 2C4B     		ldr	r3, .L4+4
 135 009a 1B6B     		ldr	r3, [r3, #48]
 136 009c 2B4A     		ldr	r2, .L4+4
 137 009e 43F00103 		orr	r3, r3, #1
 138 00a2 1363     		str	r3, [r2, #48]
 139 00a4 294B     		ldr	r3, .L4+4
 140 00a6 1B6B     		ldr	r3, [r3, #48]
 141 00a8 03F00103 		and	r3, r3, #1
 142 00ac 3B61     		str	r3, [r7, #16]
 143 00ae 3B69     		ldr	r3, [r7, #16]
 144              	.LBE6:
 145              	.LBB7:
 101:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 146              		.loc 1 101 5
 147 00b0 0023     		movs	r3, #0
 148 00b2 FB60     		str	r3, [r7, #12]
 149 00b4 254B     		ldr	r3, .L4+4
 150 00b6 1B6B     		ldr	r3, [r3, #48]
 151 00b8 244A     		ldr	r2, .L4+4
 152 00ba 43F00203 		orr	r3, r3, #2
 153 00be 1363     		str	r3, [r2, #48]
 154 00c0 224B     		ldr	r3, .L4+4
 155 00c2 1B6B     		ldr	r3, [r3, #48]
 156 00c4 03F00203 		and	r3, r3, #2
 157 00c8 FB60     		str	r3, [r7, #12]
 158 00ca FB68     		ldr	r3, [r7, #12]
 159              	.LBE7:
 102:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 103:LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 104:LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 105:LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 106:LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 107:LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 108:LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 109:LWIP/Target/ethernetif.c ****     PB11     ------> ETH_TX_EN
 110:LWIP/Target/ethernetif.c ****     PB12     ------> ETH_TXD0
 111:LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 112:LWIP/Target/ethernetif.c ****     */
 113:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5;
 160              		.loc 1 113 25
 161 00cc 3223     		movs	r3, #50
 162 00ce 7B62     		str	r3, [r7, #36]
 114:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 163              		.loc 1 114 26
 164 00d0 0223     		movs	r3, #2
 165 00d2 BB62     		str	r3, [r7, #40]
 115:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 115 26
 167 00d4 0023     		movs	r3, #0
 168 00d6 FB62     		str	r3, [r7, #44]
 116:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 169              		.loc 1 116 27
 170 00d8 0323     		movs	r3, #3
 171 00da 3B63     		str	r3, [r7, #48]
 117:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
ARM GAS  /tmp/ccaGaNfs.s 			page 6


 172              		.loc 1 117 31
 173 00dc 0B23     		movs	r3, #11
 174 00de 7B63     		str	r3, [r7, #52]
 118:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 175              		.loc 1 118 5
 176 00e0 07F12403 		add	r3, r7, #36
 177 00e4 1946     		mov	r1, r3
 178 00e6 1A48     		ldr	r0, .L4+8
 179 00e8 FFF7FEFF 		bl	HAL_GPIO_Init
 119:LWIP/Target/ethernetif.c **** 
 120:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_7;
 180              		.loc 1 120 25
 181 00ec 8623     		movs	r3, #134
 182 00ee 7B62     		str	r3, [r7, #36]
 121:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 183              		.loc 1 121 26
 184 00f0 0223     		movs	r3, #2
 185 00f2 BB62     		str	r3, [r7, #40]
 122:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 122 26
 187 00f4 0023     		movs	r3, #0
 188 00f6 FB62     		str	r3, [r7, #44]
 123:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 189              		.loc 1 123 27
 190 00f8 0323     		movs	r3, #3
 191 00fa 3B63     		str	r3, [r7, #48]
 124:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 192              		.loc 1 124 31
 193 00fc 0B23     		movs	r3, #11
 194 00fe 7B63     		str	r3, [r7, #52]
 125:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 195              		.loc 1 125 5
 196 0100 07F12403 		add	r3, r7, #36
 197 0104 1946     		mov	r1, r3
 198 0106 1348     		ldr	r0, .L4+12
 199 0108 FFF7FEFF 		bl	HAL_GPIO_Init
 126:LWIP/Target/ethernetif.c **** 
 127:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13;
 200              		.loc 1 127 25
 201 010c 4FF46053 		mov	r3, #14336
 202 0110 7B62     		str	r3, [r7, #36]
 128:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 203              		.loc 1 128 26
 204 0112 0223     		movs	r3, #2
 205 0114 BB62     		str	r3, [r7, #40]
 129:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 206              		.loc 1 129 26
 207 0116 0023     		movs	r3, #0
 208 0118 FB62     		str	r3, [r7, #44]
 130:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 209              		.loc 1 130 27
 210 011a 0323     		movs	r3, #3
 211 011c 3B63     		str	r3, [r7, #48]
 131:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 212              		.loc 1 131 31
 213 011e 0B23     		movs	r3, #11
 214 0120 7B63     		str	r3, [r7, #52]
ARM GAS  /tmp/ccaGaNfs.s 			page 7


 132:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 215              		.loc 1 132 5
 216 0122 07F12403 		add	r3, r7, #36
 217 0126 1946     		mov	r1, r3
 218 0128 0B48     		ldr	r0, .L4+16
 219 012a FFF7FEFF 		bl	HAL_GPIO_Init
 133:LWIP/Target/ethernetif.c **** 
 134:LWIP/Target/ethernetif.c ****     /* Peripheral interrupt init */
 135:LWIP/Target/ethernetif.c ****     HAL_NVIC_SetPriority(ETH_IRQn, 5, 0);
 220              		.loc 1 135 5
 221 012e 0022     		movs	r2, #0
 222 0130 0521     		movs	r1, #5
 223 0132 3D20     		movs	r0, #61
 224 0134 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 136:LWIP/Target/ethernetif.c ****     HAL_NVIC_EnableIRQ(ETH_IRQn);
 225              		.loc 1 136 5
 226 0138 3D20     		movs	r0, #61
 227 013a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 228              	.L3:
 137:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 1 */
 138:LWIP/Target/ethernetif.c **** 
 139:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 1 */
 140:LWIP/Target/ethernetif.c ****   }
 141:LWIP/Target/ethernetif.c **** }
 229              		.loc 1 141 1
 230 013e 00BF     		nop
 231 0140 3837     		adds	r7, r7, #56
 232              	.LCFI3:
 233              		.cfi_def_cfa_offset 8
 234 0142 BD46     		mov	sp, r7
 235              	.LCFI4:
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0144 80BD     		pop	{r7, pc}
 239              	.L5:
 240 0146 00BF     		.align	2
 241              	.L4:
 242 0148 00800240 		.word	1073905664
 243 014c 00380240 		.word	1073887232
 244 0150 00080240 		.word	1073874944
 245 0154 00000240 		.word	1073872896
 246 0158 00040240 		.word	1073873920
 247              		.cfi_endproc
 248              	.LFE137:
 250              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 251              		.align	1
 252              		.global	HAL_ETH_MspDeInit
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	HAL_ETH_MspDeInit:
 259              	.LFB138:
 142:LWIP/Target/ethernetif.c **** 
 143:LWIP/Target/ethernetif.c **** void HAL_ETH_MspDeInit(ETH_HandleTypeDef* ethHandle)
 144:LWIP/Target/ethernetif.c **** {
 260              		.loc 1 144 1
ARM GAS  /tmp/ccaGaNfs.s 			page 8


 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              	.LCFI5:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 82B0     		sub	sp, sp, #8
 270              	.LCFI6:
 271              		.cfi_def_cfa_offset 16
 272 0004 00AF     		add	r7, sp, #0
 273              	.LCFI7:
 274              		.cfi_def_cfa_register 7
 275 0006 7860     		str	r0, [r7, #4]
 145:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 276              		.loc 1 145 15
 277 0008 7B68     		ldr	r3, [r7, #4]
 278 000a 1B68     		ldr	r3, [r3]
 279              		.loc 1 145 5
 280 000c 144A     		ldr	r2, .L9
 281 000e 9342     		cmp	r3, r2
 282 0010 21D1     		bne	.L8
 146:LWIP/Target/ethernetif.c ****   {
 147:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 0 */
 148:LWIP/Target/ethernetif.c **** 
 149:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 0 */
 150:LWIP/Target/ethernetif.c ****     /* Peripheral clock disable */
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH_CLK_DISABLE();
 283              		.loc 1 151 5
 284 0012 144B     		ldr	r3, .L9+4
 285 0014 1B6B     		ldr	r3, [r3, #48]
 286 0016 134A     		ldr	r2, .L9+4
 287 0018 23F08063 		bic	r3, r3, #67108864
 288 001c 1363     		str	r3, [r2, #48]
 289 001e 114B     		ldr	r3, .L9+4
 290 0020 1B6B     		ldr	r3, [r3, #48]
 291 0022 104A     		ldr	r2, .L9+4
 292 0024 23F00063 		bic	r3, r3, #134217728
 293 0028 1363     		str	r3, [r2, #48]
 294 002a 0E4B     		ldr	r3, .L9+4
 295 002c 1B6B     		ldr	r3, [r3, #48]
 296 002e 0D4A     		ldr	r2, .L9+4
 297 0030 23F00073 		bic	r3, r3, #33554432
 298 0034 1363     		str	r3, [r2, #48]
 152:LWIP/Target/ethernetif.c **** 
 153:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 154:LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 155:LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 156:LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 157:LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 158:LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 159:LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 160:LWIP/Target/ethernetif.c ****     PB11     ------> ETH_TX_EN
 161:LWIP/Target/ethernetif.c ****     PB12     ------> ETH_TXD0
 162:LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 163:LWIP/Target/ethernetif.c ****     */
ARM GAS  /tmp/ccaGaNfs.s 			page 9


 164:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5);
 299              		.loc 1 164 5
 300 0036 3221     		movs	r1, #50
 301 0038 0B48     		ldr	r0, .L9+8
 302 003a FFF7FEFF 		bl	HAL_GPIO_DeInit
 165:LWIP/Target/ethernetif.c **** 
 166:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_7);
 303              		.loc 1 166 5
 304 003e 8621     		movs	r1, #134
 305 0040 0A48     		ldr	r0, .L9+12
 306 0042 FFF7FEFF 		bl	HAL_GPIO_DeInit
 167:LWIP/Target/ethernetif.c **** 
 168:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13);
 307              		.loc 1 168 5
 308 0046 4FF46051 		mov	r1, #14336
 309 004a 0948     		ldr	r0, .L9+16
 310 004c FFF7FEFF 		bl	HAL_GPIO_DeInit
 169:LWIP/Target/ethernetif.c **** 
 170:LWIP/Target/ethernetif.c ****     /* Peripheral interrupt Deinit*/
 171:LWIP/Target/ethernetif.c ****     HAL_NVIC_DisableIRQ(ETH_IRQn);
 311              		.loc 1 171 5
 312 0050 3D20     		movs	r0, #61
 313 0052 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 314              	.L8:
 172:LWIP/Target/ethernetif.c **** 
 173:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 1 */
 174:LWIP/Target/ethernetif.c **** 
 175:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 1 */
 176:LWIP/Target/ethernetif.c ****   }
 177:LWIP/Target/ethernetif.c **** }
 315              		.loc 1 177 1
 316 0056 00BF     		nop
 317 0058 0837     		adds	r7, r7, #8
 318              	.LCFI8:
 319              		.cfi_def_cfa_offset 8
 320 005a BD46     		mov	sp, r7
 321              	.LCFI9:
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 005c 80BD     		pop	{r7, pc}
 325              	.L10:
 326 005e 00BF     		.align	2
 327              	.L9:
 328 0060 00800240 		.word	1073905664
 329 0064 00380240 		.word	1073887232
 330 0068 00080240 		.word	1073874944
 331 006c 00000240 		.word	1073872896
 332 0070 00040240 		.word	1073873920
 333              		.cfi_endproc
 334              	.LFE138:
 336              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 337              		.align	1
 338              		.global	HAL_ETH_RxCpltCallback
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccaGaNfs.s 			page 10


 344              	HAL_ETH_RxCpltCallback:
 345              	.LFB139:
 178:LWIP/Target/ethernetif.c **** 
 179:LWIP/Target/ethernetif.c **** /**
 180:LWIP/Target/ethernetif.c ****   * @brief  Ethernet Rx Transfer completed callback
 181:LWIP/Target/ethernetif.c ****   * @param  heth: ETH handle
 182:LWIP/Target/ethernetif.c ****   * @retval None
 183:LWIP/Target/ethernetif.c ****   */
 184:LWIP/Target/ethernetif.c **** void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
 185:LWIP/Target/ethernetif.c **** {
 346              		.loc 1 185 1
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              	.LCFI10:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 82B0     		sub	sp, sp, #8
 356              	.LCFI11:
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              	.LCFI12:
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 186:LWIP/Target/ethernetif.c ****   osSemaphoreRelease(s_xSemaphore);
 362              		.loc 1 186 3
 363 0008 044B     		ldr	r3, .L12
 364 000a 1B68     		ldr	r3, [r3]
 365 000c 1846     		mov	r0, r3
 366 000e FFF7FEFF 		bl	osSemaphoreRelease
 187:LWIP/Target/ethernetif.c **** }
 367              		.loc 1 187 1
 368 0012 00BF     		nop
 369 0014 0837     		adds	r7, r7, #8
 370              	.LCFI13:
 371              		.cfi_def_cfa_offset 8
 372 0016 BD46     		mov	sp, r7
 373              	.LCFI14:
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 0018 80BD     		pop	{r7, pc}
 377              	.L13:
 378 001a 00BF     		.align	2
 379              	.L12:
 380 001c 00000000 		.word	s_xSemaphore
 381              		.cfi_endproc
 382              	.LFE139:
 384              		.section	.rodata
 385              		.align	2
 386              	.LC0:
 387 0000 45746849 		.ascii	"EthIf\000"
 387      6600
 388              		.section	.text.low_level_init,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
ARM GAS  /tmp/ccaGaNfs.s 			page 11


 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
 395              	low_level_init:
 396              	.LFB140:
 188:LWIP/Target/ethernetif.c **** 
 189:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 4 */
 190:LWIP/Target/ethernetif.c **** 
 191:LWIP/Target/ethernetif.c **** /* USER CODE END 4 */
 192:LWIP/Target/ethernetif.c **** 
 193:LWIP/Target/ethernetif.c **** /*******************************************************************************
 194:LWIP/Target/ethernetif.c ****                        LL Driver Interface ( LwIP stack --> ETH)
 195:LWIP/Target/ethernetif.c **** *******************************************************************************/
 196:LWIP/Target/ethernetif.c **** /**
 197:LWIP/Target/ethernetif.c ****  * In this function, the hardware should be initialized.
 198:LWIP/Target/ethernetif.c ****  * Called from ethernetif_init().
 199:LWIP/Target/ethernetif.c ****  *
 200:LWIP/Target/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
 201:LWIP/Target/ethernetif.c ****  *        for this ethernetif
 202:LWIP/Target/ethernetif.c ****  */
 203:LWIP/Target/ethernetif.c **** static void low_level_init(struct netif *netif)
 204:LWIP/Target/ethernetif.c **** {
 397              		.loc 1 204 1
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 64
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              	.LCFI15:
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 90B0     		sub	sp, sp, #64
 407              	.LCFI16:
 408              		.cfi_def_cfa_offset 72
 409 0004 00AF     		add	r7, sp, #0
 410              	.LCFI17:
 411              		.cfi_def_cfa_register 7
 412 0006 7860     		str	r0, [r7, #4]
 205:LWIP/Target/ethernetif.c ****   uint32_t regvalue = 0;
 413              		.loc 1 205 12
 414 0008 0023     		movs	r3, #0
 415 000a BB63     		str	r3, [r7, #56]
 206:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status;
 207:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN OS_THREAD_ATTR_CMSIS_RTOS_V2 */
 208:LWIP/Target/ethernetif.c ****   osThreadAttr_t attributes;
 209:LWIP/Target/ethernetif.c **** /* USER CODE END OS_THREAD_ATTR_CMSIS_RTOS_V2 */
 210:LWIP/Target/ethernetif.c **** 
 211:LWIP/Target/ethernetif.c **** /* Init ETH */
 212:LWIP/Target/ethernetif.c **** 
 213:LWIP/Target/ethernetif.c ****    uint8_t MACAddr[6] ;
 214:LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 416              		.loc 1 214 17
 417 000c 5D4B     		ldr	r3, .L16
 418 000e 5E4A     		ldr	r2, .L16+4
 419 0010 1A60     		str	r2, [r3]
 215:LWIP/Target/ethernetif.c ****   heth.Init.AutoNegotiation = ETH_AUTONEGOTIATION_ENABLE;
 420              		.loc 1 215 29
ARM GAS  /tmp/ccaGaNfs.s 			page 12


 421 0012 5C4B     		ldr	r3, .L16
 422 0014 0122     		movs	r2, #1
 423 0016 5A60     		str	r2, [r3, #4]
 216:LWIP/Target/ethernetif.c ****   heth.Init.Speed = ETH_SPEED_100M;
 424              		.loc 1 216 19
 425 0018 5A4B     		ldr	r3, .L16
 426 001a 4FF48042 		mov	r2, #16384
 427 001e 9A60     		str	r2, [r3, #8]
 217:LWIP/Target/ethernetif.c ****   heth.Init.DuplexMode = ETH_MODE_FULLDUPLEX;
 428              		.loc 1 217 24
 429 0020 584B     		ldr	r3, .L16
 430 0022 4FF40062 		mov	r2, #2048
 431 0026 DA60     		str	r2, [r3, #12]
 218:LWIP/Target/ethernetif.c ****   heth.Init.PhyAddress = LAN8742A_PHY_ADDRESS;
 432              		.loc 1 218 24
 433 0028 564B     		ldr	r3, .L16
 434 002a 0122     		movs	r2, #1
 435 002c 1A82     		strh	r2, [r3, #16]	@ movhi
 219:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 436              		.loc 1 219 14
 437 002e 0023     		movs	r3, #0
 438 0030 3B73     		strb	r3, [r7, #12]
 220:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 439              		.loc 1 220 14
 440 0032 8023     		movs	r3, #128
 441 0034 7B73     		strb	r3, [r7, #13]
 221:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 442              		.loc 1 221 14
 443 0036 E123     		movs	r3, #225
 444 0038 BB73     		strb	r3, [r7, #14]
 222:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 445              		.loc 1 222 14
 446 003a 0023     		movs	r3, #0
 447 003c FB73     		strb	r3, [r7, #15]
 223:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 448              		.loc 1 223 14
 449 003e 0023     		movs	r3, #0
 450 0040 3B74     		strb	r3, [r7, #16]
 224:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 451              		.loc 1 224 14
 452 0042 0023     		movs	r3, #0
 453 0044 7B74     		strb	r3, [r7, #17]
 225:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 454              		.loc 1 225 21
 455 0046 4F4A     		ldr	r2, .L16
 456 0048 07F10C03 		add	r3, r7, #12
 457 004c 5361     		str	r3, [r2, #20]
 226:LWIP/Target/ethernetif.c ****   heth.Init.RxMode = ETH_RXINTERRUPT_MODE;
 458              		.loc 1 226 20
 459 004e 4D4B     		ldr	r3, .L16
 460 0050 0122     		movs	r2, #1
 461 0052 9A61     		str	r2, [r3, #24]
 227:LWIP/Target/ethernetif.c ****   heth.Init.ChecksumMode = ETH_CHECKSUM_BY_HARDWARE;
 462              		.loc 1 227 26
 463 0054 4B4B     		ldr	r3, .L16
 464 0056 0022     		movs	r2, #0
 465 0058 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccaGaNfs.s 			page 13


 228:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = ETH_MEDIA_INTERFACE_RMII;
 466              		.loc 1 228 28
 467 005a 4A4B     		ldr	r3, .L16
 468 005c 4FF40002 		mov	r2, #8388608
 469 0060 1A62     		str	r2, [r3, #32]
 229:LWIP/Target/ethernetif.c **** 
 230:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN MACADDRESS */
 231:LWIP/Target/ethernetif.c **** 
 232:LWIP/Target/ethernetif.c ****   /* USER CODE END MACADDRESS */
 233:LWIP/Target/ethernetif.c **** 
 234:LWIP/Target/ethernetif.c ****   hal_eth_init_status = HAL_ETH_Init(&heth);
 470              		.loc 1 234 25
 471 0062 4848     		ldr	r0, .L16
 472 0064 FFF7FEFF 		bl	HAL_ETH_Init
 473 0068 0346     		mov	r3, r0
 474 006a 87F83F30 		strb	r3, [r7, #63]
 235:LWIP/Target/ethernetif.c **** 
 236:LWIP/Target/ethernetif.c ****   if (hal_eth_init_status == HAL_OK)
 475              		.loc 1 236 6
 476 006e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 477 0072 002B     		cmp	r3, #0
 478 0074 08D1     		bne	.L15
 237:LWIP/Target/ethernetif.c ****   {
 238:LWIP/Target/ethernetif.c ****     /* Set netif link flag */
 239:LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_LINK_UP;
 479              		.loc 1 239 18
 480 0076 7B68     		ldr	r3, [r7, #4]
 481 0078 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 482 007c 43F00403 		orr	r3, r3, #4
 483 0080 DAB2     		uxtb	r2, r3
 484 0082 7B68     		ldr	r3, [r7, #4]
 485 0084 83F83120 		strb	r2, [r3, #49]
 486              	.L15:
 240:LWIP/Target/ethernetif.c ****   }
 241:LWIP/Target/ethernetif.c ****   /* Initialize Tx Descriptors list: Chain Mode */
 242:LWIP/Target/ethernetif.c ****   HAL_ETH_DMATxDescListInit(&heth, DMATxDscrTab, &Tx_Buff[0][0], ETH_TXBUFNB);
 487              		.loc 1 242 3
 488 0088 0423     		movs	r3, #4
 489 008a 404A     		ldr	r2, .L16+8
 490 008c 4049     		ldr	r1, .L16+12
 491 008e 3D48     		ldr	r0, .L16
 492 0090 FFF7FEFF 		bl	HAL_ETH_DMATxDescListInit
 243:LWIP/Target/ethernetif.c **** 
 244:LWIP/Target/ethernetif.c ****   /* Initialize Rx Descriptors list: Chain Mode  */
 245:LWIP/Target/ethernetif.c ****   HAL_ETH_DMARxDescListInit(&heth, DMARxDscrTab, &Rx_Buff[0][0], ETH_RXBUFNB);
 493              		.loc 1 245 3
 494 0094 0423     		movs	r3, #4
 495 0096 3F4A     		ldr	r2, .L16+16
 496 0098 3F49     		ldr	r1, .L16+20
 497 009a 3A48     		ldr	r0, .L16
 498 009c FFF7FEFF 		bl	HAL_ETH_DMARxDescListInit
 246:LWIP/Target/ethernetif.c **** 
 247:LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 248:LWIP/Target/ethernetif.c **** 
 249:LWIP/Target/ethernetif.c ****   /* set MAC hardware address length */
 250:LWIP/Target/ethernetif.c ****   netif->hwaddr_len = ETH_HWADDR_LEN;
 499              		.loc 1 250 21
ARM GAS  /tmp/ccaGaNfs.s 			page 14


 500 00a0 7B68     		ldr	r3, [r7, #4]
 501 00a2 0622     		movs	r2, #6
 502 00a4 83F83020 		strb	r2, [r3, #48]
 251:LWIP/Target/ethernetif.c **** 
 252:LWIP/Target/ethernetif.c ****   /* set MAC hardware address */
 253:LWIP/Target/ethernetif.c ****   netif->hwaddr[0] =  heth.Init.MACAddr[0];
 503              		.loc 1 253 32
 504 00a8 364B     		ldr	r3, .L16
 505 00aa 5B69     		ldr	r3, [r3, #20]
 506              		.loc 1 253 40
 507 00ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 508              		.loc 1 253 20
 509 00ae 7B68     		ldr	r3, [r7, #4]
 510 00b0 83F82A20 		strb	r2, [r3, #42]
 254:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 511              		.loc 1 254 32
 512 00b4 334B     		ldr	r3, .L16
 513 00b6 5B69     		ldr	r3, [r3, #20]
 514              		.loc 1 254 20
 515 00b8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 516 00ba 7B68     		ldr	r3, [r7, #4]
 517 00bc 83F82B20 		strb	r2, [r3, #43]
 255:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 518              		.loc 1 255 32
 519 00c0 304B     		ldr	r3, .L16
 520 00c2 5B69     		ldr	r3, [r3, #20]
 521              		.loc 1 255 20
 522 00c4 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 523 00c6 7B68     		ldr	r3, [r7, #4]
 524 00c8 83F82C20 		strb	r2, [r3, #44]
 256:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 525              		.loc 1 256 32
 526 00cc 2D4B     		ldr	r3, .L16
 527 00ce 5B69     		ldr	r3, [r3, #20]
 528              		.loc 1 256 20
 529 00d0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 530 00d2 7B68     		ldr	r3, [r7, #4]
 531 00d4 83F82D20 		strb	r2, [r3, #45]
 257:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 532              		.loc 1 257 32
 533 00d8 2A4B     		ldr	r3, .L16
 534 00da 5B69     		ldr	r3, [r3, #20]
 535              		.loc 1 257 20
 536 00dc 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 537 00de 7B68     		ldr	r3, [r7, #4]
 538 00e0 83F82E20 		strb	r2, [r3, #46]
 258:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 539              		.loc 1 258 32
 540 00e4 274B     		ldr	r3, .L16
 541 00e6 5B69     		ldr	r3, [r3, #20]
 542              		.loc 1 258 20
 543 00e8 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 544 00ea 7B68     		ldr	r3, [r7, #4]
 545 00ec 83F82F20 		strb	r2, [r3, #47]
 259:LWIP/Target/ethernetif.c **** 
 260:LWIP/Target/ethernetif.c ****   /* maximum transfer unit */
 261:LWIP/Target/ethernetif.c ****   netif->mtu = 1500;
ARM GAS  /tmp/ccaGaNfs.s 			page 15


 546              		.loc 1 261 14
 547 00f0 7B68     		ldr	r3, [r7, #4]
 548 00f2 40F2DC52 		movw	r2, #1500
 549 00f6 1A85     		strh	r2, [r3, #40]	@ movhi
 262:LWIP/Target/ethernetif.c **** 
 263:LWIP/Target/ethernetif.c ****   /* Accept broadcast address and ARP traffic */
 264:LWIP/Target/ethernetif.c ****   /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
 265:LWIP/Target/ethernetif.c ****   #if LWIP_ARP
 266:LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
 550              		.loc 1 266 18
 551 00f8 7B68     		ldr	r3, [r7, #4]
 552 00fa 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 553 00fe 43F00A03 		orr	r3, r3, #10
 554 0102 DAB2     		uxtb	r2, r3
 555 0104 7B68     		ldr	r3, [r7, #4]
 556 0106 83F83120 		strb	r2, [r3, #49]
 267:LWIP/Target/ethernetif.c ****   #else
 268:LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST;
 269:LWIP/Target/ethernetif.c ****   #endif /* LWIP_ARP */
 270:LWIP/Target/ethernetif.c **** 
 271:LWIP/Target/ethernetif.c **** /* create a binary semaphore used for informing ethernetif of frame reception */
 272:LWIP/Target/ethernetif.c ****   s_xSemaphore = osSemaphoreNew(1, 1, NULL);
 557              		.loc 1 272 18
 558 010a 0022     		movs	r2, #0
 559 010c 0121     		movs	r1, #1
 560 010e 0120     		movs	r0, #1
 561 0110 FFF7FEFF 		bl	osSemaphoreNew
 562 0114 0246     		mov	r2, r0
 563              		.loc 1 272 16
 564 0116 214B     		ldr	r3, .L16+24
 565 0118 1A60     		str	r2, [r3]
 273:LWIP/Target/ethernetif.c **** 
 274:LWIP/Target/ethernetif.c **** /* create the task that handles the ETH_MAC */
 275:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN OS_THREAD_NEW_CMSIS_RTOS_V2 */
 276:LWIP/Target/ethernetif.c ****   memset(&attributes, 0x0, sizeof(osThreadAttr_t));
 566              		.loc 1 276 3
 567 011a 07F11403 		add	r3, r7, #20
 568 011e 2422     		movs	r2, #36
 569 0120 0021     		movs	r1, #0
 570 0122 1846     		mov	r0, r3
 571 0124 FFF7FEFF 		bl	memset
 277:LWIP/Target/ethernetif.c ****   attributes.name = "EthIf";
 572              		.loc 1 277 19
 573 0128 1D4B     		ldr	r3, .L16+28
 574 012a 7B61     		str	r3, [r7, #20]
 278:LWIP/Target/ethernetif.c ****   attributes.stack_size = INTERFACE_THREAD_STACK_SIZE;
 575              		.loc 1 278 25
 576 012c 4FF4AF73 		mov	r3, #350
 577 0130 BB62     		str	r3, [r7, #40]
 279:LWIP/Target/ethernetif.c ****   attributes.priority = osPriorityRealtime;
 578              		.loc 1 279 23
 579 0132 3023     		movs	r3, #48
 580 0134 FB62     		str	r3, [r7, #44]
 280:LWIP/Target/ethernetif.c ****   osThreadNew(ethernetif_input, netif, &attributes);
 581              		.loc 1 280 3
 582 0136 07F11403 		add	r3, r7, #20
 583 013a 1A46     		mov	r2, r3
ARM GAS  /tmp/ccaGaNfs.s 			page 16


 584 013c 7968     		ldr	r1, [r7, #4]
 585 013e 1948     		ldr	r0, .L16+32
 586 0140 FFF7FEFF 		bl	osThreadNew
 281:LWIP/Target/ethernetif.c **** /* USER CODE END OS_THREAD_NEW_CMSIS_RTOS_V2 */
 282:LWIP/Target/ethernetif.c ****   /* Enable MAC and DMA transmission and reception */
 283:LWIP/Target/ethernetif.c ****   HAL_ETH_Start(&heth);
 587              		.loc 1 283 3
 588 0144 0F48     		ldr	r0, .L16
 589 0146 FFF7FEFF 		bl	HAL_ETH_Start
 284:LWIP/Target/ethernetif.c **** 
 285:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN PHY_PRE_CONFIG */
 286:LWIP/Target/ethernetif.c **** 
 287:LWIP/Target/ethernetif.c **** /* USER CODE END PHY_PRE_CONFIG */
 288:LWIP/Target/ethernetif.c **** 
 289:LWIP/Target/ethernetif.c ****   /* Read Register Configuration */
 290:LWIP/Target/ethernetif.c ****   HAL_ETH_ReadPHYRegister(&heth, PHY_ISFR, &regvalue);
 590              		.loc 1 290 3
 591 014a 07F13803 		add	r3, r7, #56
 592 014e 1A46     		mov	r2, r3
 593 0150 1D21     		movs	r1, #29
 594 0152 0C48     		ldr	r0, .L16
 595 0154 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 291:LWIP/Target/ethernetif.c ****   regvalue |= (PHY_ISFR_INT4);
 596              		.loc 1 291 12
 597 0158 BB6B     		ldr	r3, [r7, #56]
 598 015a 43F00B03 		orr	r3, r3, #11
 599 015e BB63     		str	r3, [r7, #56]
 292:LWIP/Target/ethernetif.c **** 
 293:LWIP/Target/ethernetif.c ****   /* Enable Interrupt on change of link status */
 294:LWIP/Target/ethernetif.c ****   HAL_ETH_WritePHYRegister(&heth, PHY_ISFR , regvalue );
 600              		.loc 1 294 3
 601 0160 BB6B     		ldr	r3, [r7, #56]
 602 0162 1A46     		mov	r2, r3
 603 0164 1D21     		movs	r1, #29
 604 0166 0748     		ldr	r0, .L16
 605 0168 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 295:LWIP/Target/ethernetif.c **** 
 296:LWIP/Target/ethernetif.c ****   /* Read Register Configuration */
 297:LWIP/Target/ethernetif.c ****   HAL_ETH_ReadPHYRegister(&heth, PHY_ISFR , &regvalue);
 606              		.loc 1 297 3
 607 016c 07F13803 		add	r3, r7, #56
 608 0170 1A46     		mov	r2, r3
 609 0172 1D21     		movs	r1, #29
 610 0174 0348     		ldr	r0, .L16
 611 0176 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 298:LWIP/Target/ethernetif.c **** 
 299:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN PHY_POST_CONFIG */
 300:LWIP/Target/ethernetif.c **** 
 301:LWIP/Target/ethernetif.c **** /* USER CODE END PHY_POST_CONFIG */
 302:LWIP/Target/ethernetif.c **** 
 303:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 304:LWIP/Target/ethernetif.c **** 
 305:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN LOW_LEVEL_INIT */
 306:LWIP/Target/ethernetif.c **** 
 307:LWIP/Target/ethernetif.c **** /* USER CODE END LOW_LEVEL_INIT */
 308:LWIP/Target/ethernetif.c **** }
 612              		.loc 1 308 1
ARM GAS  /tmp/ccaGaNfs.s 			page 17


 613 017a 00BF     		nop
 614 017c 4037     		adds	r7, r7, #64
 615              	.LCFI18:
 616              		.cfi_def_cfa_offset 8
 617 017e BD46     		mov	sp, r7
 618              	.LCFI19:
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 0180 80BD     		pop	{r7, pc}
 622              	.L17:
 623 0182 00BF     		.align	2
 624              	.L16:
 625 0184 00000000 		.word	heth
 626 0188 00800240 		.word	1073905664
 627 018c 00000000 		.word	Tx_Buff
 628 0190 00000000 		.word	DMATxDscrTab
 629 0194 00000000 		.word	Rx_Buff
 630 0198 00000000 		.word	DMARxDscrTab
 631 019c 00000000 		.word	s_xSemaphore
 632 01a0 00000000 		.word	.LC0
 633 01a4 00000000 		.word	ethernetif_input
 634              		.cfi_endproc
 635              	.LFE140:
 637              		.section	.text.low_level_output,"ax",%progbits
 638              		.align	1
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	low_level_output:
 645              	.LFB141:
 309:LWIP/Target/ethernetif.c **** 
 310:LWIP/Target/ethernetif.c **** /**
 311:LWIP/Target/ethernetif.c ****  * This function should do the actual transmission of the packet. The packet is
 312:LWIP/Target/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 313:LWIP/Target/ethernetif.c ****  * might be chained.
 314:LWIP/Target/ethernetif.c ****  *
 315:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 316:LWIP/Target/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
 317:LWIP/Target/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 318:LWIP/Target/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 319:LWIP/Target/ethernetif.c ****  *
 320:LWIP/Target/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 321:LWIP/Target/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 322:LWIP/Target/ethernetif.c ****  *       to become availale since the stack doesn't retry to send a packet
 323:LWIP/Target/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 324:LWIP/Target/ethernetif.c ****  */
 325:LWIP/Target/ethernetif.c **** 
 326:LWIP/Target/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p)
 327:LWIP/Target/ethernetif.c **** {
 646              		.loc 1 327 1
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 40
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650 0000 80B5     		push	{r7, lr}
 651              	.LCFI20:
 652              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccaGaNfs.s 			page 18


 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 8AB0     		sub	sp, sp, #40
 656              	.LCFI21:
 657              		.cfi_def_cfa_offset 48
 658 0004 00AF     		add	r7, sp, #0
 659              	.LCFI22:
 660              		.cfi_def_cfa_register 7
 661 0006 7860     		str	r0, [r7, #4]
 662 0008 3960     		str	r1, [r7]
 328:LWIP/Target/ethernetif.c ****   err_t errval;
 329:LWIP/Target/ethernetif.c ****   struct pbuf *q;
 330:LWIP/Target/ethernetif.c ****   uint8_t *buffer = (uint8_t *)(heth.TxDesc->Buffer1Addr);
 663              		.loc 1 330 37
 664 000a 4B4B     		ldr	r3, .L28
 665 000c DB6A     		ldr	r3, [r3, #44]
 666              		.loc 1 330 44
 667 000e 9B68     		ldr	r3, [r3, #8]
 668              		.loc 1 330 12
 669 0010 FB61     		str	r3, [r7, #28]
 331:LWIP/Target/ethernetif.c ****   __IO ETH_DMADescTypeDef *DmaTxDesc;
 332:LWIP/Target/ethernetif.c ****   uint32_t framelength = 0;
 670              		.loc 1 332 12
 671 0012 0023     		movs	r3, #0
 672 0014 7B61     		str	r3, [r7, #20]
 333:LWIP/Target/ethernetif.c ****   uint32_t bufferoffset = 0;
 673              		.loc 1 333 12
 674 0016 0023     		movs	r3, #0
 675 0018 3B61     		str	r3, [r7, #16]
 334:LWIP/Target/ethernetif.c ****   uint32_t byteslefttocopy = 0;
 676              		.loc 1 334 12
 677 001a 0023     		movs	r3, #0
 678 001c FB60     		str	r3, [r7, #12]
 335:LWIP/Target/ethernetif.c ****   uint32_t payloadoffset = 0;
 679              		.loc 1 335 12
 680 001e 0023     		movs	r3, #0
 681 0020 BB60     		str	r3, [r7, #8]
 336:LWIP/Target/ethernetif.c ****   DmaTxDesc = heth.TxDesc;
 682              		.loc 1 336 13
 683 0022 454B     		ldr	r3, .L28
 684 0024 DB6A     		ldr	r3, [r3, #44]
 685 0026 BB61     		str	r3, [r7, #24]
 337:LWIP/Target/ethernetif.c ****   bufferoffset = 0;
 686              		.loc 1 337 16
 687 0028 0023     		movs	r3, #0
 688 002a 3B61     		str	r3, [r7, #16]
 338:LWIP/Target/ethernetif.c **** 
 339:LWIP/Target/ethernetif.c ****   /* copy frame from pbufs to driver buffers */
 340:LWIP/Target/ethernetif.c ****   for(q = p; q != NULL; q = q->next)
 689              		.loc 1 340 9
 690 002c 3B68     		ldr	r3, [r7]
 691 002e 3B62     		str	r3, [r7, #32]
 692              		.loc 1 340 3
 693 0030 5AE0     		b	.L19
 694              	.L25:
 341:LWIP/Target/ethernetif.c ****     {
 342:LWIP/Target/ethernetif.c ****       /* Is this buffer available? If not, goto error */
ARM GAS  /tmp/ccaGaNfs.s 			page 19


 343:LWIP/Target/ethernetif.c ****       if((DmaTxDesc->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
 695              		.loc 1 343 20
 696 0032 BB69     		ldr	r3, [r7, #24]
 697 0034 1B68     		ldr	r3, [r3]
 698              		.loc 1 343 9
 699 0036 002B     		cmp	r3, #0
 700 0038 03DA     		bge	.L20
 344:LWIP/Target/ethernetif.c ****       {
 345:LWIP/Target/ethernetif.c ****         errval = ERR_USE;
 701              		.loc 1 345 16
 702 003a F823     		movs	r3, #248
 703 003c 87F82730 		strb	r3, [r7, #39]
 346:LWIP/Target/ethernetif.c ****         goto error;
 704              		.loc 1 346 9
 705 0040 5CE0     		b	.L21
 706              	.L20:
 347:LWIP/Target/ethernetif.c ****       }
 348:LWIP/Target/ethernetif.c **** 
 349:LWIP/Target/ethernetif.c ****       /* Get bytes in current lwIP buffer */
 350:LWIP/Target/ethernetif.c ****       byteslefttocopy = q->len;
 707              		.loc 1 350 26
 708 0042 3B6A     		ldr	r3, [r7, #32]
 709 0044 5B89     		ldrh	r3, [r3, #10]
 710              		.loc 1 350 23
 711 0046 FB60     		str	r3, [r7, #12]
 351:LWIP/Target/ethernetif.c ****       payloadoffset = 0;
 712              		.loc 1 351 21
 713 0048 0023     		movs	r3, #0
 714 004a BB60     		str	r3, [r7, #8]
 352:LWIP/Target/ethernetif.c **** 
 353:LWIP/Target/ethernetif.c ****       /* Check if the length of data to copy is bigger than Tx buffer size*/
 354:LWIP/Target/ethernetif.c ****       while( (byteslefttocopy + bufferoffset) > ETH_TX_BUF_SIZE )
 715              		.loc 1 354 12
 716 004c 2FE0     		b	.L22
 717              	.L24:
 355:LWIP/Target/ethernetif.c ****       {
 356:LWIP/Target/ethernetif.c ****         /* Copy data to Tx buffer*/
 357:LWIP/Target/ethernetif.c ****         memcpy( (uint8_t*)((uint8_t*)buffer + bufferoffset), (uint8_t*)((uint8_t*)q->payload + payl
 718              		.loc 1 357 17
 719 004e FA69     		ldr	r2, [r7, #28]
 720 0050 3B69     		ldr	r3, [r7, #16]
 721 0052 D018     		adds	r0, r2, r3
 722              		.loc 1 357 84
 723 0054 3B6A     		ldr	r3, [r7, #32]
 724 0056 5A68     		ldr	r2, [r3, #4]
 725              		.loc 1 357 9
 726 0058 BB68     		ldr	r3, [r7, #8]
 727 005a D118     		adds	r1, r2, r3
 728              		.loc 1 357 129
 729 005c 3B69     		ldr	r3, [r7, #16]
 730 005e C3F5BE63 		rsb	r3, r3, #1520
 731 0062 0433     		adds	r3, r3, #4
 732              		.loc 1 357 9
 733 0064 1A46     		mov	r2, r3
 734 0066 FFF7FEFF 		bl	memcpy
 358:LWIP/Target/ethernetif.c **** 
 359:LWIP/Target/ethernetif.c ****         /* Point to next descriptor */
ARM GAS  /tmp/ccaGaNfs.s 			page 20


 360:LWIP/Target/ethernetif.c ****         DmaTxDesc = (ETH_DMADescTypeDef *)(DmaTxDesc->Buffer2NextDescAddr);
 735              		.loc 1 360 53
 736 006a BB69     		ldr	r3, [r7, #24]
 737 006c DB68     		ldr	r3, [r3, #12]
 738              		.loc 1 360 19
 739 006e BB61     		str	r3, [r7, #24]
 361:LWIP/Target/ethernetif.c **** 
 362:LWIP/Target/ethernetif.c ****         /* Check if the buffer is available */
 363:LWIP/Target/ethernetif.c ****         if((DmaTxDesc->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
 740              		.loc 1 363 22
 741 0070 BB69     		ldr	r3, [r7, #24]
 742 0072 1B68     		ldr	r3, [r3]
 743              		.loc 1 363 11
 744 0074 002B     		cmp	r3, #0
 745 0076 03DA     		bge	.L23
 364:LWIP/Target/ethernetif.c ****         {
 365:LWIP/Target/ethernetif.c ****           errval = ERR_USE;
 746              		.loc 1 365 18
 747 0078 F823     		movs	r3, #248
 748 007a 87F82730 		strb	r3, [r7, #39]
 366:LWIP/Target/ethernetif.c ****           goto error;
 749              		.loc 1 366 11
 750 007e 3DE0     		b	.L21
 751              	.L23:
 367:LWIP/Target/ethernetif.c ****         }
 368:LWIP/Target/ethernetif.c **** 
 369:LWIP/Target/ethernetif.c ****         buffer = (uint8_t *)(DmaTxDesc->Buffer1Addr);
 752              		.loc 1 369 39
 753 0080 BB69     		ldr	r3, [r7, #24]
 754 0082 9B68     		ldr	r3, [r3, #8]
 755              		.loc 1 369 16
 756 0084 FB61     		str	r3, [r7, #28]
 370:LWIP/Target/ethernetif.c **** 
 371:LWIP/Target/ethernetif.c ****         byteslefttocopy = byteslefttocopy - (ETH_TX_BUF_SIZE - bufferoffset);
 757              		.loc 1 371 43
 758 0086 3A69     		ldr	r2, [r7, #16]
 759 0088 FB68     		ldr	r3, [r7, #12]
 760 008a 1344     		add	r3, r3, r2
 761              		.loc 1 371 25
 762 008c A3F2F453 		subw	r3, r3, #1524
 763 0090 FB60     		str	r3, [r7, #12]
 372:LWIP/Target/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_TX_BUF_SIZE - bufferoffset);
 764              		.loc 1 372 39
 765 0092 BA68     		ldr	r2, [r7, #8]
 766 0094 3B69     		ldr	r3, [r7, #16]
 767 0096 D31A     		subs	r3, r2, r3
 768              		.loc 1 372 23
 769 0098 03F2F453 		addw	r3, r3, #1524
 770 009c BB60     		str	r3, [r7, #8]
 373:LWIP/Target/ethernetif.c ****         framelength = framelength + (ETH_TX_BUF_SIZE - bufferoffset);
 771              		.loc 1 373 35
 772 009e 7A69     		ldr	r2, [r7, #20]
 773 00a0 3B69     		ldr	r3, [r7, #16]
 774 00a2 D31A     		subs	r3, r2, r3
 775              		.loc 1 373 21
 776 00a4 03F2F453 		addw	r3, r3, #1524
 777 00a8 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccaGaNfs.s 			page 21


 374:LWIP/Target/ethernetif.c ****         bufferoffset = 0;
 778              		.loc 1 374 22
 779 00aa 0023     		movs	r3, #0
 780 00ac 3B61     		str	r3, [r7, #16]
 781              	.L22:
 354:LWIP/Target/ethernetif.c ****       {
 782              		.loc 1 354 31
 783 00ae FA68     		ldr	r2, [r7, #12]
 784 00b0 3B69     		ldr	r3, [r7, #16]
 785 00b2 1344     		add	r3, r3, r2
 354:LWIP/Target/ethernetif.c ****       {
 786              		.loc 1 354 12
 787 00b4 40F2F452 		movw	r2, #1524
 788 00b8 9342     		cmp	r3, r2
 789 00ba C8D8     		bhi	.L24
 375:LWIP/Target/ethernetif.c ****       }
 376:LWIP/Target/ethernetif.c **** 
 377:LWIP/Target/ethernetif.c ****       /* Copy the remaining bytes */
 378:LWIP/Target/ethernetif.c ****       memcpy( (uint8_t*)((uint8_t*)buffer + bufferoffset), (uint8_t*)((uint8_t*)q->payload + payloa
 790              		.loc 1 378 15 discriminator 2
 791 00bc FA69     		ldr	r2, [r7, #28]
 792 00be 3B69     		ldr	r3, [r7, #16]
 793 00c0 D018     		adds	r0, r2, r3
 794              		.loc 1 378 82 discriminator 2
 795 00c2 3B6A     		ldr	r3, [r7, #32]
 796 00c4 5A68     		ldr	r2, [r3, #4]
 797              		.loc 1 378 7 discriminator 2
 798 00c6 BB68     		ldr	r3, [r7, #8]
 799 00c8 1344     		add	r3, r3, r2
 800 00ca FA68     		ldr	r2, [r7, #12]
 801 00cc 1946     		mov	r1, r3
 802 00ce FFF7FEFF 		bl	memcpy
 379:LWIP/Target/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 803              		.loc 1 379 20 discriminator 2
 804 00d2 3A69     		ldr	r2, [r7, #16]
 805 00d4 FB68     		ldr	r3, [r7, #12]
 806 00d6 1344     		add	r3, r3, r2
 807 00d8 3B61     		str	r3, [r7, #16]
 380:LWIP/Target/ethernetif.c ****       framelength = framelength + byteslefttocopy;
 808              		.loc 1 380 19 discriminator 2
 809 00da 7A69     		ldr	r2, [r7, #20]
 810 00dc FB68     		ldr	r3, [r7, #12]
 811 00de 1344     		add	r3, r3, r2
 812 00e0 7B61     		str	r3, [r7, #20]
 340:LWIP/Target/ethernetif.c ****     {
 813              		.loc 1 340 27 discriminator 2
 814 00e2 3B6A     		ldr	r3, [r7, #32]
 815 00e4 1B68     		ldr	r3, [r3]
 816 00e6 3B62     		str	r3, [r7, #32]
 817              	.L19:
 340:LWIP/Target/ethernetif.c ****     {
 818              		.loc 1 340 3 discriminator 1
 819 00e8 3B6A     		ldr	r3, [r7, #32]
 820 00ea 002B     		cmp	r3, #0
 821 00ec A1D1     		bne	.L25
 381:LWIP/Target/ethernetif.c ****     }
 382:LWIP/Target/ethernetif.c **** 
ARM GAS  /tmp/ccaGaNfs.s 			page 22


 383:LWIP/Target/ethernetif.c ****   /* Prepare transmit descriptors to give to DMA */
 384:LWIP/Target/ethernetif.c ****   HAL_ETH_TransmitFrame(&heth, framelength);
 822              		.loc 1 384 3
 823 00ee 7969     		ldr	r1, [r7, #20]
 824 00f0 1148     		ldr	r0, .L28
 825 00f2 FFF7FEFF 		bl	HAL_ETH_TransmitFrame
 385:LWIP/Target/ethernetif.c **** 
 386:LWIP/Target/ethernetif.c ****   errval = ERR_OK;
 826              		.loc 1 386 10
 827 00f6 0023     		movs	r3, #0
 828 00f8 87F82730 		strb	r3, [r7, #39]
 829              	.L21:
 387:LWIP/Target/ethernetif.c **** 
 388:LWIP/Target/ethernetif.c **** error:
 389:LWIP/Target/ethernetif.c **** 
 390:LWIP/Target/ethernetif.c ****   /* When Transmit Underflow flag is set, clear it and issue a Transmit Poll Demand to resume trans
 391:LWIP/Target/ethernetif.c ****   if ((heth.Instance->DMASR & ETH_DMASR_TUS) != (uint32_t)RESET)
 830              		.loc 1 391 12
 831 00fc 0E4B     		ldr	r3, .L28
 832 00fe 1B68     		ldr	r3, [r3]
 833              		.loc 1 391 21
 834 0100 03F58053 		add	r3, r3, #4096
 835 0104 1433     		adds	r3, r3, #20
 836 0106 1B68     		ldr	r3, [r3]
 837              		.loc 1 391 29
 838 0108 03F02003 		and	r3, r3, #32
 839              		.loc 1 391 6
 840 010c 002B     		cmp	r3, #0
 841 010e 0DD0     		beq	.L26
 392:LWIP/Target/ethernetif.c ****   {
 393:LWIP/Target/ethernetif.c ****     /* Clear TUS ETHERNET DMA flag */
 394:LWIP/Target/ethernetif.c ****     heth.Instance->DMASR = ETH_DMASR_TUS;
 842              		.loc 1 394 9
 843 0110 094B     		ldr	r3, .L28
 844 0112 1B68     		ldr	r3, [r3]
 845              		.loc 1 394 26
 846 0114 03F58053 		add	r3, r3, #4096
 847 0118 1433     		adds	r3, r3, #20
 848 011a 2022     		movs	r2, #32
 849 011c 1A60     		str	r2, [r3]
 395:LWIP/Target/ethernetif.c **** 
 396:LWIP/Target/ethernetif.c ****     /* Resume DMA transmission*/
 397:LWIP/Target/ethernetif.c ****     heth.Instance->DMATPDR = 0;
 850              		.loc 1 397 9
 851 011e 064B     		ldr	r3, .L28
 852 0120 1B68     		ldr	r3, [r3]
 853              		.loc 1 397 28
 854 0122 03F58053 		add	r3, r3, #4096
 855 0126 0433     		adds	r3, r3, #4
 856 0128 0022     		movs	r2, #0
 857 012a 1A60     		str	r2, [r3]
 858              	.L26:
 398:LWIP/Target/ethernetif.c ****   }
 399:LWIP/Target/ethernetif.c ****   return errval;
 859              		.loc 1 399 10
 860 012c 97F92730 		ldrsb	r3, [r7, #39]
 400:LWIP/Target/ethernetif.c **** }
ARM GAS  /tmp/ccaGaNfs.s 			page 23


 861              		.loc 1 400 1
 862 0130 1846     		mov	r0, r3
 863 0132 2837     		adds	r7, r7, #40
 864              	.LCFI23:
 865              		.cfi_def_cfa_offset 8
 866 0134 BD46     		mov	sp, r7
 867              	.LCFI24:
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 0136 80BD     		pop	{r7, pc}
 871              	.L29:
 872              		.align	2
 873              	.L28:
 874 0138 00000000 		.word	heth
 875              		.cfi_endproc
 876              	.LFE141:
 878              		.section	.text.low_level_input,"ax",%progbits
 879              		.align	1
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv4-sp-d16
 885              	low_level_input:
 886              	.LFB142:
 401:LWIP/Target/ethernetif.c **** 
 402:LWIP/Target/ethernetif.c **** /**
 403:LWIP/Target/ethernetif.c ****  * Should allocate a pbuf and transfer the bytes of the incoming
 404:LWIP/Target/ethernetif.c ****  * packet from the interface into the pbuf.
 405:LWIP/Target/ethernetif.c ****  *
 406:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 407:LWIP/Target/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 408:LWIP/Target/ethernetif.c ****  *         NULL on memory error
 409:LWIP/Target/ethernetif.c ****    */
 410:LWIP/Target/ethernetif.c **** static struct pbuf * low_level_input(struct netif *netif)
 411:LWIP/Target/ethernetif.c **** {
 887              		.loc 1 411 1
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 48
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0000 80B5     		push	{r7, lr}
 892              	.LCFI25:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 8CB0     		sub	sp, sp, #48
 897              	.LCFI26:
 898              		.cfi_def_cfa_offset 56
 899 0004 00AF     		add	r7, sp, #0
 900              	.LCFI27:
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 412:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 903              		.loc 1 412 16
 904 0008 0023     		movs	r3, #0
 905 000a FB62     		str	r3, [r7, #44]
 413:LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 906              		.loc 1 413 16
ARM GAS  /tmp/ccaGaNfs.s 			page 24


 907 000c 0023     		movs	r3, #0
 908 000e BB62     		str	r3, [r7, #40]
 414:LWIP/Target/ethernetif.c ****   uint16_t len = 0;
 909              		.loc 1 414 12
 910 0010 0023     		movs	r3, #0
 911 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 415:LWIP/Target/ethernetif.c ****   uint8_t *buffer;
 416:LWIP/Target/ethernetif.c ****   __IO ETH_DMADescTypeDef *dmarxdesc;
 417:LWIP/Target/ethernetif.c ****   uint32_t bufferoffset = 0;
 912              		.loc 1 417 12
 913 0014 0023     		movs	r3, #0
 914 0016 FB61     		str	r3, [r7, #28]
 418:LWIP/Target/ethernetif.c ****   uint32_t payloadoffset = 0;
 915              		.loc 1 418 12
 916 0018 0023     		movs	r3, #0
 917 001a BB61     		str	r3, [r7, #24]
 419:LWIP/Target/ethernetif.c ****   uint32_t byteslefttocopy = 0;
 918              		.loc 1 419 12
 919 001c 0023     		movs	r3, #0
 920 001e 7B61     		str	r3, [r7, #20]
 420:LWIP/Target/ethernetif.c ****   uint32_t i=0;
 921              		.loc 1 420 12
 922 0020 0023     		movs	r3, #0
 923 0022 3B61     		str	r3, [r7, #16]
 421:LWIP/Target/ethernetif.c **** 
 422:LWIP/Target/ethernetif.c ****   /* get received frame */
 423:LWIP/Target/ethernetif.c ****   if (HAL_ETH_GetReceivedFrame_IT(&heth) != HAL_OK)
 924              		.loc 1 423 7
 925 0024 4F48     		ldr	r0, .L42
 926 0026 FFF7FEFF 		bl	HAL_ETH_GetReceivedFrame_IT
 927 002a 0346     		mov	r3, r0
 928              		.loc 1 423 6
 929 002c 002B     		cmp	r3, #0
 930 002e 01D0     		beq	.L31
 424:LWIP/Target/ethernetif.c **** 
 425:LWIP/Target/ethernetif.c ****     return NULL;
 931              		.loc 1 425 12
 932 0030 0023     		movs	r3, #0
 933 0032 92E0     		b	.L32
 934              	.L31:
 426:LWIP/Target/ethernetif.c **** 
 427:LWIP/Target/ethernetif.c ****   /* Obtain the size of the packet and put it into the "len" variable. */
 428:LWIP/Target/ethernetif.c ****   len = heth.RxFrameInfos.length;
 935              		.loc 1 428 26
 936 0034 4B4B     		ldr	r3, .L42
 937 0036 DB6B     		ldr	r3, [r3, #60]
 938              		.loc 1 428 7
 939 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 429:LWIP/Target/ethernetif.c ****   buffer = (uint8_t *)heth.RxFrameInfos.buffer;
 940              		.loc 1 429 40
 941 003a 4A4B     		ldr	r3, .L42
 942 003c 1B6C     		ldr	r3, [r3, #64]
 943              		.loc 1 429 10
 944 003e 7B62     		str	r3, [r7, #36]
 430:LWIP/Target/ethernetif.c **** 
 431:LWIP/Target/ethernetif.c ****   if (len > 0)
 945              		.loc 1 431 6
ARM GAS  /tmp/ccaGaNfs.s 			page 25


 946 0040 FB89     		ldrh	r3, [r7, #14]
 947 0042 002B     		cmp	r3, #0
 948 0044 07D0     		beq	.L33
 432:LWIP/Target/ethernetif.c ****   {
 433:LWIP/Target/ethernetif.c ****     /* We allocate a pbuf chain of pbufs from the Lwip buffer pool */
 434:LWIP/Target/ethernetif.c ****     p = pbuf_alloc(PBUF_RAW, len, PBUF_POOL);
 949              		.loc 1 434 9
 950 0046 FB89     		ldrh	r3, [r7, #14]
 951 0048 4FF4C172 		mov	r2, #386
 952 004c 1946     		mov	r1, r3
 953 004e 0020     		movs	r0, #0
 954 0050 FFF7FEFF 		bl	pbuf_alloc
 955 0054 F862     		str	r0, [r7, #44]
 956              	.L33:
 435:LWIP/Target/ethernetif.c ****   }
 436:LWIP/Target/ethernetif.c **** 
 437:LWIP/Target/ethernetif.c ****   if (p != NULL)
 957              		.loc 1 437 6
 958 0056 FB6A     		ldr	r3, [r7, #44]
 959 0058 002B     		cmp	r3, #0
 960 005a 4BD0     		beq	.L34
 438:LWIP/Target/ethernetif.c ****   {
 439:LWIP/Target/ethernetif.c ****     dmarxdesc = heth.RxFrameInfos.FSRxDesc;
 961              		.loc 1 439 15
 962 005c 414B     		ldr	r3, .L42
 963 005e 1B6B     		ldr	r3, [r3, #48]
 964 0060 3B62     		str	r3, [r7, #32]
 440:LWIP/Target/ethernetif.c ****     bufferoffset = 0;
 965              		.loc 1 440 18
 966 0062 0023     		movs	r3, #0
 967 0064 FB61     		str	r3, [r7, #28]
 441:LWIP/Target/ethernetif.c ****     for(q = p; q != NULL; q = q->next)
 968              		.loc 1 441 11
 969 0066 FB6A     		ldr	r3, [r7, #44]
 970 0068 BB62     		str	r3, [r7, #40]
 971              		.loc 1 441 5
 972 006a 40E0     		b	.L35
 973              	.L38:
 442:LWIP/Target/ethernetif.c ****     {
 443:LWIP/Target/ethernetif.c ****       byteslefttocopy = q->len;
 974              		.loc 1 443 26
 975 006c BB6A     		ldr	r3, [r7, #40]
 976 006e 5B89     		ldrh	r3, [r3, #10]
 977              		.loc 1 443 23
 978 0070 7B61     		str	r3, [r7, #20]
 444:LWIP/Target/ethernetif.c ****       payloadoffset = 0;
 979              		.loc 1 444 21
 980 0072 0023     		movs	r3, #0
 981 0074 BB61     		str	r3, [r7, #24]
 445:LWIP/Target/ethernetif.c **** 
 446:LWIP/Target/ethernetif.c ****       /* Check if the length of bytes to copy in current pbuf is bigger than Rx buffer size*/
 447:LWIP/Target/ethernetif.c ****       while( (byteslefttocopy + bufferoffset) > ETH_RX_BUF_SIZE )
 982              		.loc 1 447 12
 983 0076 21E0     		b	.L36
 984              	.L37:
 448:LWIP/Target/ethernetif.c ****       {
 449:LWIP/Target/ethernetif.c ****         /* Copy data to pbuf */
ARM GAS  /tmp/ccaGaNfs.s 			page 26


 450:LWIP/Target/ethernetif.c ****         memcpy( (uint8_t*)((uint8_t*)q->payload + payloadoffset), (uint8_t*)((uint8_t*)buffer + buf
 985              		.loc 1 450 39
 986 0078 BB6A     		ldr	r3, [r7, #40]
 987 007a 5A68     		ldr	r2, [r3, #4]
 988              		.loc 1 450 9
 989 007c BB69     		ldr	r3, [r7, #24]
 990 007e D018     		adds	r0, r2, r3
 991              		.loc 1 450 67
 992 0080 7A6A     		ldr	r2, [r7, #36]
 993 0082 FB69     		ldr	r3, [r7, #28]
 994 0084 D118     		adds	r1, r2, r3
 995              		.loc 1 450 129
 996 0086 FB69     		ldr	r3, [r7, #28]
 997 0088 C3F5BE63 		rsb	r3, r3, #1520
 998 008c 0433     		adds	r3, r3, #4
 999              		.loc 1 450 9
 1000 008e 1A46     		mov	r2, r3
 1001 0090 FFF7FEFF 		bl	memcpy
 451:LWIP/Target/ethernetif.c **** 
 452:LWIP/Target/ethernetif.c ****         /* Point to next descriptor */
 453:LWIP/Target/ethernetif.c ****         dmarxdesc = (ETH_DMADescTypeDef *)(dmarxdesc->Buffer2NextDescAddr);
 1002              		.loc 1 453 53
 1003 0094 3B6A     		ldr	r3, [r7, #32]
 1004 0096 DB68     		ldr	r3, [r3, #12]
 1005              		.loc 1 453 19
 1006 0098 3B62     		str	r3, [r7, #32]
 454:LWIP/Target/ethernetif.c ****         buffer = (uint8_t *)(dmarxdesc->Buffer1Addr);
 1007              		.loc 1 454 39
 1008 009a 3B6A     		ldr	r3, [r7, #32]
 1009 009c 9B68     		ldr	r3, [r3, #8]
 1010              		.loc 1 454 16
 1011 009e 7B62     		str	r3, [r7, #36]
 455:LWIP/Target/ethernetif.c **** 
 456:LWIP/Target/ethernetif.c ****         byteslefttocopy = byteslefttocopy - (ETH_RX_BUF_SIZE - bufferoffset);
 1012              		.loc 1 456 43
 1013 00a0 FA69     		ldr	r2, [r7, #28]
 1014 00a2 7B69     		ldr	r3, [r7, #20]
 1015 00a4 1344     		add	r3, r3, r2
 1016              		.loc 1 456 25
 1017 00a6 A3F2F453 		subw	r3, r3, #1524
 1018 00aa 7B61     		str	r3, [r7, #20]
 457:LWIP/Target/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_RX_BUF_SIZE - bufferoffset);
 1019              		.loc 1 457 39
 1020 00ac BA69     		ldr	r2, [r7, #24]
 1021 00ae FB69     		ldr	r3, [r7, #28]
 1022 00b0 D31A     		subs	r3, r2, r3
 1023              		.loc 1 457 23
 1024 00b2 03F2F453 		addw	r3, r3, #1524
 1025 00b6 BB61     		str	r3, [r7, #24]
 458:LWIP/Target/ethernetif.c ****         bufferoffset = 0;
 1026              		.loc 1 458 22
 1027 00b8 0023     		movs	r3, #0
 1028 00ba FB61     		str	r3, [r7, #28]
 1029              	.L36:
 447:LWIP/Target/ethernetif.c ****       {
 1030              		.loc 1 447 31
 1031 00bc 7A69     		ldr	r2, [r7, #20]
ARM GAS  /tmp/ccaGaNfs.s 			page 27


 1032 00be FB69     		ldr	r3, [r7, #28]
 1033 00c0 1344     		add	r3, r3, r2
 447:LWIP/Target/ethernetif.c ****       {
 1034              		.loc 1 447 12
 1035 00c2 40F2F452 		movw	r2, #1524
 1036 00c6 9342     		cmp	r3, r2
 1037 00c8 D6D8     		bhi	.L37
 459:LWIP/Target/ethernetif.c ****       }
 460:LWIP/Target/ethernetif.c ****       /* Copy remaining data in pbuf */
 461:LWIP/Target/ethernetif.c ****       memcpy( (uint8_t*)((uint8_t*)q->payload + payloadoffset), (uint8_t*)((uint8_t*)buffer + buffe
 1038              		.loc 1 461 37 discriminator 2
 1039 00ca BB6A     		ldr	r3, [r7, #40]
 1040 00cc 5A68     		ldr	r2, [r3, #4]
 1041              		.loc 1 461 7 discriminator 2
 1042 00ce BB69     		ldr	r3, [r7, #24]
 1043 00d0 D018     		adds	r0, r2, r3
 1044              		.loc 1 461 65 discriminator 2
 1045 00d2 7A6A     		ldr	r2, [r7, #36]
 1046 00d4 FB69     		ldr	r3, [r7, #28]
 1047 00d6 1344     		add	r3, r3, r2
 1048              		.loc 1 461 7 discriminator 2
 1049 00d8 7A69     		ldr	r2, [r7, #20]
 1050 00da 1946     		mov	r1, r3
 1051 00dc FFF7FEFF 		bl	memcpy
 462:LWIP/Target/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 1052              		.loc 1 462 20 discriminator 2
 1053 00e0 FA69     		ldr	r2, [r7, #28]
 1054 00e2 7B69     		ldr	r3, [r7, #20]
 1055 00e4 1344     		add	r3, r3, r2
 1056 00e6 FB61     		str	r3, [r7, #28]
 441:LWIP/Target/ethernetif.c ****     {
 1057              		.loc 1 441 29 discriminator 2
 1058 00e8 BB6A     		ldr	r3, [r7, #40]
 1059 00ea 1B68     		ldr	r3, [r3]
 1060 00ec BB62     		str	r3, [r7, #40]
 1061              	.L35:
 441:LWIP/Target/ethernetif.c ****     {
 1062              		.loc 1 441 5 discriminator 1
 1063 00ee BB6A     		ldr	r3, [r7, #40]
 1064 00f0 002B     		cmp	r3, #0
 1065 00f2 BBD1     		bne	.L38
 1066              	.L34:
 463:LWIP/Target/ethernetif.c ****     }
 464:LWIP/Target/ethernetif.c ****   }
 465:LWIP/Target/ethernetif.c **** 
 466:LWIP/Target/ethernetif.c ****     /* Release descriptors to DMA */
 467:LWIP/Target/ethernetif.c ****     /* Point to first descriptor */
 468:LWIP/Target/ethernetif.c ****     dmarxdesc = heth.RxFrameInfos.FSRxDesc;
 1067              		.loc 1 468 15
 1068 00f4 1B4B     		ldr	r3, .L42
 1069 00f6 1B6B     		ldr	r3, [r3, #48]
 1070 00f8 3B62     		str	r3, [r7, #32]
 469:LWIP/Target/ethernetif.c ****     /* Set Own bit in Rx descriptors: gives the buffers back to DMA */
 470:LWIP/Target/ethernetif.c ****     for (i=0; i< heth.RxFrameInfos.SegCount; i++)
 1071              		.loc 1 470 11
 1072 00fa 0023     		movs	r3, #0
 1073 00fc 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccaGaNfs.s 			page 28


 1074              		.loc 1 470 5
 1075 00fe 0BE0     		b	.L39
 1076              	.L40:
 471:LWIP/Target/ethernetif.c ****     {
 472:LWIP/Target/ethernetif.c ****       dmarxdesc->Status |= ETH_DMARXDESC_OWN;
 1077              		.loc 1 472 25 discriminator 3
 1078 0100 3B6A     		ldr	r3, [r7, #32]
 1079 0102 1B68     		ldr	r3, [r3]
 1080 0104 43F00042 		orr	r2, r3, #-2147483648
 1081 0108 3B6A     		ldr	r3, [r7, #32]
 1082 010a 1A60     		str	r2, [r3]
 473:LWIP/Target/ethernetif.c ****       dmarxdesc = (ETH_DMADescTypeDef *)(dmarxdesc->Buffer2NextDescAddr);
 1083              		.loc 1 473 51 discriminator 3
 1084 010c 3B6A     		ldr	r3, [r7, #32]
 1085 010e DB68     		ldr	r3, [r3, #12]
 1086              		.loc 1 473 17 discriminator 3
 1087 0110 3B62     		str	r3, [r7, #32]
 470:LWIP/Target/ethernetif.c ****     {
 1088              		.loc 1 470 47 discriminator 3
 1089 0112 3B69     		ldr	r3, [r7, #16]
 1090 0114 0133     		adds	r3, r3, #1
 1091 0116 3B61     		str	r3, [r7, #16]
 1092              	.L39:
 470:LWIP/Target/ethernetif.c ****     {
 1093              		.loc 1 470 35 discriminator 1
 1094 0118 124B     		ldr	r3, .L42
 1095 011a 9B6B     		ldr	r3, [r3, #56]
 470:LWIP/Target/ethernetif.c ****     {
 1096              		.loc 1 470 5 discriminator 1
 1097 011c 3A69     		ldr	r2, [r7, #16]
 1098 011e 9A42     		cmp	r2, r3
 1099 0120 EED3     		bcc	.L40
 474:LWIP/Target/ethernetif.c ****     }
 475:LWIP/Target/ethernetif.c **** 
 476:LWIP/Target/ethernetif.c ****     /* Clear Segment_Count */
 477:LWIP/Target/ethernetif.c ****     heth.RxFrameInfos.SegCount =0;
 1100              		.loc 1 477 32
 1101 0122 104B     		ldr	r3, .L42
 1102 0124 0022     		movs	r2, #0
 1103 0126 9A63     		str	r2, [r3, #56]
 478:LWIP/Target/ethernetif.c **** 
 479:LWIP/Target/ethernetif.c ****   /* When Rx Buffer unavailable flag is set: clear it and resume reception */
 480:LWIP/Target/ethernetif.c ****   if ((heth.Instance->DMASR & ETH_DMASR_RBUS) != (uint32_t)RESET)
 1104              		.loc 1 480 12
 1105 0128 0E4B     		ldr	r3, .L42
 1106 012a 1B68     		ldr	r3, [r3]
 1107              		.loc 1 480 21
 1108 012c 03F58053 		add	r3, r3, #4096
 1109 0130 1433     		adds	r3, r3, #20
 1110 0132 1B68     		ldr	r3, [r3]
 1111              		.loc 1 480 29
 1112 0134 03F08003 		and	r3, r3, #128
 1113              		.loc 1 480 6
 1114 0138 002B     		cmp	r3, #0
 1115 013a 0DD0     		beq	.L41
 481:LWIP/Target/ethernetif.c ****   {
 482:LWIP/Target/ethernetif.c ****     /* Clear RBUS ETHERNET DMA flag */
ARM GAS  /tmp/ccaGaNfs.s 			page 29


 483:LWIP/Target/ethernetif.c ****     heth.Instance->DMASR = ETH_DMASR_RBUS;
 1116              		.loc 1 483 9
 1117 013c 094B     		ldr	r3, .L42
 1118 013e 1B68     		ldr	r3, [r3]
 1119              		.loc 1 483 26
 1120 0140 03F58053 		add	r3, r3, #4096
 1121 0144 1433     		adds	r3, r3, #20
 1122 0146 8022     		movs	r2, #128
 1123 0148 1A60     		str	r2, [r3]
 484:LWIP/Target/ethernetif.c ****     /* Resume DMA reception */
 485:LWIP/Target/ethernetif.c ****     heth.Instance->DMARPDR = 0;
 1124              		.loc 1 485 9
 1125 014a 064B     		ldr	r3, .L42
 1126 014c 1B68     		ldr	r3, [r3]
 1127              		.loc 1 485 28
 1128 014e 03F58053 		add	r3, r3, #4096
 1129 0152 0833     		adds	r3, r3, #8
 1130 0154 0022     		movs	r2, #0
 1131 0156 1A60     		str	r2, [r3]
 1132              	.L41:
 486:LWIP/Target/ethernetif.c ****   }
 487:LWIP/Target/ethernetif.c ****   return p;
 1133              		.loc 1 487 10
 1134 0158 FB6A     		ldr	r3, [r7, #44]
 1135              	.L32:
 488:LWIP/Target/ethernetif.c **** }
 1136              		.loc 1 488 1
 1137 015a 1846     		mov	r0, r3
 1138 015c 3037     		adds	r7, r7, #48
 1139              	.LCFI28:
 1140              		.cfi_def_cfa_offset 8
 1141 015e BD46     		mov	sp, r7
 1142              	.LCFI29:
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 0160 80BD     		pop	{r7, pc}
 1146              	.L43:
 1147 0162 00BF     		.align	2
 1148              	.L42:
 1149 0164 00000000 		.word	heth
 1150              		.cfi_endproc
 1151              	.LFE142:
 1153              		.section	.text.ethernetif_input,"ax",%progbits
 1154              		.align	1
 1155              		.global	ethernetif_input
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv4-sp-d16
 1161              	ethernetif_input:
 1162              	.LFB143:
 489:LWIP/Target/ethernetif.c **** 
 490:LWIP/Target/ethernetif.c **** /**
 491:LWIP/Target/ethernetif.c ****  * This function should be called when a packet is ready to be read
 492:LWIP/Target/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 493:LWIP/Target/ethernetif.c ****  * should handle the actual reception of bytes from the network
 494:LWIP/Target/ethernetif.c ****  * interface. Then the type of the received packet is determined and
ARM GAS  /tmp/ccaGaNfs.s 			page 30


 495:LWIP/Target/ethernetif.c ****  * the appropriate input function is called.
 496:LWIP/Target/ethernetif.c ****  *
 497:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 498:LWIP/Target/ethernetif.c ****  */
 499:LWIP/Target/ethernetif.c **** void ethernetif_input(void* argument)
 500:LWIP/Target/ethernetif.c **** {
 1163              		.loc 1 500 1
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 16
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167 0000 80B5     		push	{r7, lr}
 1168              	.LCFI30:
 1169              		.cfi_def_cfa_offset 8
 1170              		.cfi_offset 7, -8
 1171              		.cfi_offset 14, -4
 1172 0002 84B0     		sub	sp, sp, #16
 1173              	.LCFI31:
 1174              		.cfi_def_cfa_offset 24
 1175 0004 00AF     		add	r7, sp, #0
 1176              	.LCFI32:
 1177              		.cfi_def_cfa_register 7
 1178 0006 7860     		str	r0, [r7, #4]
 501:LWIP/Target/ethernetif.c ****   struct pbuf *p;
 502:LWIP/Target/ethernetif.c ****   struct netif *netif = (struct netif *) argument;
 1179              		.loc 1 502 17
 1180 0008 7B68     		ldr	r3, [r7, #4]
 1181 000a FB60     		str	r3, [r7, #12]
 1182              	.L48:
 503:LWIP/Target/ethernetif.c **** 
 504:LWIP/Target/ethernetif.c ****   for( ;; )
 505:LWIP/Target/ethernetif.c ****   {
 506:LWIP/Target/ethernetif.c ****     if (osSemaphoreAcquire(s_xSemaphore, TIME_WAITING_FOR_INPUT) == osOK)
 1183              		.loc 1 506 9
 1184 000c 124B     		ldr	r3, .L49
 1185 000e 1B68     		ldr	r3, [r3]
 1186 0010 4FF0FF31 		mov	r1, #-1
 1187 0014 1846     		mov	r0, r3
 1188 0016 FFF7FEFF 		bl	osSemaphoreAcquire
 1189 001a 0346     		mov	r3, r0
 1190              		.loc 1 506 8
 1191 001c 002B     		cmp	r3, #0
 1192 001e F5D1     		bne	.L48
 1193              	.L47:
 507:LWIP/Target/ethernetif.c ****     {
 508:LWIP/Target/ethernetif.c ****       do
 509:LWIP/Target/ethernetif.c ****       {
 510:LWIP/Target/ethernetif.c ****         LOCK_TCPIP_CORE();
 1194              		.loc 1 510 9
 1195 0020 0E48     		ldr	r0, .L49+4
 1196 0022 FFF7FEFF 		bl	sys_mutex_lock
 511:LWIP/Target/ethernetif.c ****         p = low_level_input( netif );
 1197              		.loc 1 511 13
 1198 0026 F868     		ldr	r0, [r7, #12]
 1199 0028 FFF7FEFF 		bl	low_level_input
 1200 002c B860     		str	r0, [r7, #8]
 512:LWIP/Target/ethernetif.c ****         if   (p != NULL)
 1201              		.loc 1 512 14
ARM GAS  /tmp/ccaGaNfs.s 			page 31


 1202 002e BB68     		ldr	r3, [r7, #8]
 1203 0030 002B     		cmp	r3, #0
 1204 0032 0AD0     		beq	.L46
 513:LWIP/Target/ethernetif.c ****         {
 514:LWIP/Target/ethernetif.c ****           if (netif->input( p, netif) != ERR_OK )
 1205              		.loc 1 514 20
 1206 0034 FB68     		ldr	r3, [r7, #12]
 1207 0036 1B69     		ldr	r3, [r3, #16]
 1208              		.loc 1 514 15
 1209 0038 F968     		ldr	r1, [r7, #12]
 1210 003a B868     		ldr	r0, [r7, #8]
 1211 003c 9847     		blx	r3
 1212              	.LVL0:
 1213 003e 0346     		mov	r3, r0
 1214              		.loc 1 514 14
 1215 0040 002B     		cmp	r3, #0
 1216 0042 02D0     		beq	.L46
 515:LWIP/Target/ethernetif.c ****           {
 516:LWIP/Target/ethernetif.c ****             pbuf_free(p);
 1217              		.loc 1 516 13
 1218 0044 B868     		ldr	r0, [r7, #8]
 1219 0046 FFF7FEFF 		bl	pbuf_free
 1220              	.L46:
 517:LWIP/Target/ethernetif.c ****           }
 518:LWIP/Target/ethernetif.c ****         }
 519:LWIP/Target/ethernetif.c ****         UNLOCK_TCPIP_CORE();
 1221              		.loc 1 519 9
 1222 004a 0448     		ldr	r0, .L49+4
 1223 004c FFF7FEFF 		bl	sys_mutex_unlock
 520:LWIP/Target/ethernetif.c ****       } while(p!=NULL);
 1224              		.loc 1 520 7
 1225 0050 BB68     		ldr	r3, [r7, #8]
 1226 0052 002B     		cmp	r3, #0
 1227 0054 E4D1     		bne	.L47
 506:LWIP/Target/ethernetif.c ****     {
 1228              		.loc 1 506 8
 1229 0056 D9E7     		b	.L48
 1230              	.L50:
 1231              		.align	2
 1232              	.L49:
 1233 0058 00000000 		.word	s_xSemaphore
 1234 005c 00000000 		.word	lock_tcpip_core
 1235              		.cfi_endproc
 1236              	.LFE143:
 1238              		.section	.rodata
 1239 0006 0000     		.align	2
 1240              	.LC1:
 1241 0008 4C574950 		.ascii	"LWIP/Target/ethernetif.c\000"
 1241      2F546172 
 1241      6765742F 
 1241      65746865 
 1241      726E6574 
 1242 0021 000000   		.align	2
 1243              	.LC2:
 1244 0024 6E657469 		.ascii	"netif != NULL\000"
 1244      6620213D 
 1244      204E554C 
ARM GAS  /tmp/ccaGaNfs.s 			page 32


 1244      4C00
 1245 0032 0000     		.align	2
 1246              	.LC3:
 1247 0034 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1247      7274696F 
 1247      6E202225 
 1247      73222066 
 1247      61696C65 
 1248              		.section	.text.ethernetif_init,"ax",%progbits
 1249              		.align	1
 1250              		.global	ethernetif_init
 1251              		.syntax unified
 1252              		.thumb
 1253              		.thumb_func
 1254              		.fpu fpv4-sp-d16
 1256              	ethernetif_init:
 1257              	.LFB144:
 521:LWIP/Target/ethernetif.c ****     }
 522:LWIP/Target/ethernetif.c ****   }
 523:LWIP/Target/ethernetif.c **** }
 524:LWIP/Target/ethernetif.c **** 
 525:LWIP/Target/ethernetif.c **** #if !LWIP_ARP
 526:LWIP/Target/ethernetif.c **** /**
 527:LWIP/Target/ethernetif.c ****  * This function has to be completed by user in case of ARP OFF.
 528:LWIP/Target/ethernetif.c ****  *
 529:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 530:LWIP/Target/ethernetif.c ****  * @return ERR_OK if ...
 531:LWIP/Target/ethernetif.c ****  */
 532:LWIP/Target/ethernetif.c **** static err_t low_level_output_arp_off(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr
 533:LWIP/Target/ethernetif.c **** {
 534:LWIP/Target/ethernetif.c ****   err_t errval;
 535:LWIP/Target/ethernetif.c ****   errval = ERR_OK;
 536:LWIP/Target/ethernetif.c **** 
 537:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 5 */
 538:LWIP/Target/ethernetif.c **** 
 539:LWIP/Target/ethernetif.c **** /* USER CODE END 5 */
 540:LWIP/Target/ethernetif.c **** 
 541:LWIP/Target/ethernetif.c ****   return errval;
 542:LWIP/Target/ethernetif.c **** 
 543:LWIP/Target/ethernetif.c **** }
 544:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 545:LWIP/Target/ethernetif.c **** 
 546:LWIP/Target/ethernetif.c **** /**
 547:LWIP/Target/ethernetif.c ****  * Should be called at the beginning of the program to set up the
 548:LWIP/Target/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 549:LWIP/Target/ethernetif.c ****  * actual setup of the hardware.
 550:LWIP/Target/ethernetif.c ****  *
 551:LWIP/Target/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 552:LWIP/Target/ethernetif.c ****  *
 553:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 554:LWIP/Target/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 555:LWIP/Target/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 556:LWIP/Target/ethernetif.c ****  *         any other err_t on error
 557:LWIP/Target/ethernetif.c ****  */
 558:LWIP/Target/ethernetif.c **** err_t ethernetif_init(struct netif *netif)
 559:LWIP/Target/ethernetif.c **** {
 1258              		.loc 1 559 1
ARM GAS  /tmp/ccaGaNfs.s 			page 33


 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 80B5     		push	{r7, lr}
 1263              	.LCFI33:
 1264              		.cfi_def_cfa_offset 8
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 0002 82B0     		sub	sp, sp, #8
 1268              	.LCFI34:
 1269              		.cfi_def_cfa_offset 16
 1270 0004 00AF     		add	r7, sp, #0
 1271              	.LCFI35:
 1272              		.cfi_def_cfa_register 7
 1273 0006 7860     		str	r0, [r7, #4]
 560:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1274              		.loc 1 560 3
 1275 0008 7B68     		ldr	r3, [r7, #4]
 1276 000a 002B     		cmp	r3, #0
 1277 000c 06D1     		bne	.L52
 1278              		.loc 1 560 3 is_stmt 0 discriminator 1
 1279 000e 0E4B     		ldr	r3, .L54
 1280 0010 4FF40C72 		mov	r2, #560
 1281 0014 0D49     		ldr	r1, .L54+4
 1282 0016 0E48     		ldr	r0, .L54+8
 1283 0018 FFF7FEFF 		bl	printf
 1284              	.L52:
 561:LWIP/Target/ethernetif.c **** 
 562:LWIP/Target/ethernetif.c **** #if LWIP_NETIF_HOSTNAME
 563:LWIP/Target/ethernetif.c ****   /* Initialize interface hostname */
 564:LWIP/Target/ethernetif.c ****   netif->hostname = "lwip";
 565:LWIP/Target/ethernetif.c **** #endif /* LWIP_NETIF_HOSTNAME */
 566:LWIP/Target/ethernetif.c **** 
 567:LWIP/Target/ethernetif.c ****   netif->name[0] = IFNAME0;
 1285              		.loc 1 567 18 is_stmt 1
 1286 001c 7B68     		ldr	r3, [r7, #4]
 1287 001e 7322     		movs	r2, #115
 1288 0020 83F83220 		strb	r2, [r3, #50]
 568:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1289              		.loc 1 568 18
 1290 0024 7B68     		ldr	r3, [r7, #4]
 1291 0026 7422     		movs	r2, #116
 1292 0028 83F83320 		strb	r2, [r3, #51]
 569:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 570:LWIP/Target/ethernetif.c ****    * You can instead declare your own function an call etharp_output()
 571:LWIP/Target/ethernetif.c ****    * from it if you have to do some checks before sending (e.g. if link
 572:LWIP/Target/ethernetif.c ****    * is available...) */
 573:LWIP/Target/ethernetif.c **** 
 574:LWIP/Target/ethernetif.c **** #if LWIP_IPV4
 575:LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 576:LWIP/Target/ethernetif.c **** #if LWIP_ARP
 577:LWIP/Target/ethernetif.c ****   netif->output = etharp_output;
 1293              		.loc 1 577 17
 1294 002c 7B68     		ldr	r3, [r7, #4]
 1295 002e 094A     		ldr	r2, .L54+12
 1296 0030 5A61     		str	r2, [r3, #20]
 578:LWIP/Target/ethernetif.c **** #else
ARM GAS  /tmp/ccaGaNfs.s 			page 34


 579:LWIP/Target/ethernetif.c ****   /* The user should write ist own code in low_level_output_arp_off function */
 580:LWIP/Target/ethernetif.c ****   netif->output = low_level_output_arp_off;
 581:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 582:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 583:LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV4 */
 584:LWIP/Target/ethernetif.c **** 
 585:LWIP/Target/ethernetif.c **** #if LWIP_IPV6
 586:LWIP/Target/ethernetif.c ****   netif->output_ip6 = ethip6_output;
 587:LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV6 */
 588:LWIP/Target/ethernetif.c **** 
 589:LWIP/Target/ethernetif.c ****   netif->linkoutput = low_level_output;
 1297              		.loc 1 589 21
 1298 0032 7B68     		ldr	r3, [r7, #4]
 1299 0034 084A     		ldr	r2, .L54+16
 1300 0036 9A61     		str	r2, [r3, #24]
 590:LWIP/Target/ethernetif.c **** 
 591:LWIP/Target/ethernetif.c ****   /* initialize the hardware */
 592:LWIP/Target/ethernetif.c ****   low_level_init(netif);
 1301              		.loc 1 592 3
 1302 0038 7868     		ldr	r0, [r7, #4]
 1303 003a FFF7FEFF 		bl	low_level_init
 593:LWIP/Target/ethernetif.c **** 
 594:LWIP/Target/ethernetif.c ****   return ERR_OK;
 1304              		.loc 1 594 10
 1305 003e 0023     		movs	r3, #0
 595:LWIP/Target/ethernetif.c **** }
 1306              		.loc 1 595 1
 1307 0040 1846     		mov	r0, r3
 1308 0042 0837     		adds	r7, r7, #8
 1309              	.LCFI36:
 1310              		.cfi_def_cfa_offset 8
 1311 0044 BD46     		mov	sp, r7
 1312              	.LCFI37:
 1313              		.cfi_def_cfa_register 13
 1314              		@ sp needed
 1315 0046 80BD     		pop	{r7, pc}
 1316              	.L55:
 1317              		.align	2
 1318              	.L54:
 1319 0048 08000000 		.word	.LC1
 1320 004c 24000000 		.word	.LC2
 1321 0050 34000000 		.word	.LC3
 1322 0054 00000000 		.word	etharp_output
 1323 0058 00000000 		.word	low_level_output
 1324              		.cfi_endproc
 1325              	.LFE144:
 1327              		.section	.text.sys_jiffies,"ax",%progbits
 1328              		.align	1
 1329              		.global	sys_jiffies
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1333              		.fpu fpv4-sp-d16
 1335              	sys_jiffies:
 1336              	.LFB145:
 596:LWIP/Target/ethernetif.c **** 
 597:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 6 */
ARM GAS  /tmp/ccaGaNfs.s 			page 35


 598:LWIP/Target/ethernetif.c **** 
 599:LWIP/Target/ethernetif.c **** /**
 600:LWIP/Target/ethernetif.c **** * @brief  Returns the current time in milliseconds
 601:LWIP/Target/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 602:LWIP/Target/ethernetif.c **** * @param  None
 603:LWIP/Target/ethernetif.c **** * @retval Time
 604:LWIP/Target/ethernetif.c **** */
 605:LWIP/Target/ethernetif.c **** u32_t sys_jiffies(void)
 606:LWIP/Target/ethernetif.c **** {
 1337              		.loc 1 606 1
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 1, uses_anonymous_args = 0
 1341 0000 80B5     		push	{r7, lr}
 1342              	.LCFI38:
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 00AF     		add	r7, sp, #0
 1347              	.LCFI39:
 1348              		.cfi_def_cfa_register 7
 607:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 1349              		.loc 1 607 10
 1350 0004 FFF7FEFF 		bl	HAL_GetTick
 1351 0008 0346     		mov	r3, r0
 608:LWIP/Target/ethernetif.c **** }
 1352              		.loc 1 608 1
 1353 000a 1846     		mov	r0, r3
 1354 000c 80BD     		pop	{r7, pc}
 1355              		.cfi_endproc
 1356              	.LFE145:
 1358              		.section	.text.sys_now,"ax",%progbits
 1359              		.align	1
 1360              		.global	sys_now
 1361              		.syntax unified
 1362              		.thumb
 1363              		.thumb_func
 1364              		.fpu fpv4-sp-d16
 1366              	sys_now:
 1367              	.LFB146:
 609:LWIP/Target/ethernetif.c **** 
 610:LWIP/Target/ethernetif.c **** /**
 611:LWIP/Target/ethernetif.c **** * @brief  Returns the current time in milliseconds
 612:LWIP/Target/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 613:LWIP/Target/ethernetif.c **** * @param  None
 614:LWIP/Target/ethernetif.c **** * @retval Time
 615:LWIP/Target/ethernetif.c **** */
 616:LWIP/Target/ethernetif.c **** u32_t sys_now(void)
 617:LWIP/Target/ethernetif.c **** {
 1368              		.loc 1 617 1
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              	.LCFI40:
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 7, -8
ARM GAS  /tmp/ccaGaNfs.s 			page 36


 1376              		.cfi_offset 14, -4
 1377 0002 00AF     		add	r7, sp, #0
 1378              	.LCFI41:
 1379              		.cfi_def_cfa_register 7
 618:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 1380              		.loc 1 618 10
 1381 0004 FFF7FEFF 		bl	HAL_GetTick
 1382 0008 0346     		mov	r3, r0
 619:LWIP/Target/ethernetif.c **** }
 1383              		.loc 1 619 1
 1384 000a 1846     		mov	r0, r3
 1385 000c 80BD     		pop	{r7, pc}
 1386              		.cfi_endproc
 1387              	.LFE146:
 1389              		.section	.text.ethernetif_set_link,"ax",%progbits
 1390              		.align	1
 1391              		.global	ethernetif_set_link
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1395              		.fpu fpv4-sp-d16
 1397              	ethernetif_set_link:
 1398              	.LFB147:
 620:LWIP/Target/ethernetif.c **** 
 621:LWIP/Target/ethernetif.c **** /* USER CODE END 6 */
 622:LWIP/Target/ethernetif.c **** 
 623:LWIP/Target/ethernetif.c **** /**
 624:LWIP/Target/ethernetif.c ****   * @brief  This function sets the netif link status.
 625:LWIP/Target/ethernetif.c ****   * @param  netif: the network interface
 626:LWIP/Target/ethernetif.c ****   * @retval None
 627:LWIP/Target/ethernetif.c ****   */
 628:LWIP/Target/ethernetif.c **** void ethernetif_set_link(void* argument)
 629:LWIP/Target/ethernetif.c **** 
 630:LWIP/Target/ethernetif.c **** {
 1399              		.loc 1 630 1
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 16
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              	.LCFI42:
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 84B0     		sub	sp, sp, #16
 1409              	.LCFI43:
 1410              		.cfi_def_cfa_offset 24
 1411 0004 00AF     		add	r7, sp, #0
 1412              	.LCFI44:
 1413              		.cfi_def_cfa_register 7
 1414 0006 7860     		str	r0, [r7, #4]
 631:LWIP/Target/ethernetif.c ****   uint32_t regvalue = 0;
 1415              		.loc 1 631 12
 1416 0008 0023     		movs	r3, #0
 1417 000a BB60     		str	r3, [r7, #8]
 632:LWIP/Target/ethernetif.c ****   struct link_str *link_arg = (struct link_str *)argument;
 1418              		.loc 1 632 20
 1419 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccaGaNfs.s 			page 37


 1420 000e FB60     		str	r3, [r7, #12]
 1421              	.L63:
 633:LWIP/Target/ethernetif.c **** 
 634:LWIP/Target/ethernetif.c ****   for(;;)
 635:LWIP/Target/ethernetif.c ****   {
 636:LWIP/Target/ethernetif.c ****     /* Read PHY_BSR*/
 637:LWIP/Target/ethernetif.c ****     HAL_ETH_ReadPHYRegister(&heth, PHY_BSR, &regvalue);
 1422              		.loc 1 637 5
 1423 0010 07F10803 		add	r3, r7, #8
 1424 0014 1A46     		mov	r2, r3
 1425 0016 0121     		movs	r1, #1
 1426 0018 1648     		ldr	r0, .L64
 1427 001a FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 638:LWIP/Target/ethernetif.c **** 
 639:LWIP/Target/ethernetif.c ****     regvalue &= PHY_LINKED_STATUS;
 1428              		.loc 1 639 14
 1429 001e BB68     		ldr	r3, [r7, #8]
 1430 0020 03F00403 		and	r3, r3, #4
 1431 0024 BB60     		str	r3, [r7, #8]
 640:LWIP/Target/ethernetif.c **** 
 641:LWIP/Target/ethernetif.c ****     /* Check whether the netif link down and the PHY link is up */
 642:LWIP/Target/ethernetif.c ****     if(!netif_is_link_up(link_arg->netif) && (regvalue))
 1432              		.loc 1 642 9
 1433 0026 FB68     		ldr	r3, [r7, #12]
 1434 0028 1B68     		ldr	r3, [r3]
 1435 002a 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 1436 002e 03F00403 		and	r3, r3, #4
 1437              		.loc 1 642 7
 1438 0032 002B     		cmp	r3, #0
 1439 0034 08D1     		bne	.L61
 1440              		.loc 1 642 43 discriminator 1
 1441 0036 BB68     		ldr	r3, [r7, #8]
 1442 0038 002B     		cmp	r3, #0
 1443 003a 05D0     		beq	.L61
 643:LWIP/Target/ethernetif.c ****     {
 644:LWIP/Target/ethernetif.c ****       /* network cable is connected */
 645:LWIP/Target/ethernetif.c ****       netif_set_link_up(link_arg->netif);
 1444              		.loc 1 645 7
 1445 003c FB68     		ldr	r3, [r7, #12]
 1446 003e 1B68     		ldr	r3, [r3]
 1447 0040 1846     		mov	r0, r3
 1448 0042 FFF7FEFF 		bl	netif_set_link_up
 1449 0046 11E0     		b	.L62
 1450              	.L61:
 646:LWIP/Target/ethernetif.c ****     }
 647:LWIP/Target/ethernetif.c ****     else if(netif_is_link_up(link_arg->netif) && (!regvalue))
 1451              		.loc 1 647 13
 1452 0048 FB68     		ldr	r3, [r7, #12]
 1453 004a 1B68     		ldr	r3, [r3]
 1454 004c 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 1455              		.loc 1 647 47
 1456 0050 9B08     		lsrs	r3, r3, #2
 1457 0052 03F00103 		and	r3, r3, #1
 1458 0056 DBB2     		uxtb	r3, r3
 1459              		.loc 1 647 12
 1460 0058 002B     		cmp	r3, #0
 1461 005a 07D0     		beq	.L62
ARM GAS  /tmp/ccaGaNfs.s 			page 38


 1462              		.loc 1 647 51 discriminator 1
 1463 005c BB68     		ldr	r3, [r7, #8]
 1464              		.loc 1 647 47 discriminator 1
 1465 005e 002B     		cmp	r3, #0
 1466 0060 04D1     		bne	.L62
 648:LWIP/Target/ethernetif.c ****     {
 649:LWIP/Target/ethernetif.c ****       /* network cable is dis-connected */
 650:LWIP/Target/ethernetif.c ****       netif_set_link_down(link_arg->netif);
 1467              		.loc 1 650 7
 1468 0062 FB68     		ldr	r3, [r7, #12]
 1469 0064 1B68     		ldr	r3, [r3]
 1470 0066 1846     		mov	r0, r3
 1471 0068 FFF7FEFF 		bl	netif_set_link_down
 1472              	.L62:
 651:LWIP/Target/ethernetif.c ****     }
 652:LWIP/Target/ethernetif.c **** 
 653:LWIP/Target/ethernetif.c ****     /* Suspend thread for 200 ms */
 654:LWIP/Target/ethernetif.c ****     osDelay(200);
 1473              		.loc 1 654 5
 1474 006c C820     		movs	r0, #200
 1475 006e FFF7FEFF 		bl	osDelay
 637:LWIP/Target/ethernetif.c **** 
 1476              		.loc 1 637 5
 1477 0072 CDE7     		b	.L63
 1478              	.L65:
 1479              		.align	2
 1480              	.L64:
 1481 0074 00000000 		.word	heth
 1482              		.cfi_endproc
 1483              	.LFE147:
 1485              		.section	.text.ethernetif_update_config,"ax",%progbits
 1486              		.align	1
 1487              		.global	ethernetif_update_config
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1491              		.fpu fpv4-sp-d16
 1493              	ethernetif_update_config:
 1494              	.LFB148:
 655:LWIP/Target/ethernetif.c ****   }
 656:LWIP/Target/ethernetif.c **** }
 657:LWIP/Target/ethernetif.c **** 
 658:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 7 */
 659:LWIP/Target/ethernetif.c **** 
 660:LWIP/Target/ethernetif.c **** /* USER CODE END 7 */
 661:LWIP/Target/ethernetif.c **** 
 662:LWIP/Target/ethernetif.c **** #if LWIP_NETIF_LINK_CALLBACK
 663:LWIP/Target/ethernetif.c **** /**
 664:LWIP/Target/ethernetif.c ****   * @brief  Link callback function, this function is called on change of link status
 665:LWIP/Target/ethernetif.c ****   *         to update low level driver configuration.
 666:LWIP/Target/ethernetif.c **** * @param  netif: The network interface
 667:LWIP/Target/ethernetif.c ****   * @retval None
 668:LWIP/Target/ethernetif.c ****   */
 669:LWIP/Target/ethernetif.c **** void ethernetif_update_config(struct netif *netif)
 670:LWIP/Target/ethernetif.c **** {
 1495              		.loc 1 670 1
 1496              		.cfi_startproc
ARM GAS  /tmp/ccaGaNfs.s 			page 39


 1497              		@ args = 0, pretend = 0, frame = 16
 1498              		@ frame_needed = 1, uses_anonymous_args = 0
 1499 0000 80B5     		push	{r7, lr}
 1500              	.LCFI45:
 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 7, -8
 1503              		.cfi_offset 14, -4
 1504 0002 84B0     		sub	sp, sp, #16
 1505              	.LCFI46:
 1506              		.cfi_def_cfa_offset 24
 1507 0004 00AF     		add	r7, sp, #0
 1508              	.LCFI47:
 1509              		.cfi_def_cfa_register 7
 1510 0006 7860     		str	r0, [r7, #4]
 671:LWIP/Target/ethernetif.c ****   __IO uint32_t tickstart = 0;
 1511              		.loc 1 671 17
 1512 0008 0023     		movs	r3, #0
 1513 000a FB60     		str	r3, [r7, #12]
 672:LWIP/Target/ethernetif.c ****   uint32_t regvalue = 0;
 1514              		.loc 1 672 12
 1515 000c 0023     		movs	r3, #0
 1516 000e BB60     		str	r3, [r7, #8]
 673:LWIP/Target/ethernetif.c **** 
 674:LWIP/Target/ethernetif.c ****   if(netif_is_link_up(netif))
 1517              		.loc 1 674 6
 1518 0010 7B68     		ldr	r3, [r7, #4]
 1519 0012 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 1520 0016 9B08     		lsrs	r3, r3, #2
 1521 0018 03F00103 		and	r3, r3, #1
 1522 001c DBB2     		uxtb	r3, r3
 1523              		.loc 1 674 5
 1524 001e 002B     		cmp	r3, #0
 1525 0020 5DD0     		beq	.L67
 675:LWIP/Target/ethernetif.c ****   {
 676:LWIP/Target/ethernetif.c ****     /* Restart the auto-negotiation */
 677:LWIP/Target/ethernetif.c ****     if(heth.Init.AutoNegotiation != ETH_AUTONEGOTIATION_DISABLE)
 1526              		.loc 1 677 17
 1527 0022 344B     		ldr	r3, .L79
 1528 0024 5B68     		ldr	r3, [r3, #4]
 1529              		.loc 1 677 7
 1530 0026 002B     		cmp	r3, #0
 1531 0028 3FD0     		beq	.L77
 678:LWIP/Target/ethernetif.c ****     {
 679:LWIP/Target/ethernetif.c ****       /* Enable Auto-Negotiation */
 680:LWIP/Target/ethernetif.c ****       HAL_ETH_WritePHYRegister(&heth, PHY_BCR, PHY_AUTONEGOTIATION);
 1532              		.loc 1 680 7
 1533 002a 4FF48052 		mov	r2, #4096
 1534 002e 0021     		movs	r1, #0
 1535 0030 3048     		ldr	r0, .L79
 1536 0032 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 681:LWIP/Target/ethernetif.c **** 
 682:LWIP/Target/ethernetif.c ****       /* Get tick */
 683:LWIP/Target/ethernetif.c ****       tickstart = HAL_GetTick();
 1537              		.loc 1 683 19
 1538 0036 FFF7FEFF 		bl	HAL_GetTick
 1539 003a 0346     		mov	r3, r0
 1540              		.loc 1 683 17
ARM GAS  /tmp/ccaGaNfs.s 			page 40


 1541 003c FB60     		str	r3, [r7, #12]
 1542              	.L70:
 684:LWIP/Target/ethernetif.c **** 
 685:LWIP/Target/ethernetif.c ****       /* Wait until the auto-negotiation will be completed */
 686:LWIP/Target/ethernetif.c ****       do
 687:LWIP/Target/ethernetif.c ****       {
 688:LWIP/Target/ethernetif.c ****         HAL_ETH_ReadPHYRegister(&heth, PHY_BSR, &regvalue);
 1543              		.loc 1 688 9
 1544 003e 07F10803 		add	r3, r7, #8
 1545 0042 1A46     		mov	r2, r3
 1546 0044 0121     		movs	r1, #1
 1547 0046 2B48     		ldr	r0, .L79
 1548 0048 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 689:LWIP/Target/ethernetif.c **** 
 690:LWIP/Target/ethernetif.c ****         /* Check for the Timeout ( 1s ) */
 691:LWIP/Target/ethernetif.c ****         if((HAL_GetTick() - tickstart ) > 1000)
 1549              		.loc 1 691 13
 1550 004c FFF7FEFF 		bl	HAL_GetTick
 1551 0050 0246     		mov	r2, r0
 1552              		.loc 1 691 27
 1553 0052 FB68     		ldr	r3, [r7, #12]
 1554 0054 D31A     		subs	r3, r2, r3
 1555              		.loc 1 691 11
 1556 0056 B3F57A7F 		cmp	r3, #1000
 1557 005a 28D8     		bhi	.L78
 692:LWIP/Target/ethernetif.c ****         {
 693:LWIP/Target/ethernetif.c ****           /* In case of timeout */
 694:LWIP/Target/ethernetif.c ****           goto error;
 695:LWIP/Target/ethernetif.c ****         }
 696:LWIP/Target/ethernetif.c ****       } while (((regvalue & PHY_AUTONEGO_COMPLETE) != PHY_AUTONEGO_COMPLETE));
 1558              		.loc 1 696 27
 1559 005c BB68     		ldr	r3, [r7, #8]
 1560 005e 03F02003 		and	r3, r3, #32
 1561              		.loc 1 696 7
 1562 0062 002B     		cmp	r3, #0
 1563 0064 EBD0     		beq	.L70
 697:LWIP/Target/ethernetif.c **** 
 698:LWIP/Target/ethernetif.c ****       /* Read the result of the auto-negotiation */
 699:LWIP/Target/ethernetif.c ****       HAL_ETH_ReadPHYRegister(&heth, PHY_SR, &regvalue);
 1564              		.loc 1 699 7
 1565 0066 07F10803 		add	r3, r7, #8
 1566 006a 1A46     		mov	r2, r3
 1567 006c 1F21     		movs	r1, #31
 1568 006e 2148     		ldr	r0, .L79
 1569 0070 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 700:LWIP/Target/ethernetif.c **** 
 701:LWIP/Target/ethernetif.c ****       /* Configure the MAC with the Duplex Mode fixed by the auto-negotiation process */
 702:LWIP/Target/ethernetif.c ****       if((regvalue & PHY_DUPLEX_STATUS) != (uint32_t)RESET)
 1570              		.loc 1 702 20
 1571 0074 BB68     		ldr	r3, [r7, #8]
 1572 0076 03F01003 		and	r3, r3, #16
 1573              		.loc 1 702 9
 1574 007a 002B     		cmp	r3, #0
 1575 007c 04D0     		beq	.L71
 703:LWIP/Target/ethernetif.c ****       {
 704:LWIP/Target/ethernetif.c ****         /* Set Ethernet duplex mode to Full-duplex following the auto-negotiation */
 705:LWIP/Target/ethernetif.c ****         heth.Init.DuplexMode = ETH_MODE_FULLDUPLEX;
ARM GAS  /tmp/ccaGaNfs.s 			page 41


 1576              		.loc 1 705 30
 1577 007e 1D4B     		ldr	r3, .L79
 1578 0080 4FF40062 		mov	r2, #2048
 1579 0084 DA60     		str	r2, [r3, #12]
 1580 0086 02E0     		b	.L72
 1581              	.L71:
 706:LWIP/Target/ethernetif.c ****       }
 707:LWIP/Target/ethernetif.c ****       else
 708:LWIP/Target/ethernetif.c ****       {
 709:LWIP/Target/ethernetif.c ****         /* Set Ethernet duplex mode to Half-duplex following the auto-negotiation */
 710:LWIP/Target/ethernetif.c ****         heth.Init.DuplexMode = ETH_MODE_HALFDUPLEX;
 1582              		.loc 1 710 30
 1583 0088 1A4B     		ldr	r3, .L79
 1584 008a 0022     		movs	r2, #0
 1585 008c DA60     		str	r2, [r3, #12]
 1586              	.L72:
 711:LWIP/Target/ethernetif.c ****       }
 712:LWIP/Target/ethernetif.c ****       /* Configure the MAC with the speed fixed by the auto-negotiation process */
 713:LWIP/Target/ethernetif.c ****       if(regvalue & PHY_SPEED_STATUS)
 1587              		.loc 1 713 19
 1588 008e BB68     		ldr	r3, [r7, #8]
 1589 0090 03F00403 		and	r3, r3, #4
 1590              		.loc 1 713 9
 1591 0094 002B     		cmp	r3, #0
 1592 0096 03D0     		beq	.L73
 714:LWIP/Target/ethernetif.c ****       {
 715:LWIP/Target/ethernetif.c ****         /* Set Ethernet speed to 10M following the auto-negotiation */
 716:LWIP/Target/ethernetif.c ****         heth.Init.Speed = ETH_SPEED_10M;
 1593              		.loc 1 716 25
 1594 0098 164B     		ldr	r3, .L79
 1595 009a 0022     		movs	r2, #0
 1596 009c 9A60     		str	r2, [r3, #8]
 1597 009e 16E0     		b	.L75
 1598              	.L73:
 717:LWIP/Target/ethernetif.c ****       }
 718:LWIP/Target/ethernetif.c ****       else
 719:LWIP/Target/ethernetif.c ****       {
 720:LWIP/Target/ethernetif.c ****         /* Set Ethernet speed to 100M following the auto-negotiation */
 721:LWIP/Target/ethernetif.c ****         heth.Init.Speed = ETH_SPEED_100M;
 1599              		.loc 1 721 25
 1600 00a0 144B     		ldr	r3, .L79
 1601 00a2 4FF48042 		mov	r2, #16384
 1602 00a6 9A60     		str	r2, [r3, #8]
 1603 00a8 11E0     		b	.L75
 1604              	.L77:
 722:LWIP/Target/ethernetif.c ****       }
 723:LWIP/Target/ethernetif.c ****     }
 724:LWIP/Target/ethernetif.c ****     else /* AutoNegotiation Disable */
 725:LWIP/Target/ethernetif.c ****     {
 726:LWIP/Target/ethernetif.c ****     error :
 1605              		.loc 1 726 5
 1606 00aa 00BF     		nop
 1607 00ac 00E0     		b	.L68
 1608              	.L78:
 694:LWIP/Target/ethernetif.c ****         }
 1609              		.loc 1 694 11
 1610 00ae 00BF     		nop
ARM GAS  /tmp/ccaGaNfs.s 			page 42


 1611              	.L68:
 727:LWIP/Target/ethernetif.c ****       /* Check parameters */
 728:LWIP/Target/ethernetif.c ****       assert_param(IS_ETH_SPEED(heth.Init.Speed));
 729:LWIP/Target/ethernetif.c ****       assert_param(IS_ETH_DUPLEX_MODE(heth.Init.DuplexMode));
 730:LWIP/Target/ethernetif.c **** 
 731:LWIP/Target/ethernetif.c ****       /* Set MAC Speed and Duplex Mode to PHY */
 732:LWIP/Target/ethernetif.c ****       HAL_ETH_WritePHYRegister(&heth, PHY_BCR, ((uint16_t)(heth.Init.DuplexMode >> 3) |
 1612              		.loc 1 732 69
 1613 00b0 104B     		ldr	r3, .L79
 1614 00b2 DB68     		ldr	r3, [r3, #12]
 1615              		.loc 1 732 81
 1616 00b4 DB08     		lsrs	r3, r3, #3
 1617              		.loc 1 732 49
 1618 00b6 9AB2     		uxth	r2, r3
 733:LWIP/Target/ethernetif.c ****                                                      (uint16_t)(heth.Init.Speed >> 1)));
 1619              		.loc 1 733 74
 1620 00b8 0E4B     		ldr	r3, .L79
 1621 00ba 9B68     		ldr	r3, [r3, #8]
 1622              		.loc 1 733 81
 1623 00bc 5B08     		lsrs	r3, r3, #1
 1624              		.loc 1 733 54
 1625 00be 9BB2     		uxth	r3, r3
 732:LWIP/Target/ethernetif.c ****                                                      (uint16_t)(heth.Init.Speed >> 1)));
 1626              		.loc 1 732 7
 1627 00c0 1343     		orrs	r3, r3, r2
 1628 00c2 9BB2     		uxth	r3, r3
 1629 00c4 1A46     		mov	r2, r3
 1630 00c6 0021     		movs	r1, #0
 1631 00c8 0A48     		ldr	r0, .L79
 1632 00ca FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 1633              	.L75:
 734:LWIP/Target/ethernetif.c ****     }
 735:LWIP/Target/ethernetif.c **** 
 736:LWIP/Target/ethernetif.c ****     /* ETHERNET MAC Re-Configuration */
 737:LWIP/Target/ethernetif.c ****     HAL_ETH_ConfigMAC(&heth, (ETH_MACInitTypeDef *) NULL);
 1634              		.loc 1 737 5
 1635 00ce 0021     		movs	r1, #0
 1636 00d0 0848     		ldr	r0, .L79
 1637 00d2 FFF7FEFF 		bl	HAL_ETH_ConfigMAC
 738:LWIP/Target/ethernetif.c **** 
 739:LWIP/Target/ethernetif.c ****     /* Restart MAC interface */
 740:LWIP/Target/ethernetif.c ****     HAL_ETH_Start(&heth);
 1638              		.loc 1 740 5
 1639 00d6 0748     		ldr	r0, .L79
 1640 00d8 FFF7FEFF 		bl	HAL_ETH_Start
 1641 00dc 02E0     		b	.L76
 1642              	.L67:
 741:LWIP/Target/ethernetif.c ****   }
 742:LWIP/Target/ethernetif.c ****   else
 743:LWIP/Target/ethernetif.c ****   {
 744:LWIP/Target/ethernetif.c ****     /* Stop MAC interface */
 745:LWIP/Target/ethernetif.c ****     HAL_ETH_Stop(&heth);
 1643              		.loc 1 745 5
 1644 00de 0548     		ldr	r0, .L79
 1645 00e0 FFF7FEFF 		bl	HAL_ETH_Stop
 1646              	.L76:
 746:LWIP/Target/ethernetif.c ****   }
ARM GAS  /tmp/ccaGaNfs.s 			page 43


 747:LWIP/Target/ethernetif.c **** 
 748:LWIP/Target/ethernetif.c ****   ethernetif_notify_conn_changed(netif);
 1647              		.loc 1 748 3
 1648 00e4 7868     		ldr	r0, [r7, #4]
 1649 00e6 FFF7FEFF 		bl	ethernetif_notify_conn_changed
 749:LWIP/Target/ethernetif.c **** }
 1650              		.loc 1 749 1
 1651 00ea 00BF     		nop
 1652 00ec 1037     		adds	r7, r7, #16
 1653              	.LCFI48:
 1654              		.cfi_def_cfa_offset 8
 1655 00ee BD46     		mov	sp, r7
 1656              	.LCFI49:
 1657              		.cfi_def_cfa_register 13
 1658              		@ sp needed
 1659 00f0 80BD     		pop	{r7, pc}
 1660              	.L80:
 1661 00f2 00BF     		.align	2
 1662              	.L79:
 1663 00f4 00000000 		.word	heth
 1664              		.cfi_endproc
 1665              	.LFE148:
 1667              		.section	.text.ethernetif_notify_conn_changed,"ax",%progbits
 1668              		.align	1
 1669              		.weak	ethernetif_notify_conn_changed
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu fpv4-sp-d16
 1675              	ethernetif_notify_conn_changed:
 1676              	.LFB149:
 750:LWIP/Target/ethernetif.c **** 
 751:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 8 */
 752:LWIP/Target/ethernetif.c **** /**
 753:LWIP/Target/ethernetif.c ****   * @brief  This function notify user about link status changement.
 754:LWIP/Target/ethernetif.c ****   * @param  netif: the network interface
 755:LWIP/Target/ethernetif.c ****   * @retval None
 756:LWIP/Target/ethernetif.c ****   */
 757:LWIP/Target/ethernetif.c **** __weak void ethernetif_notify_conn_changed(struct netif *netif)
 758:LWIP/Target/ethernetif.c **** {
 1677              		.loc 1 758 1
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 8
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 1682 0000 80B4     		push	{r7}
 1683              	.LCFI50:
 1684              		.cfi_def_cfa_offset 4
 1685              		.cfi_offset 7, -4
 1686 0002 83B0     		sub	sp, sp, #12
 1687              	.LCFI51:
 1688              		.cfi_def_cfa_offset 16
 1689 0004 00AF     		add	r7, sp, #0
 1690              	.LCFI52:
 1691              		.cfi_def_cfa_register 7
 1692 0006 7860     		str	r0, [r7, #4]
 759:LWIP/Target/ethernetif.c ****   /* NOTE : This is function could be implemented in user file
ARM GAS  /tmp/ccaGaNfs.s 			page 44


 760:LWIP/Target/ethernetif.c ****             when the callback is needed,
 761:LWIP/Target/ethernetif.c ****   */
 762:LWIP/Target/ethernetif.c **** 
 763:LWIP/Target/ethernetif.c **** }
 1693              		.loc 1 763 1
 1694 0008 00BF     		nop
 1695 000a 0C37     		adds	r7, r7, #12
 1696              	.LCFI53:
 1697              		.cfi_def_cfa_offset 4
 1698 000c BD46     		mov	sp, r7
 1699              	.LCFI54:
 1700              		.cfi_def_cfa_register 13
 1701              		@ sp needed
 1702 000e 5DF8047B 		ldr	r7, [sp], #4
 1703              	.LCFI55:
 1704              		.cfi_restore 7
 1705              		.cfi_def_cfa_offset 0
 1706 0012 7047     		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE149:
 1710              		.text
 1711              	.Letext0:
 1712              		.file 2 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_typ
 1713              		.file 3 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 1714              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1715              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1716              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1717              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1718              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1719              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1720              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_eth.h"
 1721              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1722              		.file 12 "/home/mego-ros2/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stdde
 1723              		.file 13 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 1724              		.file 14 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 1725              		.file 15 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 1726              		.file 16 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/stdlib.h"
 1727              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1728              		.file 18 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/ctype.h"
 1729              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1730              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1731              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1732              		.file 22 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 1733              		.file 23 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 1734              		.file 24 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1735              		.file 25 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1736              		.file 26 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1737              		.file 27 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1738              		.file 28 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1739              		.file 29 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1740              		.file 30 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 1741              		.file 31 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 1742              		.file 32 "LWIP/Target/ethernetif.h"
 1743              		.file 33 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
ARM GAS  /tmp/ccaGaNfs.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ethernetif.c
                            *COM*:0000000000000080 DMARxDscrTab
                            *COM*:0000000000000080 DMATxDscrTab
                            *COM*:00000000000017d0 Rx_Buff
                            *COM*:00000000000017d0 Tx_Buff
     /tmp/ccaGaNfs.s:26     .bss.s_xSemaphore:0000000000000000 s_xSemaphore
     /tmp/ccaGaNfs.s:23     .bss.s_xSemaphore:0000000000000000 $d
                            *COM*:0000000000000048 heth
     /tmp/ccaGaNfs.s:30     .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/ccaGaNfs.s:38     .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/ccaGaNfs.s:242    .text.HAL_ETH_MspInit:0000000000000148 $d
     /tmp/ccaGaNfs.s:251    .text.HAL_ETH_MspDeInit:0000000000000000 $t
     /tmp/ccaGaNfs.s:258    .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
     /tmp/ccaGaNfs.s:328    .text.HAL_ETH_MspDeInit:0000000000000060 $d
     /tmp/ccaGaNfs.s:337    .text.HAL_ETH_RxCpltCallback:0000000000000000 $t
     /tmp/ccaGaNfs.s:344    .text.HAL_ETH_RxCpltCallback:0000000000000000 HAL_ETH_RxCpltCallback
     /tmp/ccaGaNfs.s:380    .text.HAL_ETH_RxCpltCallback:000000000000001c $d
     /tmp/ccaGaNfs.s:385    .rodata:0000000000000000 $d
     /tmp/ccaGaNfs.s:389    .text.low_level_init:0000000000000000 $t
     /tmp/ccaGaNfs.s:395    .text.low_level_init:0000000000000000 low_level_init
     /tmp/ccaGaNfs.s:625    .text.low_level_init:0000000000000184 $d
     /tmp/ccaGaNfs.s:1161   .text.ethernetif_input:0000000000000000 ethernetif_input
     /tmp/ccaGaNfs.s:638    .text.low_level_output:0000000000000000 $t
     /tmp/ccaGaNfs.s:644    .text.low_level_output:0000000000000000 low_level_output
     /tmp/ccaGaNfs.s:874    .text.low_level_output:0000000000000138 $d
     /tmp/ccaGaNfs.s:879    .text.low_level_input:0000000000000000 $t
     /tmp/ccaGaNfs.s:885    .text.low_level_input:0000000000000000 low_level_input
     /tmp/ccaGaNfs.s:1149   .text.low_level_input:0000000000000164 $d
     /tmp/ccaGaNfs.s:1154   .text.ethernetif_input:0000000000000000 $t
     /tmp/ccaGaNfs.s:1233   .text.ethernetif_input:0000000000000058 $d
     /tmp/ccaGaNfs.s:1249   .text.ethernetif_init:0000000000000000 $t
     /tmp/ccaGaNfs.s:1256   .text.ethernetif_init:0000000000000000 ethernetif_init
     /tmp/ccaGaNfs.s:1319   .text.ethernetif_init:0000000000000048 $d
     /tmp/ccaGaNfs.s:1328   .text.sys_jiffies:0000000000000000 $t
     /tmp/ccaGaNfs.s:1335   .text.sys_jiffies:0000000000000000 sys_jiffies
     /tmp/ccaGaNfs.s:1359   .text.sys_now:0000000000000000 $t
     /tmp/ccaGaNfs.s:1366   .text.sys_now:0000000000000000 sys_now
     /tmp/ccaGaNfs.s:1390   .text.ethernetif_set_link:0000000000000000 $t
     /tmp/ccaGaNfs.s:1397   .text.ethernetif_set_link:0000000000000000 ethernetif_set_link
     /tmp/ccaGaNfs.s:1481   .text.ethernetif_set_link:0000000000000074 $d
     /tmp/ccaGaNfs.s:1486   .text.ethernetif_update_config:0000000000000000 $t
     /tmp/ccaGaNfs.s:1493   .text.ethernetif_update_config:0000000000000000 ethernetif_update_config
     /tmp/ccaGaNfs.s:1675   .text.ethernetif_notify_conn_changed:0000000000000000 ethernetif_notify_conn_changed
     /tmp/ccaGaNfs.s:1663   .text.ethernetif_update_config:00000000000000f4 $d
     /tmp/ccaGaNfs.s:1668   .text.ethernetif_notify_conn_changed:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
osSemaphoreRelease
HAL_ETH_Init
HAL_ETH_DMATxDescListInit
HAL_ETH_DMARxDescListInit
ARM GAS  /tmp/ccaGaNfs.s 			page 46


osSemaphoreNew
memset
osThreadNew
HAL_ETH_Start
HAL_ETH_ReadPHYRegister
HAL_ETH_WritePHYRegister
memcpy
HAL_ETH_TransmitFrame
HAL_ETH_GetReceivedFrame_IT
pbuf_alloc
osSemaphoreAcquire
sys_mutex_lock
pbuf_free
sys_mutex_unlock
lock_tcpip_core
printf
etharp_output
HAL_GetTick
netif_set_link_up
netif_set_link_down
osDelay
HAL_ETH_ConfigMAC
HAL_ETH_Stop
