ARM GAS  /tmp/ccQQ8my2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	1
  19              		.global	main
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	main:
  27              	.LFB137:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "lwip.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccQQ8my2.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  29              		.loc 1 69 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
ARM GAS  /tmp/ccQQ8my2.s 			page 3


  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  41              		.loc 1 77 3
  42 0004 FFF7FEFF 		bl	HAL_Init
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  43              		.loc 1 84 3
  44 0008 FFF7FEFF 		bl	SystemClock_Config
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  45              		.loc 1 91 3
  46 000c FFF7FEFF 		bl	MX_GPIO_Init
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
  47              		.loc 1 92 3
  48 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Init scheduler */
  98:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
  49              		.loc 1 98 3
  50 0014 FFF7FEFF 		bl	osKernelInitialize
  99:Core/Src/main.c ****   MX_FREERTOS_Init();
  51              		.loc 1 99 3
  52 0018 FFF7FEFF 		bl	MX_FREERTOS_Init
 100:Core/Src/main.c ****   /* Start scheduler */
 101:Core/Src/main.c ****   osKernelStart();
  53              		.loc 1 101 3
  54 001c FFF7FEFF 		bl	osKernelStart
  55              	.L2:
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 104:Core/Src/main.c ****   /* Infinite loop */
 105:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 106:Core/Src/main.c ****   while (1)
  56              		.loc 1 106 9 discriminator 1
  57 0020 FEE7     		b	.L2
  58              		.cfi_endproc
  59              	.LFE137:
  61              		.section	.text.SystemClock_Config,"ax",%progbits
  62              		.align	1
  63              		.global	SystemClock_Config
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccQQ8my2.s 			page 4


  69              	SystemClock_Config:
  70              	.LFB138:
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c ****     /* USER CODE END WHILE */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****   * @brief System Clock Configuration
 117:Core/Src/main.c ****   * @retval None
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c **** void SystemClock_Config(void)
 120:Core/Src/main.c **** {
  71              		.loc 1 120 1
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 80
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 94B0     		sub	sp, sp, #80
  81              	.LCFI3:
  82              		.cfi_def_cfa_offset 88
  83 0004 00AF     		add	r7, sp, #0
  84              	.LCFI4:
  85              		.cfi_def_cfa_register 7
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  86              		.loc 1 121 22
  87 0006 07F12003 		add	r3, r7, #32
  88 000a 3022     		movs	r2, #48
  89 000c 0021     		movs	r1, #0
  90 000e 1846     		mov	r0, r3
  91 0010 FFF7FEFF 		bl	memset
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  92              		.loc 1 122 22
  93 0014 07F10C03 		add	r3, r7, #12
  94 0018 0022     		movs	r2, #0
  95 001a 1A60     		str	r2, [r3]
  96 001c 5A60     		str	r2, [r3, #4]
  97 001e 9A60     		str	r2, [r3, #8]
  98 0020 DA60     		str	r2, [r3, #12]
  99 0022 1A61     		str	r2, [r3, #16]
 100              	.LBB4:
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 101              		.loc 1 126 3
 102 0024 0023     		movs	r3, #0
 103 0026 BB60     		str	r3, [r7, #8]
 104 0028 284B     		ldr	r3, .L7
 105 002a 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccQQ8my2.s 			page 5


 106 002c 274A     		ldr	r2, .L7
 107 002e 43F08053 		orr	r3, r3, #268435456
 108 0032 1364     		str	r3, [r2, #64]
 109 0034 254B     		ldr	r3, .L7
 110 0036 1B6C     		ldr	r3, [r3, #64]
 111 0038 03F08053 		and	r3, r3, #268435456
 112 003c BB60     		str	r3, [r7, #8]
 113 003e BB68     		ldr	r3, [r7, #8]
 114              	.LBE4:
 115              	.LBB5:
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 116              		.loc 1 127 3
 117 0040 0023     		movs	r3, #0
 118 0042 7B60     		str	r3, [r7, #4]
 119 0044 224B     		ldr	r3, .L7+4
 120 0046 1B68     		ldr	r3, [r3]
 121 0048 214A     		ldr	r2, .L7+4
 122 004a 43F48043 		orr	r3, r3, #16384
 123 004e 1360     		str	r3, [r2]
 124 0050 1F4B     		ldr	r3, .L7+4
 125 0052 1B68     		ldr	r3, [r3]
 126 0054 03F48043 		and	r3, r3, #16384
 127 0058 7B60     		str	r3, [r7, #4]
 128 005a 7B68     		ldr	r3, [r7, #4]
 129              	.LBE5:
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 130              		.loc 1 131 36
 131 005c 0223     		movs	r3, #2
 132 005e 3B62     		str	r3, [r7, #32]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 133              		.loc 1 132 30
 134 0060 0123     		movs	r3, #1
 135 0062 FB62     		str	r3, [r7, #44]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136              		.loc 1 133 41
 137 0064 1023     		movs	r3, #16
 138 0066 3B63     		str	r3, [r7, #48]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 139              		.loc 1 134 34
 140 0068 0223     		movs	r3, #2
 141 006a BB63     		str	r3, [r7, #56]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142              		.loc 1 135 35
 143 006c 0023     		movs	r3, #0
 144 006e FB63     		str	r3, [r7, #60]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 145              		.loc 1 136 30
 146 0070 0823     		movs	r3, #8
 147 0072 3B64     		str	r3, [r7, #64]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 148              		.loc 1 137 30
 149 0074 A823     		movs	r3, #168
 150 0076 7B64     		str	r3, [r7, #68]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/ccQQ8my2.s 			page 6


 151              		.loc 1 138 30
 152 0078 0223     		movs	r3, #2
 153 007a BB64     		str	r3, [r7, #72]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 154              		.loc 1 139 30
 155 007c 0423     		movs	r3, #4
 156 007e FB64     		str	r3, [r7, #76]
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157              		.loc 1 140 7
 158 0080 07F12003 		add	r3, r7, #32
 159 0084 1846     		mov	r0, r3
 160 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 161 008a 0346     		mov	r3, r0
 162              		.loc 1 140 6
 163 008c 002B     		cmp	r3, #0
 164 008e 01D0     		beq	.L4
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 165              		.loc 1 142 5
 166 0090 FFF7FEFF 		bl	Error_Handler
 167              	.L4:
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168              		.loc 1 146 31
 169 0094 0F23     		movs	r3, #15
 170 0096 FB60     		str	r3, [r7, #12]
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 171              		.loc 1 148 34
 172 0098 0223     		movs	r3, #2
 173 009a 3B61     		str	r3, [r7, #16]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 174              		.loc 1 149 35
 175 009c 0023     		movs	r3, #0
 176 009e 7B61     		str	r3, [r7, #20]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 177              		.loc 1 150 36
 178 00a0 4FF4A053 		mov	r3, #5120
 179 00a4 BB61     		str	r3, [r7, #24]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 180              		.loc 1 151 36
 181 00a6 4FF48053 		mov	r3, #4096
 182 00aa FB61     		str	r3, [r7, #28]
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 183              		.loc 1 153 7
 184 00ac 07F10C03 		add	r3, r7, #12
 185 00b0 0521     		movs	r1, #5
 186 00b2 1846     		mov	r0, r3
 187 00b4 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 188 00b8 0346     		mov	r3, r0
 189              		.loc 1 153 6
 190 00ba 002B     		cmp	r3, #0
 191 00bc 01D0     		beq	.L6
 154:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQQ8my2.s 			page 7


 155:Core/Src/main.c ****     Error_Handler();
 192              		.loc 1 155 5
 193 00be FFF7FEFF 		bl	Error_Handler
 194              	.L6:
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 195              		.loc 1 157 1
 196 00c2 00BF     		nop
 197 00c4 5037     		adds	r7, r7, #80
 198              	.LCFI5:
 199              		.cfi_def_cfa_offset 8
 200 00c6 BD46     		mov	sp, r7
 201              	.LCFI6:
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 00c8 80BD     		pop	{r7, pc}
 205              	.L8:
 206 00ca 00BF     		.align	2
 207              	.L7:
 208 00cc 00380240 		.word	1073887232
 209 00d0 00700040 		.word	1073770496
 210              		.cfi_endproc
 211              	.LFE138:
 213              		.section	.text.Error_Handler,"ax",%progbits
 214              		.align	1
 215              		.global	Error_Handler
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv4-sp-d16
 221              	Error_Handler:
 222              	.LFB139:
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END 4 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void Error_Handler(void)
 168:Core/Src/main.c **** {
 223              		.loc 1 168 1
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228 0000 80B4     		push	{r7}
 229              	.LCFI7:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 00AF     		add	r7, sp, #0
 233              	.LCFI8:
 234              		.cfi_def_cfa_register 7
 235              	.LBB6:
 236              	.LBB7:
ARM GAS  /tmp/ccQQ8my2.s 			page 8


 237              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  /tmp/ccQQ8my2.s 			page 9


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  /tmp/ccQQ8my2.s 			page 10


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 238              		.loc 2 142 3
 239              		.syntax unified
 240              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 241 0004 72B6     		cpsid i
 242              	@ 0 "" 2
 243              		.thumb
 244              		.syntax unified
 245              	.L10:
 246              	.LBE7:
 247              	.LBE6:
 169:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 170:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 171:Core/Src/main.c ****   __disable_irq();
 172:Core/Src/main.c ****   while (1)
 248              		.loc 1 172 9 discriminator 1
 249 0006 FEE7     		b	.L10
 250              		.cfi_endproc
 251              	.LFE139:
 253              		.text
 254              	.Letext0:
 255              		.file 3 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_typ
 256              		.file 4 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 257              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 258              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 259              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 260              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 261              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 262              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  /tmp/ccQQ8my2.s 			page 11


 263              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 264              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_eth.h"
 265              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 266              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 267              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 268              		.file 16 "/home/mego-ros2/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stdde
 269              		.file 17 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 270              		.file 18 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 271              		.file 19 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 272              		.file 20 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/stdlib.h"
 273              		.file 21 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 274              		.file 22 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/ctype.h"
 275              		.file 23 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 276              		.file 24 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 277              		.file 25 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 278              		.file 26 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 279              		.file 27 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 280              		.file 28 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 281              		.file 29 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 282              		.file 30 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 283              		.file 31 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 284              		.file 32 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 285              		.file 33 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 286              		.file 34 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 287              		.file 35 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 288              		.file 36 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 289              		.file 37 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 290              		.file 38 "LWIP/App/lwip.h"
 291              		.file 39 "Core/Inc/usart.h"
ARM GAS  /tmp/ccQQ8my2.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQQ8my2.s:18     .text.main:0000000000000000 $t
     /tmp/ccQQ8my2.s:26     .text.main:0000000000000000 main
     /tmp/ccQQ8my2.s:69     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQQ8my2.s:62     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQQ8my2.s:221    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccQQ8my2.s:208    .text.SystemClock_Config:00000000000000cc $d
     /tmp/ccQQ8my2.s:214    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
