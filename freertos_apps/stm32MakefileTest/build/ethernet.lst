ARM GAS  /tmp/cc34Vz3c.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ethernet.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ethbroadcast
  18              		.section	.rodata.ethbroadcast,"a"
  19              		.align	2
  22              	ethbroadcast:
  23 0000 FF       		.byte	-1
  24 0001 FF       		.byte	-1
  25 0002 FF       		.byte	-1
  26 0003 FF       		.byte	-1
  27 0004 FF       		.byte	-1
  28 0005 FF       		.byte	-1
  29              		.global	ethzero
  30              		.section	.rodata.ethzero,"a"
  31              		.align	2
  34              	ethzero:
  35 0000 00000000 		.space	6
  35      0000
  36              		.section	.text.ethernet_input,"ax",%progbits
  37              		.align	1
  38              		.global	ethernet_input
  39              		.arch armv7e-m
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	ethernet_input:
  46              	.LFB133:
  47              		.file 1 "Middlewares/Third_Party/LwIP/src/netif/ethernet.c"
   1:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** /**
   2:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @file
   3:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Ethernet common functions
   4:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
   5:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @defgroup ethernet Ethernet
   6:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @ingroup callbackstyle_api
   7:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  */
   8:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
   9:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** /*
  10:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Copyright (c) 2001-2003 Swedish Institute of Computer Science.
  11:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Copyright (c) 2003-2004 Leon Woestenberg <leon.woestenberg@axon.tv>
  12:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Copyright (c) 2003-2004 Axon Digital Design B.V., The Netherlands.
  13:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * All rights reserved.
  14:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
ARM GAS  /tmp/cc34Vz3c.s 			page 2


  15:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Redistribution and use in source and binary forms, with or without modification,
  16:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * are permitted provided that the following conditions are met:
  17:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
  18:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  19:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *    this list of conditions and the following disclaimer.
  20:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *    this list of conditions and the following disclaimer in the documentation
  22:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *    and/or other materials provided with the distribution.
  23:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * 3. The name of the author may not be used to endorse or promote products
  24:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *    derived from this software without specific prior written permission.
  25:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
  26:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  27:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  29:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  30:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  31:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  32:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  33:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  34:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  35:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * OF SUCH DAMAGE.
  36:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
  37:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * This file is part of the lwIP TCP/IP stack.
  38:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
  39:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  */
  40:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  41:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "lwip/opt.h"
  42:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  43:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_ARP || LWIP_ETHERNET
  44:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  45:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "netif/ethernet.h"
  46:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "lwip/def.h"
  47:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "lwip/stats.h"
  48:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "lwip/etharp.h"
  49:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "lwip/ip.h"
  50:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "lwip/snmp.h"
  51:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  52:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include <string.h>
  53:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  54:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "netif/ppp/ppp_opts.h"
  55:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if PPPOE_SUPPORT
  56:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include "netif/ppp/pppoe.h"
  57:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* PPPOE_SUPPORT */
  58:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  59:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #ifdef LWIP_HOOK_FILENAME
  60:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #include LWIP_HOOK_FILENAME
  61:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif
  62:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  63:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** const struct eth_addr ethbroadcast = {{0xff, 0xff, 0xff, 0xff, 0xff, 0xff}};
  64:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** const struct eth_addr ethzero = {{0, 0, 0, 0, 0, 0}};
  65:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  66:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** /**
  67:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @ingroup lwip_nosys
  68:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Process received ethernet frames. Using this function instead of directly
  69:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * calling ip_input and passing ARP frames through etharp in ethernetif_input,
  70:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * the ARP cache is protected from concurrent access.\n
  71:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Don't call directly, pass to netif_add() and call netif->input().
ARM GAS  /tmp/cc34Vz3c.s 			page 3


  72:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
  73:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param p the received packet, p->payload pointing to the ethernet header
  74:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param netif the network interface on which the packet was received
  75:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
  76:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @see LWIP_HOOK_UNKNOWN_ETH_PROTOCOL
  77:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @see ETHARP_SUPPORT_VLAN
  78:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @see LWIP_HOOK_VLAN_CHECK
  79:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  */
  80:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** err_t
  81:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** ethernet_input(struct pbuf *p, struct netif *netif)
  82:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** {
  48              		.loc 1 82 1
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 24
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 86B0     		sub	sp, sp, #24
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 32
  60 0004 00AF     		add	r7, sp, #0
  61              	.LCFI2:
  62              		.cfi_def_cfa_register 7
  63 0006 7860     		str	r0, [r7, #4]
  64 0008 3960     		str	r1, [r7]
  83:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   struct eth_hdr *ethhdr;
  84:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   u16_t type;
  85:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_ARP || ETHARP_SUPPORT_VLAN || LWIP_IPV6
  86:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   u16_t next_hdr_offset = SIZEOF_ETH_HDR;
  65              		.loc 1 86 9
  66 000a 0E23     		movs	r3, #14
  67 000c FB82     		strh	r3, [r7, #22]	@ movhi
  87:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_ARP || ETHARP_SUPPORT_VLAN */
  88:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  89:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LWIP_ASSERT_CORE_LOCKED();
  90:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  91:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   if (p->len <= SIZEOF_ETH_HDR) {
  68              		.loc 1 91 8
  69 000e 7B68     		ldr	r3, [r7, #4]
  70 0010 5B89     		ldrh	r3, [r3, #10]
  71              		.loc 1 91 6
  72 0012 0E2B     		cmp	r3, #14
  73 0014 6ED9     		bls	.L17
  92:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     /* a packet with only an ethernet header (or less) is not valid for us */
  93:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     ETHARP_STATS_INC(etharp.proterr);
  94:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     ETHARP_STATS_INC(etharp.drop);
  95:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     MIB2_STATS_NETIF_INC(netif, ifinerrors);
  96:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     goto free_and_return;
  97:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
  98:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
  99:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   if (p->if_idx == NETIF_NO_INDEX) {
  74              		.loc 1 99 8
  75 0016 7B68     		ldr	r3, [r7, #4]
  76 0018 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
ARM GAS  /tmp/cc34Vz3c.s 			page 4


  77              		.loc 1 99 6
  78 001a 002B     		cmp	r3, #0
  79 001c 06D1     		bne	.L4
 100:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     p->if_idx = netif_get_index(netif);
  80              		.loc 1 100 17
  81 001e 3B68     		ldr	r3, [r7]
  82 0020 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
  83 0024 0133     		adds	r3, r3, #1
  84 0026 DAB2     		uxtb	r2, r3
  85              		.loc 1 100 15
  86 0028 7B68     		ldr	r3, [r7, #4]
  87 002a DA73     		strb	r2, [r3, #15]
  88              	.L4:
 101:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
 102:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 103:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   /* points to packet payload, which starts with an Ethernet header */
 104:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   ethhdr = (struct eth_hdr *)p->payload;
  89              		.loc 1 104 10
  90 002c 7B68     		ldr	r3, [r7, #4]
  91 002e 5B68     		ldr	r3, [r3, #4]
  92 0030 3B61     		str	r3, [r7, #16]
 105:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE,
 106:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****               ("ethernet_input: dest:%"X8_F":%"X8_F":%"X8_F":%"X8_F":%"X8_F":%"X8_F", src:%"X8_F":%
 107:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                (unsigned char)ethhdr->dest.addr[0], (unsigned char)ethhdr->dest.addr[1], (unsigned 
 108:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                (unsigned char)ethhdr->dest.addr[3], (unsigned char)ethhdr->dest.addr[4], (unsigned 
 109:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                (unsigned char)ethhdr->src.addr[0],  (unsigned char)ethhdr->src.addr[1],  (unsigned 
 110:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                (unsigned char)ethhdr->src.addr[3],  (unsigned char)ethhdr->src.addr[4],  (unsigned 
 111:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                lwip_htons(ethhdr->type)));
 112:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 113:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   type = ethhdr->type;
  93              		.loc 1 113 8
  94 0032 3B69     		ldr	r3, [r7, #16]
  95 0034 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
  96 0036 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
  97 0038 1B02     		lsls	r3, r3, #8
  98 003a 1343     		orrs	r3, r3, r2
  99 003c FB81     		strh	r3, [r7, #14]	@ movhi
 114:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if ETHARP_SUPPORT_VLAN
 115:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   if (type == PP_HTONS(ETHTYPE_VLAN)) {
 116:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     struct eth_vlan_hdr *vlan = (struct eth_vlan_hdr *)(((char *)ethhdr) + SIZEOF_ETH_HDR);
 117:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     next_hdr_offset = SIZEOF_ETH_HDR + SIZEOF_VLAN_HDR;
 118:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (p->len <= SIZEOF_ETH_HDR + SIZEOF_VLAN_HDR) {
 119:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* a packet with only an ethernet/vlan header (or less) is not valid for us */
 120:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       ETHARP_STATS_INC(etharp.proterr);
 121:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       ETHARP_STATS_INC(etharp.drop);
 122:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       MIB2_STATS_NETIF_INC(netif, ifinerrors);
 123:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       goto free_and_return;
 124:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 125:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if defined(LWIP_HOOK_VLAN_CHECK) || defined(ETHARP_VLAN_CHECK) || defined(ETHARP_VLAN_CHECK_FN) /*
 126:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #ifdef LWIP_HOOK_VLAN_CHECK
 127:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (!LWIP_HOOK_VLAN_CHECK(netif, ethhdr, vlan)) {
 128:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #elif defined(ETHARP_VLAN_CHECK_FN)
 129:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (!ETHARP_VLAN_CHECK_FN(ethhdr, vlan)) {
 130:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #elif defined(ETHARP_VLAN_CHECK)
 131:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (VLAN_ID(vlan) != ETHARP_VLAN_CHECK) {
 132:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif
 133:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* silently ignore this packet: not for our VLAN */
ARM GAS  /tmp/cc34Vz3c.s 			page 5


 134:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       pbuf_free(p);
 135:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       return ERR_OK;
 136:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 137:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* defined(LWIP_HOOK_VLAN_CHECK) || defined(ETHARP_VLAN_CHECK) || defined(ETHARP_VLAN_CHECK_
 138:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     type = vlan->tpid;
 139:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
 140:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* ETHARP_SUPPORT_VLAN */
 141:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 142:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_ARP_FILTER_NETIF
 143:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   netif = LWIP_ARP_FILTER_NETIF_FN(p, netif, lwip_htons(type));
 144:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_ARP_FILTER_NETIF*/
 145:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 146:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   if (ethhdr->dest.addr[0] & 1) {
 100              		.loc 1 146 24
 101 003e 3B69     		ldr	r3, [r7, #16]
 102 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103              		.loc 1 146 28
 104 0042 03F00103 		and	r3, r3, #1
 105              		.loc 1 146 6
 106 0046 002B     		cmp	r3, #0
 107 0048 23D0     		beq	.L5
 147:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     /* this might be a multicast or broadcast packet */
 148:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (ethhdr->dest.addr[0] == LL_IP4_MULTICAST_ADDR_0) {
 108              		.loc 1 148 26
 109 004a 3B69     		ldr	r3, [r7, #16]
 110 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 111              		.loc 1 148 8
 112 004e 012B     		cmp	r3, #1
 113 0050 0FD1     		bne	.L6
 149:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_IPV4
 150:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if ((ethhdr->dest.addr[1] == LL_IP4_MULTICAST_ADDR_1) &&
 114              		.loc 1 150 29
 115 0052 3B69     		ldr	r3, [r7, #16]
 116 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 117              		.loc 1 150 10
 118 0056 002B     		cmp	r3, #0
 119 0058 1BD1     		bne	.L5
 151:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****           (ethhdr->dest.addr[2] == LL_IP4_MULTICAST_ADDR_2)) {
 120              		.loc 1 151 29 discriminator 1
 121 005a 3B69     		ldr	r3, [r7, #16]
 122 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 150:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****           (ethhdr->dest.addr[2] == LL_IP4_MULTICAST_ADDR_2)) {
 123              		.loc 1 150 61 discriminator 1
 124 005e 5E2B     		cmp	r3, #94
 125 0060 17D1     		bne	.L5
 152:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         /* mark the pbuf as link-layer multicast */
 153:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         p->flags |= PBUF_FLAG_LLMCAST;
 126              		.loc 1 153 18
 127 0062 7B68     		ldr	r3, [r7, #4]
 128 0064 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 129 0066 43F01003 		orr	r3, r3, #16
 130 006a DAB2     		uxtb	r2, r3
 131 006c 7B68     		ldr	r3, [r7, #4]
 132 006e 5A73     		strb	r2, [r3, #13]
 133 0070 0FE0     		b	.L5
 134              	.L6:
 154:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
ARM GAS  /tmp/cc34Vz3c.s 			page 6


 155:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_IPV4 */
 156:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 157:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_IPV6
 158:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     else if ((ethhdr->dest.addr[0] == LL_IP6_MULTICAST_ADDR_0) &&
 159:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****              (ethhdr->dest.addr[1] == LL_IP6_MULTICAST_ADDR_1)) {
 160:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* mark the pbuf as link-layer multicast */
 161:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       p->flags |= PBUF_FLAG_LLMCAST;
 162:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 163:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_IPV6 */
 164:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     else if (eth_addr_cmp(&ethhdr->dest, &ethbroadcast)) {
 135              		.loc 1 164 14
 136 0072 3B69     		ldr	r3, [r7, #16]
 137 0074 0622     		movs	r2, #6
 138 0076 2849     		ldr	r1, .L22
 139 0078 1846     		mov	r0, r3
 140 007a FFF7FEFF 		bl	memcmp
 141 007e 0346     		mov	r3, r0
 142              		.loc 1 164 13
 143 0080 002B     		cmp	r3, #0
 144 0082 06D1     		bne	.L5
 165:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* mark the pbuf as link-layer broadcast */
 166:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       p->flags |= PBUF_FLAG_LLBCAST;
 145              		.loc 1 166 16
 146 0084 7B68     		ldr	r3, [r7, #4]
 147 0086 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 148 0088 43F00803 		orr	r3, r3, #8
 149 008c DAB2     		uxtb	r2, r3
 150 008e 7B68     		ldr	r3, [r7, #4]
 151 0090 5A73     		strb	r2, [r3, #13]
 152              	.L5:
 167:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 168:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
 169:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 170:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   switch (type) {
 153              		.loc 1 170 3
 154 0092 FB89     		ldrh	r3, [r7, #14]
 155 0094 082B     		cmp	r3, #8
 156 0096 03D0     		beq	.L8
 157 0098 B3F5C16F 		cmp	r3, #1544
 158 009c 14D0     		beq	.L9
 171:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_IPV4 && LWIP_ARP
 172:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     /* IP packet? */
 173:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     case PP_HTONS(ETHTYPE_IP):
 174:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if (!(netif->flags & NETIF_FLAG_ETHARP)) {
 175:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 176:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 177:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* skip Ethernet header (min. size checked above) */
 178:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if (pbuf_remove_header(p, next_hdr_offset)) {
 179:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 180:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                     ("ethernet_input: IPv4 packet dropped, too short (%"U16_F"/%"U16_F")\n",
 181:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                      p->tot_len, next_hdr_offset));
 182:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("Can't move over header in packet"));
 183:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 184:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       } else {
 185:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         /* pass to IP layer */
 186:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         ip4_input(p, netif);
 187:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
ARM GAS  /tmp/cc34Vz3c.s 			page 7


 188:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       break;
 189:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 190:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     case PP_HTONS(ETHTYPE_ARP):
 191:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if (!(netif->flags & NETIF_FLAG_ETHARP)) {
 192:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 193:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 194:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* skip Ethernet header (min. size checked above) */
 195:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if (pbuf_remove_header(p, next_hdr_offset)) {
 196:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 197:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                     ("ethernet_input: ARP response packet dropped, too short (%"U16_F"/%"U16_F")\n"
 198:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                      p->tot_len, next_hdr_offset));
 199:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("Can't move over header in packet"));
 200:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         ETHARP_STATS_INC(etharp.lenerr);
 201:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         ETHARP_STATS_INC(etharp.drop);
 202:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 203:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       } else {
 204:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         /* pass p to ARP module */
 205:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         etharp_input(p, netif);
 206:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 207:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       break;
 208:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_IPV4 && LWIP_ARP */
 209:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if PPPOE_SUPPORT
 210:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     case PP_HTONS(ETHTYPE_PPPOEDISC): /* PPP Over Ethernet Discovery Stage */
 211:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       pppoe_disc_input(netif, p);
 212:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       break;
 213:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 214:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     case PP_HTONS(ETHTYPE_PPPOE): /* PPP Over Ethernet Session Stage */
 215:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       pppoe_data_input(netif, p);
 216:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       break;
 217:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* PPPOE_SUPPORT */
 218:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 219:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if LWIP_IPV6
 220:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     case PP_HTONS(ETHTYPE_IPV6): /* IPv6 */
 221:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       /* skip Ethernet header */
 222:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if ((p->len < next_hdr_offset) || pbuf_remove_header(p, next_hdr_offset)) {
 223:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 224:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                     ("ethernet_input: IPv6 packet dropped, too short (%"U16_F"/%"U16_F")\n",
 225:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                      p->tot_len, next_hdr_offset));
 226:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 227:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       } else {
 228:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         /* pass to IPv6 layer */
 229:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         ip6_input(p, netif);
 230:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 231:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       break;
 232:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_IPV6 */
 233:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 234:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     default:
 235:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #ifdef LWIP_HOOK_UNKNOWN_ETH_PROTOCOL
 236:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       if (LWIP_HOOK_UNKNOWN_ETH_PROTOCOL(p, netif) == ERR_OK) {
 237:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         break;
 238:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 239:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif
 240:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       ETHARP_STATS_INC(etharp.proterr);
 241:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       ETHARP_STATS_INC(etharp.drop);
 242:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       MIB2_STATS_NETIF_INC(netif, ifinunknownprotos);
 243:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       goto free_and_return;
 159              		.loc 1 243 7
ARM GAS  /tmp/cc34Vz3c.s 			page 8


 160 009e 32E0     		b	.L3
 161              	.L8:
 174:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 162              		.loc 1 174 18
 163 00a0 3B68     		ldr	r3, [r7]
 164 00a2 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 174:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 165              		.loc 1 174 26
 166 00a6 03F00803 		and	r3, r3, #8
 174:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 167              		.loc 1 174 10
 168 00aa 002B     		cmp	r3, #0
 169 00ac 24D0     		beq	.L18
 178:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 170              		.loc 1 178 11
 171 00ae FB8A     		ldrh	r3, [r7, #22]
 172 00b0 1946     		mov	r1, r3
 173 00b2 7868     		ldr	r0, [r7, #4]
 174 00b4 FFF7FEFF 		bl	pbuf_remove_header
 175 00b8 0346     		mov	r3, r0
 178:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 176              		.loc 1 178 10
 177 00ba 002B     		cmp	r3, #0
 178 00bc 1ED1     		bne	.L19
 186:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 179              		.loc 1 186 9
 180 00be 3968     		ldr	r1, [r7]
 181 00c0 7868     		ldr	r0, [r7, #4]
 182 00c2 FFF7FEFF 		bl	ip4_input
 188:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 183              		.loc 1 188 7
 184 00c6 13E0     		b	.L13
 185              	.L9:
 191:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 186              		.loc 1 191 18
 187 00c8 3B68     		ldr	r3, [r7]
 188 00ca 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 191:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 189              		.loc 1 191 26
 190 00ce 03F00803 		and	r3, r3, #8
 191:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         goto free_and_return;
 191              		.loc 1 191 10
 192 00d2 002B     		cmp	r3, #0
 193 00d4 14D0     		beq	.L20
 195:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 194              		.loc 1 195 11
 195 00d6 FB8A     		ldrh	r3, [r7, #22]
 196 00d8 1946     		mov	r1, r3
 197 00da 7868     		ldr	r0, [r7, #4]
 198 00dc FFF7FEFF 		bl	pbuf_remove_header
 199 00e0 0346     		mov	r3, r0
 195:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****         LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
 200              		.loc 1 195 10
 201 00e2 002B     		cmp	r3, #0
 202 00e4 0ED1     		bne	.L21
 205:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 203              		.loc 1 205 9
ARM GAS  /tmp/cc34Vz3c.s 			page 9


 204 00e6 3968     		ldr	r1, [r7]
 205 00e8 7868     		ldr	r0, [r7, #4]
 206 00ea FFF7FEFF 		bl	etharp_input
 207:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* LWIP_IPV4 && LWIP_ARP */
 207              		.loc 1 207 7
 208 00ee 00BF     		nop
 209              	.L13:
 244:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
 245:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 246:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   /* This means the pbuf is freed or consumed,
 247:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****      so the caller doesn't have to free it again */
 248:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   return ERR_OK;
 210              		.loc 1 248 10
 211 00f0 0023     		movs	r3, #0
 212 00f2 0CE0     		b	.L16
 213              	.L17:
  96:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
 214              		.loc 1 96 5
 215 00f4 00BF     		nop
 216 00f6 06E0     		b	.L3
 217              	.L18:
 175:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 218              		.loc 1 175 9
 219 00f8 00BF     		nop
 220 00fa 04E0     		b	.L3
 221              	.L19:
 183:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       } else {
 222              		.loc 1 183 9
 223 00fc 00BF     		nop
 224 00fe 02E0     		b	.L3
 225              	.L20:
 192:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       }
 226              		.loc 1 192 9
 227 0100 00BF     		nop
 228 0102 00E0     		b	.L3
 229              	.L21:
 202:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       } else {
 230              		.loc 1 202 9
 231 0104 00BF     		nop
 232              	.L3:
 249:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 250:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** free_and_return:
 251:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   pbuf_free(p);
 233              		.loc 1 251 3
 234 0106 7868     		ldr	r0, [r7, #4]
 235 0108 FFF7FEFF 		bl	pbuf_free
 252:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   return ERR_OK;
 236              		.loc 1 252 10
 237 010c 0023     		movs	r3, #0
 238              	.L16:
 253:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** }
 239              		.loc 1 253 1
 240 010e 1846     		mov	r0, r3
 241 0110 1837     		adds	r7, r7, #24
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 8
 244 0112 BD46     		mov	sp, r7
ARM GAS  /tmp/cc34Vz3c.s 			page 10


 245              	.LCFI4:
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0114 80BD     		pop	{r7, pc}
 249              	.L23:
 250 0116 00BF     		.align	2
 251              	.L22:
 252 0118 00000000 		.word	ethbroadcast
 253              		.cfi_endproc
 254              	.LFE133:
 256              		.section	.rodata
 257              		.align	2
 258              	.LC0:
 259 0000 4D696464 		.ascii	"Middlewares/Third_Party/LwIP/src/netif/ethernet.c\000"
 259      6C657761 
 259      7265732F 
 259      54686972 
 259      645F5061 
 260 0032 0000     		.align	2
 261              	.LC1:
 262 0034 6E657469 		.ascii	"netif->hwaddr_len must be 6 for ethernet_output!\000"
 262      662D3E68 
 262      77616464 
 262      725F6C65 
 262      6E206D75 
 263 0065 000000   		.align	2
 264              	.LC2:
 265 0068 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 265      7274696F 
 265      6E202225 
 265      73222066 
 265      61696C65 
 266              		.section	.text.ethernet_output,"ax",%progbits
 267              		.align	1
 268              		.global	ethernet_output
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	ethernet_output:
 275              	.LFB134:
 254:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 255:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** /**
 256:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @ingroup ethernet
 257:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * Send an ethernet packet on the network using netif->linkoutput().
 258:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * The ethernet header is filled in before sending.
 259:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
 260:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @see LWIP_HOOK_VLAN_SET
 261:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  *
 262:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param netif the lwIP network interface on which to send the packet
 263:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param p the packet to send. pbuf layer must be @ref PBUF_LINK.
 264:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param src the source MAC address to be copied into the ethernet header
 265:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param dst the destination MAC address to be copied into the ethernet header
 266:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @param eth_type ethernet type (@ref lwip_ieee_eth_type)
 267:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  * @return ERR_OK if the packet was sent, any other err_t on failure
 268:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****  */
 269:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** err_t
ARM GAS  /tmp/cc34Vz3c.s 			page 11


 270:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** ethernet_output(struct netif * netif, struct pbuf * p,
 271:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                 const struct eth_addr * src, const struct eth_addr * dst,
 272:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****                 u16_t eth_type) {
 276              		.loc 1 272 33
 277              		.cfi_startproc
 278              		@ args = 4, pretend = 0, frame = 24
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 86B0     		sub	sp, sp, #24
 286              	.LCFI6:
 287              		.cfi_def_cfa_offset 32
 288 0004 00AF     		add	r7, sp, #0
 289              	.LCFI7:
 290              		.cfi_def_cfa_register 7
 291 0006 F860     		str	r0, [r7, #12]
 292 0008 B960     		str	r1, [r7, #8]
 293 000a 7A60     		str	r2, [r7, #4]
 294 000c 3B60     		str	r3, [r7]
 273:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   struct eth_hdr *ethhdr;
 274:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   u16_t eth_type_be = lwip_htons(eth_type);
 295              		.loc 1 274 23
 296 000e 3B8C     		ldrh	r3, [r7, #32]
 297 0010 1846     		mov	r0, r3
 298 0012 FFF7FEFF 		bl	lwip_htons
 299 0016 0346     		mov	r3, r0
 300 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 275:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 276:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #if ETHARP_SUPPORT_VLAN && defined(LWIP_HOOK_VLAN_SET)
 277:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   s32_t vlan_prio_vid = LWIP_HOOK_VLAN_SET(netif, p, src, dst, eth_type);
 278:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   if (vlan_prio_vid >= 0) {
 279:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     struct eth_vlan_hdr *vlanhdr;
 280:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 281:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     LWIP_ASSERT("prio_vid must be <= 0xFFFF", vlan_prio_vid <= 0xFFFF);
 282:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 283:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (pbuf_add_header(p, SIZEOF_ETH_HDR + SIZEOF_VLAN_HDR) != 0) {
 284:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       goto pbuf_header_failed;
 285:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 286:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     vlanhdr = (struct eth_vlan_hdr *)(((u8_t *)p->payload) + SIZEOF_ETH_HDR);
 287:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     vlanhdr->tpid     = eth_type_be;
 288:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     vlanhdr->prio_vid = lwip_htons((u16_t)vlan_prio_vid);
 289:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 290:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     eth_type_be = PP_HTONS(ETHTYPE_VLAN);
 291:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   } else
 292:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** #endif /* ETHARP_SUPPORT_VLAN && defined(LWIP_HOOK_VLAN_SET) */
 293:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   {
 294:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     if (pbuf_add_header(p, SIZEOF_ETH_HDR) != 0) {
 301              		.loc 1 294 9
 302 001a 0E21     		movs	r1, #14
 303 001c B868     		ldr	r0, [r7, #8]
 304 001e FFF7FEFF 		bl	pbuf_add_header
 305 0022 0346     		mov	r3, r0
 306              		.loc 1 294 8
 307 0024 002B     		cmp	r3, #0
ARM GAS  /tmp/cc34Vz3c.s 			page 12


 308 0026 25D1     		bne	.L30
 295:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****       goto pbuf_header_failed;
 296:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 297:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   }
 298:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 299:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LWIP_ASSERT_CORE_LOCKED();
 300:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 301:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   ethhdr = (struct eth_hdr *)p->payload;
 309              		.loc 1 301 10
 310 0028 BB68     		ldr	r3, [r7, #8]
 311 002a 5B68     		ldr	r3, [r3, #4]
 312 002c 3B61     		str	r3, [r7, #16]
 302:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   ethhdr->type = eth_type_be;
 313              		.loc 1 302 16
 314 002e 3B69     		ldr	r3, [r7, #16]
 315 0030 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 316 0032 9A81     		strh	r2, [r3, #12]	@ unaligned
 303:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   SMEMCPY(&ethhdr->dest, dst, ETH_HWADDR_LEN);
 317              		.loc 1 303 3
 318 0034 3B69     		ldr	r3, [r7, #16]
 319 0036 0622     		movs	r2, #6
 320 0038 3968     		ldr	r1, [r7]
 321 003a 1846     		mov	r0, r3
 322 003c FFF7FEFF 		bl	memcpy
 304:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   SMEMCPY(&ethhdr->src,  src, ETH_HWADDR_LEN);
 323              		.loc 1 304 3
 324 0040 3B69     		ldr	r3, [r7, #16]
 325 0042 0633     		adds	r3, r3, #6
 326 0044 0622     		movs	r2, #6
 327 0046 7968     		ldr	r1, [r7, #4]
 328 0048 1846     		mov	r0, r3
 329 004a FFF7FEFF 		bl	memcpy
 305:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 306:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LWIP_ASSERT("netif->hwaddr_len must be 6 for ethernet_output!",
 330              		.loc 1 306 3
 331 004e FB68     		ldr	r3, [r7, #12]
 332 0050 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 333 0054 062B     		cmp	r3, #6
 334 0056 06D0     		beq	.L27
 335              		.loc 1 306 3 is_stmt 0 discriminator 1
 336 0058 0A4B     		ldr	r3, .L31
 337 005a 40F23312 		movw	r2, #307
 338 005e 0A49     		ldr	r1, .L31+4
 339 0060 0A48     		ldr	r0, .L31+8
 340 0062 FFF7FEFF 		bl	printf
 341              	.L27:
 307:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****               (netif->hwaddr_len == ETH_HWADDR_LEN));
 308:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE,
 309:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****               ("ethernet_output: sending packet %p\n", (void *)p));
 310:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 311:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   /* send the packet */
 312:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   return netif->linkoutput(netif, p);
 342              		.loc 1 312 15 is_stmt 1
 343 0066 FB68     		ldr	r3, [r7, #12]
 344 0068 9B69     		ldr	r3, [r3, #24]
 345              		.loc 1 312 10
 346 006a B968     		ldr	r1, [r7, #8]
ARM GAS  /tmp/cc34Vz3c.s 			page 13


 347 006c F868     		ldr	r0, [r7, #12]
 348 006e 9847     		blx	r3
 349              	.LVL0:
 350 0070 0346     		mov	r3, r0
 351 0072 02E0     		b	.L28
 352              	.L30:
 295:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****     }
 353              		.loc 1 295 7
 354 0074 00BF     		nop
 355              	.L26:
 313:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** 
 314:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** pbuf_header_failed:
 315:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
 316:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****               ("ethernet_output: could not allocate room for header.\n"));
 317:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   LINK_STATS_INC(link.lenerr);
 318:Middlewares/Third_Party/LwIP/src/netif/ethernet.c ****   return ERR_BUF;
 356              		.loc 1 318 10
 357 0076 6FF00103 		mvn	r3, #1
 358              	.L28:
 319:Middlewares/Third_Party/LwIP/src/netif/ethernet.c **** }
 359              		.loc 1 319 1
 360 007a 1846     		mov	r0, r3
 361 007c 1837     		adds	r7, r7, #24
 362              	.LCFI8:
 363              		.cfi_def_cfa_offset 8
 364 007e BD46     		mov	sp, r7
 365              	.LCFI9:
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 0080 80BD     		pop	{r7, pc}
 369              	.L32:
 370 0082 00BF     		.align	2
 371              	.L31:
 372 0084 00000000 		.word	.LC0
 373 0088 34000000 		.word	.LC1
 374 008c 68000000 		.word	.LC2
 375              		.cfi_endproc
 376              	.LFE134:
 378              		.text
 379              	.Letext0:
 380              		.file 2 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_typ
 381              		.file 3 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 382              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 383              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 384              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 385              		.file 7 "/home/mego-ros2/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stddef
 386              		.file 8 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 387              		.file 9 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 388              		.file 10 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 389              		.file 11 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/stdlib.h"
 390              		.file 12 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 391              		.file 13 "/home/mego-ros2/microros_ws/firmware/toolchain/arm-none-eabi/include/ctype.h"
 392              		.file 14 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 393              		.file 15 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 394              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 395              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 396              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
ARM GAS  /tmp/cc34Vz3c.s 			page 14


 397              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 398              		.file 20 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 399              		.file 21 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ieee.h"
 400              		.file 22 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 401              		.file 23 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 402              		.file 24 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 403              		.file 25 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
ARM GAS  /tmp/cc34Vz3c.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ethernet.c
     /tmp/cc34Vz3c.s:22     .rodata.ethbroadcast:0000000000000000 ethbroadcast
     /tmp/cc34Vz3c.s:19     .rodata.ethbroadcast:0000000000000000 $d
     /tmp/cc34Vz3c.s:34     .rodata.ethzero:0000000000000000 ethzero
     /tmp/cc34Vz3c.s:31     .rodata.ethzero:0000000000000000 $d
     /tmp/cc34Vz3c.s:37     .text.ethernet_input:0000000000000000 $t
     /tmp/cc34Vz3c.s:45     .text.ethernet_input:0000000000000000 ethernet_input
     /tmp/cc34Vz3c.s:252    .text.ethernet_input:0000000000000118 $d
     /tmp/cc34Vz3c.s:257    .rodata:0000000000000000 $d
     /tmp/cc34Vz3c.s:267    .text.ethernet_output:0000000000000000 $t
     /tmp/cc34Vz3c.s:274    .text.ethernet_output:0000000000000000 ethernet_output
     /tmp/cc34Vz3c.s:372    .text.ethernet_output:0000000000000084 $d

UNDEFINED SYMBOLS
memcmp
pbuf_remove_header
ip4_input
etharp_input
pbuf_free
lwip_htons
pbuf_add_header
memcpy
printf
