ARM GAS  /tmp/ccdcqp02.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccdcqp02.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern ETH_HandleTypeDef heth;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  63:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  64:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  72:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32f4xx_it.c **** /**
  74:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Core/Src/stm32f4xx_it.c ****   */
  76:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  77:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 77 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccdcqp02.s 			page 3


  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  41              	.L2:
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f4xx_it.c **** 
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f4xx_it.c ****   while (1)
  42              		.loc 1 82 9 discriminator 1
  43 0004 FEE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE130:
  47              		.section	.text.HardFault_Handler,"ax",%progbits
  48              		.align	1
  49              		.global	HardFault_Handler
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	HardFault_Handler:
  56              	.LFB131:
  83:Core/Src/stm32f4xx_it.c ****   {
  84:Core/Src/stm32f4xx_it.c ****   }
  85:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32f4xx_it.c **** }
  87:Core/Src/stm32f4xx_it.c **** 
  88:Core/Src/stm32f4xx_it.c **** /**
  89:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Core/Src/stm32f4xx_it.c ****   */
  91:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  92:Core/Src/stm32f4xx_it.c **** {
  57              		.loc 1 92 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              	.LCFI2:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI3:
  68              		.cfi_def_cfa_register 7
  69              	.L4:
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c **** 
  95:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****   while (1)
  70              		.loc 1 96 9 discriminator 1
  71 0004 FEE7     		b	.L4
  72              		.cfi_endproc
  73              	.LFE131:
  75              		.section	.text.MemManage_Handler,"ax",%progbits
  76              		.align	1
  77              		.global	MemManage_Handler
  78              		.syntax unified
  79              		.thumb
ARM GAS  /tmp/ccdcqp02.s 			page 4


  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	MemManage_Handler:
  84              	.LFB132:
  97:Core/Src/stm32f4xx_it.c ****   {
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****   }
 101:Core/Src/stm32f4xx_it.c **** }
 102:Core/Src/stm32f4xx_it.c **** 
 103:Core/Src/stm32f4xx_it.c **** /**
 104:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 105:Core/Src/stm32f4xx_it.c ****   */
 106:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 107:Core/Src/stm32f4xx_it.c **** {
  85              		.loc 1 107 1
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90 0000 80B4     		push	{r7}
  91              	.LCFI4:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 7, -4
  94 0002 00AF     		add	r7, sp, #0
  95              	.LCFI5:
  96              		.cfi_def_cfa_register 7
  97              	.L6:
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c **** 
 110:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****   while (1)
  98              		.loc 1 111 9 discriminator 1
  99 0004 FEE7     		b	.L6
 100              		.cfi_endproc
 101              	.LFE132:
 103              		.section	.text.BusFault_Handler,"ax",%progbits
 104              		.align	1
 105              		.global	BusFault_Handler
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	BusFault_Handler:
 112              	.LFB133:
 112:Core/Src/stm32f4xx_it.c ****   {
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****   }
 116:Core/Src/stm32f4xx_it.c **** }
 117:Core/Src/stm32f4xx_it.c **** 
 118:Core/Src/stm32f4xx_it.c **** /**
 119:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 120:Core/Src/stm32f4xx_it.c ****   */
 121:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 122:Core/Src/stm32f4xx_it.c **** {
 113              		.loc 1 122 1
ARM GAS  /tmp/ccdcqp02.s 			page 5


 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              	.LCFI6:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 7, -4
 122 0002 00AF     		add	r7, sp, #0
 123              	.LCFI7:
 124              		.cfi_def_cfa_register 7
 125              	.L8:
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c **** 
 125:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****   while (1)
 126              		.loc 1 126 9 discriminator 1
 127 0004 FEE7     		b	.L8
 128              		.cfi_endproc
 129              	.LFE133:
 131              		.section	.text.UsageFault_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	UsageFault_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	UsageFault_Handler:
 140              	.LFB134:
 127:Core/Src/stm32f4xx_it.c ****   {
 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****   }
 131:Core/Src/stm32f4xx_it.c **** }
 132:Core/Src/stm32f4xx_it.c **** 
 133:Core/Src/stm32f4xx_it.c **** /**
 134:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 135:Core/Src/stm32f4xx_it.c ****   */
 136:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 137:Core/Src/stm32f4xx_it.c **** {
 141              		.loc 1 137 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI8:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 00AF     		add	r7, sp, #0
 151              	.LCFI9:
 152              		.cfi_def_cfa_register 7
 153              	.L10:
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c **** 
 140:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  /tmp/ccdcqp02.s 			page 6


 154              		.loc 1 141 9 discriminator 1
 155 0004 FEE7     		b	.L10
 156              		.cfi_endproc
 157              	.LFE134:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB135:
 142:Core/Src/stm32f4xx_it.c ****   {
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****   }
 146:Core/Src/stm32f4xx_it.c **** }
 147:Core/Src/stm32f4xx_it.c **** 
 148:Core/Src/stm32f4xx_it.c **** /**
 149:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 150:Core/Src/stm32f4xx_it.c ****   */
 151:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 152:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 152 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI10:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 00AF     		add	r7, sp, #0
 179              	.LCFI11:
 180              		.cfi_def_cfa_register 7
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 159:Core/Src/stm32f4xx_it.c **** }
 181              		.loc 1 159 1
 182 0004 00BF     		nop
 183 0006 BD46     		mov	sp, r7
 184              	.LCFI12:
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0008 5DF8047B 		ldr	r7, [sp], #4
 188              	.LCFI13:
 189              		.cfi_restore 7
 190              		.cfi_def_cfa_offset 0
 191 000c 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE135:
 195              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccdcqp02.s 			page 7


 196              		.align	1
 197              		.global	EXTI0_IRQHandler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	EXTI0_IRQHandler:
 204              	.LFB136:
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 163:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 164:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 165:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 166:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 167:Core/Src/stm32f4xx_it.c **** 
 168:Core/Src/stm32f4xx_it.c **** /**
 169:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 170:Core/Src/stm32f4xx_it.c ****   */
 171:Core/Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 172:Core/Src/stm32f4xx_it.c **** {
 205              		.loc 1 172 1
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              	.LCFI14:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 00AF     		add	r7, sp, #0
 215              	.LCFI15:
 216              		.cfi_def_cfa_register 7
 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 174:Core/Src/stm32f4xx_it.c **** 
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 176:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 217              		.loc 1 176 3
 218 0004 0120     		movs	r0, #1
 219 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 180:Core/Src/stm32f4xx_it.c **** }
 220              		.loc 1 180 1
 221 000a 00BF     		nop
 222 000c 80BD     		pop	{r7, pc}
 223              		.cfi_endproc
 224              	.LFE136:
 226              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	EXTI1_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	EXTI1_IRQHandler:
ARM GAS  /tmp/ccdcqp02.s 			page 8


 235              	.LFB137:
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c **** /**
 183:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line1 interrupt.
 184:Core/Src/stm32f4xx_it.c ****   */
 185:Core/Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(void)
 186:Core/Src/stm32f4xx_it.c **** {
 236              		.loc 1 186 1
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240 0000 80B5     		push	{r7, lr}
 241              	.LCFI16:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 00AF     		add	r7, sp, #0
 246              	.LCFI17:
 247              		.cfi_def_cfa_register 7
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c **** 
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 190:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 248              		.loc 1 190 3
 249 0004 0220     		movs	r0, #2
 250 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 194:Core/Src/stm32f4xx_it.c **** }
 251              		.loc 1 194 1
 252 000a 00BF     		nop
 253 000c 80BD     		pop	{r7, pc}
 254              		.cfi_endproc
 255              	.LFE137:
 257              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 258              		.align	1
 259              		.global	EXTI2_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv4-sp-d16
 265              	EXTI2_IRQHandler:
 266              	.LFB138:
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c **** /**
 197:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line2 interrupt.
 198:Core/Src/stm32f4xx_it.c ****   */
 199:Core/Src/stm32f4xx_it.c **** void EXTI2_IRQHandler(void)
 200:Core/Src/stm32f4xx_it.c **** {
 267              		.loc 1 200 1
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              	.LCFI18:
 273              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccdcqp02.s 			page 9


 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 00AF     		add	r7, sp, #0
 277              	.LCFI19:
 278              		.cfi_def_cfa_register 7
 201:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 202:Core/Src/stm32f4xx_it.c **** 
 203:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 204:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 279              		.loc 1 204 3
 280 0004 0420     		movs	r0, #4
 281 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 205:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 208:Core/Src/stm32f4xx_it.c **** }
 282              		.loc 1 208 1
 283 000a 00BF     		nop
 284 000c 80BD     		pop	{r7, pc}
 285              		.cfi_endproc
 286              	.LFE138:
 288              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	EXTI3_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	EXTI3_IRQHandler:
 297              	.LFB139:
 209:Core/Src/stm32f4xx_it.c **** 
 210:Core/Src/stm32f4xx_it.c **** /**
 211:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 212:Core/Src/stm32f4xx_it.c ****   */
 213:Core/Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 214:Core/Src/stm32f4xx_it.c **** {
 298              		.loc 1 214 1
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              	.LCFI20:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 00AF     		add	r7, sp, #0
 308              	.LCFI21:
 309              		.cfi_def_cfa_register 7
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 216:Core/Src/stm32f4xx_it.c **** 
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 218:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 310              		.loc 1 218 3
 311 0004 0820     		movs	r0, #8
 312 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 219:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 220:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccdcqp02.s 			page 10


 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 222:Core/Src/stm32f4xx_it.c **** }
 313              		.loc 1 222 1
 314 000a 00BF     		nop
 315 000c 80BD     		pop	{r7, pc}
 316              		.cfi_endproc
 317              	.LFE139:
 319              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 320              		.align	1
 321              		.global	EXTI4_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	EXTI4_IRQHandler:
 328              	.LFB140:
 223:Core/Src/stm32f4xx_it.c **** 
 224:Core/Src/stm32f4xx_it.c **** /**
 225:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 226:Core/Src/stm32f4xx_it.c ****   */
 227:Core/Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 228:Core/Src/stm32f4xx_it.c **** {
 329              		.loc 1 228 1
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              	.LCFI22:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 00AF     		add	r7, sp, #0
 339              	.LCFI23:
 340              		.cfi_def_cfa_register 7
 229:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 230:Core/Src/stm32f4xx_it.c **** 
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 232:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 341              		.loc 1 232 3
 342 0004 1020     		movs	r0, #16
 343 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 236:Core/Src/stm32f4xx_it.c **** }
 344              		.loc 1 236 1
 345 000a 00BF     		nop
 346 000c 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE140:
 350              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	TIM1_UP_TIM10_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccdcqp02.s 			page 11


 358              	TIM1_UP_TIM10_IRQHandler:
 359              	.LFB141:
 237:Core/Src/stm32f4xx_it.c **** 
 238:Core/Src/stm32f4xx_it.c **** /**
 239:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 240:Core/Src/stm32f4xx_it.c ****   */
 241:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 242:Core/Src/stm32f4xx_it.c **** {
 360              		.loc 1 242 1
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364 0000 80B5     		push	{r7, lr}
 365              	.LCFI24:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 00AF     		add	r7, sp, #0
 370              	.LCFI25:
 371              		.cfi_def_cfa_register 7
 243:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 244:Core/Src/stm32f4xx_it.c **** 
 245:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 246:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 372              		.loc 1 246 3
 373 0004 0248     		ldr	r0, .L18
 374 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 247:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 248:Core/Src/stm32f4xx_it.c **** 
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 250:Core/Src/stm32f4xx_it.c **** }
 375              		.loc 1 250 1
 376 000a 00BF     		nop
 377 000c 80BD     		pop	{r7, pc}
 378              	.L19:
 379 000e 00BF     		.align	2
 380              	.L18:
 381 0010 00000000 		.word	htim1
 382              		.cfi_endproc
 383              	.LFE141:
 385              		.section	.text.USART1_IRQHandler,"ax",%progbits
 386              		.align	1
 387              		.global	USART1_IRQHandler
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv4-sp-d16
 393              	USART1_IRQHandler:
 394              	.LFB142:
 251:Core/Src/stm32f4xx_it.c **** 
 252:Core/Src/stm32f4xx_it.c **** /**
 253:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 254:Core/Src/stm32f4xx_it.c ****   */
 255:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 256:Core/Src/stm32f4xx_it.c **** {
 395              		.loc 1 256 1
 396              		.cfi_startproc
ARM GAS  /tmp/ccdcqp02.s 			page 12


 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              	.LCFI26:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 00AF     		add	r7, sp, #0
 405              	.LCFI27:
 406              		.cfi_def_cfa_register 7
 257:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 258:Core/Src/stm32f4xx_it.c **** 
 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 260:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 407              		.loc 1 260 3
 408 0004 0248     		ldr	r0, .L21
 409 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 261:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 262:Core/Src/stm32f4xx_it.c **** 
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 264:Core/Src/stm32f4xx_it.c **** }
 410              		.loc 1 264 1
 411 000a 00BF     		nop
 412 000c 80BD     		pop	{r7, pc}
 413              	.L22:
 414 000e 00BF     		.align	2
 415              	.L21:
 416 0010 00000000 		.word	huart1
 417              		.cfi_endproc
 418              	.LFE142:
 420              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 421              		.align	1
 422              		.global	TIM6_DAC_IRQHandler
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	TIM6_DAC_IRQHandler:
 429              	.LFB143:
 265:Core/Src/stm32f4xx_it.c **** 
 266:Core/Src/stm32f4xx_it.c **** /**
 267:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 268:Core/Src/stm32f4xx_it.c ****   */
 269:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 270:Core/Src/stm32f4xx_it.c **** {
 430              		.loc 1 270 1
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              	.LCFI28:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 00AF     		add	r7, sp, #0
 440              	.LCFI29:
 441              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccdcqp02.s 			page 13


 271:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 272:Core/Src/stm32f4xx_it.c **** 
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 274:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 442              		.loc 1 274 3
 443 0004 0248     		ldr	r0, .L24
 444 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 275:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 276:Core/Src/stm32f4xx_it.c **** 
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 278:Core/Src/stm32f4xx_it.c **** }
 445              		.loc 1 278 1
 446 000a 00BF     		nop
 447 000c 80BD     		pop	{r7, pc}
 448              	.L25:
 449 000e 00BF     		.align	2
 450              	.L24:
 451 0010 00000000 		.word	htim6
 452              		.cfi_endproc
 453              	.LFE143:
 455              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 456              		.align	1
 457              		.global	DMA2_Stream2_IRQHandler
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu fpv4-sp-d16
 463              	DMA2_Stream2_IRQHandler:
 464              	.LFB144:
 279:Core/Src/stm32f4xx_it.c **** 
 280:Core/Src/stm32f4xx_it.c **** /**
 281:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 282:Core/Src/stm32f4xx_it.c ****   */
 283:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 284:Core/Src/stm32f4xx_it.c **** {
 465              		.loc 1 284 1
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469 0000 80B5     		push	{r7, lr}
 470              	.LCFI30:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 00AF     		add	r7, sp, #0
 475              	.LCFI31:
 476              		.cfi_def_cfa_register 7
 285:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 286:Core/Src/stm32f4xx_it.c **** 
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 288:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 477              		.loc 1 288 3
 478 0004 0248     		ldr	r0, .L27
 479 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 289:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 290:Core/Src/stm32f4xx_it.c **** 
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
ARM GAS  /tmp/ccdcqp02.s 			page 14


 292:Core/Src/stm32f4xx_it.c **** }
 480              		.loc 1 292 1
 481 000a 00BF     		nop
 482 000c 80BD     		pop	{r7, pc}
 483              	.L28:
 484 000e 00BF     		.align	2
 485              	.L27:
 486 0010 00000000 		.word	hdma_usart1_rx
 487              		.cfi_endproc
 488              	.LFE144:
 490              		.section	.text.ETH_IRQHandler,"ax",%progbits
 491              		.align	1
 492              		.global	ETH_IRQHandler
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv4-sp-d16
 498              	ETH_IRQHandler:
 499              	.LFB145:
 293:Core/Src/stm32f4xx_it.c **** 
 294:Core/Src/stm32f4xx_it.c **** /**
 295:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Ethernet global interrupt.
 296:Core/Src/stm32f4xx_it.c ****   */
 297:Core/Src/stm32f4xx_it.c **** void ETH_IRQHandler(void)
 298:Core/Src/stm32f4xx_it.c **** {
 500              		.loc 1 298 1
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504 0000 80B5     		push	{r7, lr}
 505              	.LCFI32:
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 00AF     		add	r7, sp, #0
 510              	.LCFI33:
 511              		.cfi_def_cfa_register 7
 299:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ETH_IRQn 0 */
 300:Core/Src/stm32f4xx_it.c **** 
 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ETH_IRQn 0 */
 302:Core/Src/stm32f4xx_it.c ****   HAL_ETH_IRQHandler(&heth);
 512              		.loc 1 302 3
 513 0004 0248     		ldr	r0, .L30
 514 0006 FFF7FEFF 		bl	HAL_ETH_IRQHandler
 303:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ETH_IRQn 1 */
 304:Core/Src/stm32f4xx_it.c **** 
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ETH_IRQn 1 */
 306:Core/Src/stm32f4xx_it.c **** }
 515              		.loc 1 306 1
 516 000a 00BF     		nop
 517 000c 80BD     		pop	{r7, pc}
 518              	.L31:
 519 000e 00BF     		.align	2
 520              	.L30:
 521 0010 00000000 		.word	heth
 522              		.cfi_endproc
 523              	.LFE145:
ARM GAS  /tmp/ccdcqp02.s 			page 15


 525              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 526              		.align	1
 527              		.global	DMA2_Stream7_IRQHandler
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv4-sp-d16
 533              	DMA2_Stream7_IRQHandler:
 534              	.LFB146:
 307:Core/Src/stm32f4xx_it.c **** 
 308:Core/Src/stm32f4xx_it.c **** /**
 309:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 310:Core/Src/stm32f4xx_it.c ****   */
 311:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 312:Core/Src/stm32f4xx_it.c **** {
 535              		.loc 1 312 1
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI34:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 00AF     		add	r7, sp, #0
 545              	.LCFI35:
 546              		.cfi_def_cfa_register 7
 313:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 314:Core/Src/stm32f4xx_it.c **** 
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 316:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 547              		.loc 1 316 3
 548 0004 0248     		ldr	r0, .L33
 549 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 318:Core/Src/stm32f4xx_it.c **** 
 319:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 320:Core/Src/stm32f4xx_it.c **** }
 550              		.loc 1 320 1
 551 000a 00BF     		nop
 552 000c 80BD     		pop	{r7, pc}
 553              	.L34:
 554 000e 00BF     		.align	2
 555              	.L33:
 556 0010 00000000 		.word	hdma_usart1_tx
 557              		.cfi_endproc
 558              	.LFE146:
 560              		.section	.text.X4_ConnectorCallBack,"ax",%progbits
 561              		.align	1
 562              		.weak	X4_ConnectorCallBack
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	X4_ConnectorCallBack:
 569              	.LFB147:
 321:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccdcqp02.s 			page 16


 322:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 1 */
 323:Core/Src/stm32f4xx_it.c **** void __weak X4_ConnectorCallBack(uint16_t pin){
 570              		.loc 1 323 47
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575 0000 80B4     		push	{r7}
 576              	.LCFI36:
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 7, -4
 579 0002 83B0     		sub	sp, sp, #12
 580              	.LCFI37:
 581              		.cfi_def_cfa_offset 16
 582 0004 00AF     		add	r7, sp, #0
 583              	.LCFI38:
 584              		.cfi_def_cfa_register 7
 585 0006 0346     		mov	r3, r0
 586 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 324:Core/Src/stm32f4xx_it.c **** 
 325:Core/Src/stm32f4xx_it.c **** }
 587              		.loc 1 325 1
 588 000a 00BF     		nop
 589 000c 0C37     		adds	r7, r7, #12
 590              	.LCFI39:
 591              		.cfi_def_cfa_offset 4
 592 000e BD46     		mov	sp, r7
 593              	.LCFI40:
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0010 5DF8047B 		ldr	r7, [sp], #4
 597              	.LCFI41:
 598              		.cfi_restore 7
 599              		.cfi_def_cfa_offset 0
 600 0014 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE147:
 604              		.section	.text.Key_CallBack,"ax",%progbits
 605              		.align	1
 606              		.weak	Key_CallBack
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	Key_CallBack:
 613              	.LFB148:
 326:Core/Src/stm32f4xx_it.c **** 
 327:Core/Src/stm32f4xx_it.c **** void __weak Key_CallBack(uint16_t pin){
 614              		.loc 1 327 39
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 8
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619 0000 80B4     		push	{r7}
 620              	.LCFI42:
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 7, -4
ARM GAS  /tmp/ccdcqp02.s 			page 17


 623 0002 83B0     		sub	sp, sp, #12
 624              	.LCFI43:
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              	.LCFI44:
 628              		.cfi_def_cfa_register 7
 629 0006 0346     		mov	r3, r0
 630 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 328:Core/Src/stm32f4xx_it.c **** 
 329:Core/Src/stm32f4xx_it.c **** }
 631              		.loc 1 329 1
 632 000a 00BF     		nop
 633 000c 0C37     		adds	r7, r7, #12
 634              	.LCFI45:
 635              		.cfi_def_cfa_offset 4
 636 000e BD46     		mov	sp, r7
 637              	.LCFI46:
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0010 5DF8047B 		ldr	r7, [sp], #4
 641              	.LCFI47:
 642              		.cfi_restore 7
 643              		.cfi_def_cfa_offset 0
 644 0014 7047     		bx	lr
 645              		.cfi_endproc
 646              	.LFE148:
 648              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 649              		.align	1
 650              		.global	HAL_GPIO_EXTI_Callback
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	HAL_GPIO_EXTI_Callback:
 657              	.LFB149:
 330:Core/Src/stm32f4xx_it.c **** 
 331:Core/Src/stm32f4xx_it.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 658              		.loc 1 331 47
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              	.LCFI48:
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 82B0     		sub	sp, sp, #8
 668              	.LCFI49:
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              	.LCFI50:
 672              		.cfi_def_cfa_register 7
 673 0006 0346     		mov	r3, r0
 674 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 332:Core/Src/stm32f4xx_it.c **** 	X4_ConnectorCallBack(GPIO_Pin);
 675              		.loc 1 332 2
 676 000a FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccdcqp02.s 			page 18


 677 000c 1846     		mov	r0, r3
 678 000e FFF7FEFF 		bl	X4_ConnectorCallBack
 333:Core/Src/stm32f4xx_it.c **** 	Key_CallBack(GPIO_Pin);
 679              		.loc 1 333 2
 680 0012 FB88     		ldrh	r3, [r7, #6]
 681 0014 1846     		mov	r0, r3
 682 0016 FFF7FEFF 		bl	Key_CallBack
 334:Core/Src/stm32f4xx_it.c **** }
 683              		.loc 1 334 1
 684 001a 00BF     		nop
 685 001c 0837     		adds	r7, r7, #8
 686              	.LCFI51:
 687              		.cfi_def_cfa_offset 8
 688 001e BD46     		mov	sp, r7
 689              	.LCFI52:
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0020 80BD     		pop	{r7, pc}
 693              		.cfi_endproc
 694              	.LFE149:
 696              		.text
 697              	.Letext0:
 698              		.file 2 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_types.h"
 699              		.file 3 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 700              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 701              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 702              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 703              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 704              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 705              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_eth.h"
 706              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 707              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 708              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccdcqp02.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccdcqp02.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccdcqp02.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccdcqp02.s:48     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccdcqp02.s:55     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccdcqp02.s:76     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccdcqp02.s:83     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccdcqp02.s:104    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccdcqp02.s:111    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccdcqp02.s:132    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccdcqp02.s:139    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccdcqp02.s:160    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccdcqp02.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccdcqp02.s:196    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:203    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccdcqp02.s:227    .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:234    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/ccdcqp02.s:258    .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:265    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/ccdcqp02.s:289    .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:296    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/ccdcqp02.s:320    .text.EXTI4_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:327    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
     /tmp/ccdcqp02.s:351    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:358    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccdcqp02.s:381    .text.TIM1_UP_TIM10_IRQHandler:0000000000000010 $d
     /tmp/ccdcqp02.s:386    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:393    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccdcqp02.s:416    .text.USART1_IRQHandler:0000000000000010 $d
     /tmp/ccdcqp02.s:421    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:428    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccdcqp02.s:451    .text.TIM6_DAC_IRQHandler:0000000000000010 $d
     /tmp/ccdcqp02.s:456    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:463    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccdcqp02.s:486    .text.DMA2_Stream2_IRQHandler:0000000000000010 $d
     /tmp/ccdcqp02.s:491    .text.ETH_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:498    .text.ETH_IRQHandler:0000000000000000 ETH_IRQHandler
     /tmp/ccdcqp02.s:521    .text.ETH_IRQHandler:0000000000000010 $d
     /tmp/ccdcqp02.s:526    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccdcqp02.s:533    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccdcqp02.s:556    .text.DMA2_Stream7_IRQHandler:0000000000000010 $d
     /tmp/ccdcqp02.s:561    .text.X4_ConnectorCallBack:0000000000000000 $t
     /tmp/ccdcqp02.s:568    .text.X4_ConnectorCallBack:0000000000000000 X4_ConnectorCallBack
     /tmp/ccdcqp02.s:605    .text.Key_CallBack:0000000000000000 $t
     /tmp/ccdcqp02.s:612    .text.Key_CallBack:0000000000000000 Key_CallBack
     /tmp/ccdcqp02.s:649    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccdcqp02.s:656    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback

UNDEFINED SYMBOLS
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim1
HAL_UART_IRQHandler
huart1
htim6
HAL_DMA_IRQHandler
ARM GAS  /tmp/ccdcqp02.s 			page 20


hdma_usart1_rx
HAL_ETH_IRQHandler
heth
hdma_usart1_tx
