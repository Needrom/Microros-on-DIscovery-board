ARM GAS  /tmp/ccZKrjoB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FreeRTOS_POSIX_clock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.FreeRTOS_errno,"aw",%nobits
  18              		.align	2
  21              	FreeRTOS_errno:
  22 0000 00000000 		.space	4
  23              		.section	.text.clock,"ax",%progbits
  24              		.align	1
  25              		.global	clock
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	clock:
  33              	.LFB4:
  34              		.file 1 "lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c"
   1:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*
   2:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * Amazon FreeRTOS POSIX V1.1.0
   3:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  *
   5:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * the Software without restriction, including without limitation the rights to
   8:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * subject to the following conditions:
  11:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  *
  12:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * The above copyright notice and this permission notice shall be included in all
  13:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * copies or substantial portions of the Software.
  14:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  *
  15:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  *
  22:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * http://aws.amazon.com/freertos
  23:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * http://www.FreeRTOS.org
  24:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  */
  25:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  26:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /**
ARM GAS  /tmp/ccZKrjoB.s 			page 2


  27:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * @file FreeRTOS_POSIX_clock.c
  28:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * @brief Implementation of clock functions in time.h
  29:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  */
  30:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  31:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /* C standard library includes. */
  32:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** #include <stddef.h>
  33:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** #include <string.h>
  34:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  35:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /* FreeRTOS+POSIX includes. */
  36:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** #include "FreeRTOS_POSIX.h"
  37:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** #include "FreeRTOS_POSIX/errno.h"
  38:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** #include "FreeRTOS_POSIX/time.h"
  39:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** #include "FreeRTOS_POSIX/utils.h"
  40:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  41:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /* Declaration of snprintf. The header stdio.h is not included because it
  42:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****  * includes conflicting symbols on some platforms. */
  43:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** extern int snprintf( char * s,
  44:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      size_t n,
  45:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      const char * format,
  46:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      ... );
  47:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  48:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
  49:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  50:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** clock_t clock( void )
  51:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
  35              		.loc 1 51 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 80B4     		push	{r7}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 7, -4
  44 0002 00AF     		add	r7, sp, #0
  45              	.LCFI1:
  46              		.cfi_def_cfa_register 7
  52:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* This function is currently unsupported. It will always return -1. */
  53:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  54:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return ( clock_t ) -1;
  47              		.loc 1 54 12
  48 0004 4FF0FF33 		mov	r3, #-1
  55:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
  49              		.loc 1 55 1
  50 0008 1846     		mov	r0, r3
  51 000a BD46     		mov	sp, r7
  52              	.LCFI2:
  53              		.cfi_def_cfa_register 13
  54              		@ sp needed
  55 000c 5DF8047B 		ldr	r7, [sp], #4
  56              	.LCFI3:
  57              		.cfi_restore 7
  58              		.cfi_def_cfa_offset 0
  59 0010 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE4:
  63              		.section	.text.clock_getcpuclockid,"ax",%progbits
ARM GAS  /tmp/ccZKrjoB.s 			page 3


  64              		.align	1
  65              		.global	clock_getcpuclockid
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	clock_getcpuclockid:
  72              	.LFB5:
  56:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  57:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
  58:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  59:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** int clock_getcpuclockid( pid_t pid,
  60:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                          clockid_t * clock_id )
  61:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
  73              		.loc 1 61 1
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78 0000 80B4     		push	{r7}
  79              	.LCFI4:
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 83B0     		sub	sp, sp, #12
  83              	.LCFI5:
  84              		.cfi_def_cfa_offset 16
  85 0004 00AF     		add	r7, sp, #0
  86              	.LCFI6:
  87              		.cfi_def_cfa_register 7
  88 0006 7860     		str	r0, [r7, #4]
  89 0008 3960     		str	r1, [r7]
  62:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Silence warnings about unused parameters. */
  63:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) pid;
  64:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) clock_id;
  65:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  66:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* This function is currently unsupported. It will always return EPERM. */
  67:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return EPERM;
  90              		.loc 1 67 12
  91 000a 0123     		movs	r3, #1
  68:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
  92              		.loc 1 68 1
  93 000c 1846     		mov	r0, r3
  94 000e 0C37     		adds	r7, r7, #12
  95              	.LCFI7:
  96              		.cfi_def_cfa_offset 4
  97 0010 BD46     		mov	sp, r7
  98              	.LCFI8:
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0012 5DF8047B 		ldr	r7, [sp], #4
 102              	.LCFI9:
 103              		.cfi_restore 7
 104              		.cfi_def_cfa_offset 0
 105 0016 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE5:
 109              		.section	.text.clock_getres,"ax",%progbits
ARM GAS  /tmp/ccZKrjoB.s 			page 4


 110              		.align	1
 111              		.global	clock_getres
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	clock_getres:
 118              	.LFB6:
  69:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  70:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
  71:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  72:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** int clock_getres( clockid_t clock_id,
  73:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                   struct timespec * res )
  74:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
 119              		.loc 1 74 1
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 8
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 90B4     		push	{r4, r7}
 125              	.LCFI10:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 7, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              	.LCFI11:
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              	.LCFI12:
 134              		.cfi_def_cfa_register 7
 135 0006 7860     		str	r0, [r7, #4]
 136 0008 3960     		str	r1, [r7]
  75:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Silence warnings about unused parameters. */
  76:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) clock_id;
  77:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  78:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Convert FreeRTOS tick resolution as timespec. */
  79:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     if( res != NULL )
 137              		.loc 1 79 7
 138 000a 3B68     		ldr	r3, [r7]
 139 000c 002B     		cmp	r3, #0
 140 000e 09D0     		beq	.L6
  80:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
  81:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         res->tv_sec = 0;
 141              		.loc 1 81 21
 142 0010 3A68     		ldr	r2, [r7]
 143 0012 4FF00003 		mov	r3, #0
 144 0016 4FF00004 		mov	r4, #0
 145 001a C2E90034 		strd	r3, [r2]
  82:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         res->tv_nsec = NANOSECONDS_PER_TICK;
 146              		.loc 1 82 22
 147 001e 3B68     		ldr	r3, [r7]
 148 0020 034A     		ldr	r2, .L8
 149 0022 9A60     		str	r2, [r3, #8]
 150              	.L6:
  83:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
  84:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  85:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return 0;
ARM GAS  /tmp/ccZKrjoB.s 			page 5


 151              		.loc 1 85 12
 152 0024 0023     		movs	r3, #0
  86:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
 153              		.loc 1 86 1
 154 0026 1846     		mov	r0, r3
 155 0028 0837     		adds	r7, r7, #8
 156              	.LCFI13:
 157              		.cfi_def_cfa_offset 8
 158 002a BD46     		mov	sp, r7
 159              	.LCFI14:
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 002c 90BC     		pop	{r4, r7}
 163              	.LCFI15:
 164              		.cfi_restore 7
 165              		.cfi_restore 4
 166              		.cfi_def_cfa_offset 0
 167 002e 7047     		bx	lr
 168              	.L9:
 169              		.align	2
 170              	.L8:
 171 0030 40420F00 		.word	1000000
 172              		.cfi_endproc
 173              	.LFE6:
 175              		.section	.text.clock_gettime,"ax",%progbits
 176              		.align	1
 177              		.global	clock_gettime
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	clock_gettime:
 184              	.LFB7:
  87:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  88:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
  89:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  90:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** int clock_gettime( clockid_t clock_id,
  91:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                    struct timespec * tp )
  92:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
 185              		.loc 1 92 1
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 24
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 190              	.LCFI16:
 191              		.cfi_def_cfa_offset 28
 192              		.cfi_offset 4, -28
 193              		.cfi_offset 5, -24
 194              		.cfi_offset 6, -20
 195              		.cfi_offset 7, -16
 196              		.cfi_offset 8, -12
 197              		.cfi_offset 9, -8
 198              		.cfi_offset 14, -4
 199 0004 87B0     		sub	sp, sp, #28
 200              	.LCFI17:
 201              		.cfi_def_cfa_offset 56
 202 0006 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccZKrjoB.s 			page 6


 203              	.LCFI18:
 204              		.cfi_def_cfa_register 7
 205 0008 7860     		str	r0, [r7, #4]
 206 000a 3960     		str	r1, [r7]
  93:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     TimeOut_t xCurrentTime = { 0 };
 207              		.loc 1 93 15
 208 000c 07F10803 		add	r3, r7, #8
 209 0010 0022     		movs	r2, #0
 210 0012 1A60     		str	r2, [r3]
 211 0014 5A60     		str	r2, [r3, #4]
  94:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
  95:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Intermediate variable used to convert TimeOut_t to struct timespec.
  96:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****      * Also used to detect overflow issues. It must be unsigned because the
  97:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****      * behavior of signed integer overflow is undefined. */
  98:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     uint64_t ullTickCount = 0ULL;
 212              		.loc 1 98 14
 213 0016 4FF00003 		mov	r3, #0
 214 001a 4FF00004 		mov	r4, #0
 215 001e C7E90434 		strd	r3, [r7, #16]
  99:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 100:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Silence warnings about unused parameters. */
 101:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) clock_id;
 102:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 103:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Get the current tick count and overflow count. vTaskSetTimeOutState()
 104:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****      * is used to get these values because they are both static in tasks.c. */
 105:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     vTaskSetTimeOutState( &xCurrentTime );
 216              		.loc 1 105 5
 217 0022 07F10803 		add	r3, r7, #8
 218 0026 1846     		mov	r0, r3
 219 0028 FFF7FEFF 		bl	vTaskSetTimeOutState
 106:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 107:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Adjust the tick count for the number of times a TickType_t has overflowed.
 108:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****      * portMAX_DELAY should be the maximum value of a TickType_t. */
 109:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ullTickCount = ( uint64_t ) ( xCurrentTime.xOverflowCount ) << ( sizeof( TickType_t ) * 8 );
 220              		.loc 1 109 47
 221 002c BB68     		ldr	r3, [r7, #8]
 222              		.loc 1 109 20
 223 002e 1946     		mov	r1, r3
 224 0030 4FEAE172 		asr	r2, r1, #31
 225              		.loc 1 109 18
 226 0034 4FF00003 		mov	r3, #0
 227 0038 4FF00004 		mov	r4, #0
 228 003c 0C00     		movs	r4, r1
 229 003e 0023     		movs	r3, #0
 230 0040 C7E90434 		strd	r3, [r7, #16]
 110:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 111:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Add the current tick count. */
 112:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ullTickCount += xCurrentTime.xTimeOnEntering;
 231              		.loc 1 112 33
 232 0044 FB68     		ldr	r3, [r7, #12]
 233 0046 4FF00004 		mov	r4, #0
 234              		.loc 1 112 18
 235 004a D7E90412 		ldrd	r1, [r7, #16]
 236 004e CD18     		adds	r5, r1, r3
 237 0050 42EB0406 		adc	r6, r2, r4
 238 0054 C7E90456 		strd	r5, [r7, #16]
 113:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
ARM GAS  /tmp/ccZKrjoB.s 			page 7


 114:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Convert ullTickCount to timespec. */
 115:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     UTILS_NanosecondsToTimespec( ( int64_t ) ullTickCount * NANOSECONDS_PER_TICK, tp );
 239              		.loc 1 115 34
 240 0058 D7E90456 		ldrd	r5, [r7, #16]
 241              		.loc 1 115 5
 242 005c 2B46     		mov	r3, r5
 243 005e 3446     		mov	r4, r6
 244 0060 4FF00001 		mov	r1, #0
 245 0064 4FF00002 		mov	r2, #0
 246 0068 6201     		lsls	r2, r4, #5
 247 006a 42EAD362 		orr	r2, r2, r3, lsr #27
 248 006e 5901     		lsls	r1, r3, #5
 249 0070 0B46     		mov	r3, r1
 250 0072 1446     		mov	r4, r2
 251 0074 5B1B     		subs	r3, r3, r5
 252 0076 64EB0604 		sbc	r4, r4, r6
 253 007a 4FF00001 		mov	r1, #0
 254 007e 4FF00002 		mov	r2, #0
 255 0082 6202     		lsls	r2, r4, #9
 256 0084 42EAD352 		orr	r2, r2, r3, lsr #23
 257 0088 5902     		lsls	r1, r3, #9
 258 008a 0B46     		mov	r3, r1
 259 008c 1446     		mov	r4, r2
 260 008e 5B19     		adds	r3, r3, r5
 261 0090 46EB0404 		adc	r4, r6, r4
 262 0094 4FF00001 		mov	r1, #0
 263 0098 4FF00002 		mov	r2, #0
 264 009c A201     		lsls	r2, r4, #6
 265 009e 42EA9362 		orr	r2, r2, r3, lsr #26
 266 00a2 9901     		lsls	r1, r3, #6
 267 00a4 C91A     		subs	r1, r1, r3
 268 00a6 62EB0402 		sbc	r2, r2, r4
 269 00aa 11EB0508 		adds	r8, r1, r5
 270 00ae 42EB0609 		adc	r9, r2, r6
 271 00b2 3A68     		ldr	r2, [r7]
 272 00b4 4046     		mov	r0, r8
 273 00b6 4946     		mov	r1, r9
 274 00b8 FFF7FEFF 		bl	UTILS_NanosecondsToTimespec
 116:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 117:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return 0;
 275              		.loc 1 117 12
 276 00bc 0023     		movs	r3, #0
 118:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
 277              		.loc 1 118 1
 278 00be 1846     		mov	r0, r3
 279 00c0 1C37     		adds	r7, r7, #28
 280              	.LCFI19:
 281              		.cfi_def_cfa_offset 28
 282 00c2 BD46     		mov	sp, r7
 283              	.LCFI20:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 00c4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 287              		.cfi_endproc
 288              	.LFE7:
 290              		.section	.text.clock_nanosleep,"ax",%progbits
 291              		.align	1
ARM GAS  /tmp/ccZKrjoB.s 			page 8


 292              		.global	clock_nanosleep
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	clock_nanosleep:
 299              	.LFB8:
 119:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 120:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
 121:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 122:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** int clock_nanosleep( clockid_t clock_id,
 123:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      int flags,
 124:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      const struct timespec * rqtp,
 125:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      struct timespec * rmtp )
 126:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
 300              		.loc 1 126 1
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 48
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI21:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 8CB0     		sub	sp, sp, #48
 310              	.LCFI22:
 311              		.cfi_def_cfa_offset 56
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI23:
 314              		.cfi_def_cfa_register 7
 315 0006 F860     		str	r0, [r7, #12]
 316 0008 B960     		str	r1, [r7, #8]
 317 000a 7A60     		str	r2, [r7, #4]
 318 000c 3B60     		str	r3, [r7]
 127:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     int iStatus = 0;
 319              		.loc 1 127 9
 320 000e 0023     		movs	r3, #0
 321 0010 FB62     		str	r3, [r7, #44]
 128:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     TickType_t xSleepTime = 0;
 322              		.loc 1 128 16
 323 0012 0023     		movs	r3, #0
 324 0014 BB62     		str	r3, [r7, #40]
 129:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     struct timespec xCurrentTime = { 0 };
 325              		.loc 1 129 21
 326 0016 07F11803 		add	r3, r7, #24
 327 001a 0022     		movs	r2, #0
 328 001c 1A60     		str	r2, [r3]
 329 001e 5A60     		str	r2, [r3, #4]
 330 0020 9A60     		str	r2, [r3, #8]
 331 0022 DA60     		str	r2, [r3, #12]
 130:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 131:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Silence warnings about unused parameters. */
 132:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) clock_id;
 133:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) rmtp;
 134:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) flags; /* This is only ignored if INCLUDE_vTaskDelayUntil is 0. */
 135:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 136:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Check rqtp. */
ARM GAS  /tmp/ccZKrjoB.s 			page 9


 137:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     if( UTILS_ValidateTimespec( rqtp ) == false )
 332              		.loc 1 137 9
 333 0024 7868     		ldr	r0, [r7, #4]
 334 0026 FFF7FEFF 		bl	UTILS_ValidateTimespec
 335 002a 0346     		mov	r3, r0
 336              		.loc 1 137 40
 337 002c 83F00103 		eor	r3, r3, #1
 338 0030 DBB2     		uxtb	r3, r3
 339              		.loc 1 137 7
 340 0032 002B     		cmp	r3, #0
 341 0034 01D0     		beq	.L13
 138:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
 139:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         iStatus = EINVAL;
 342              		.loc 1 139 17
 343 0036 1623     		movs	r3, #22
 344 0038 FB62     		str	r3, [r7, #44]
 345              	.L13:
 140:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
 141:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 142:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Get current time */
 143:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     if( ( iStatus == 0 ) && ( clock_gettime( CLOCK_REALTIME, &xCurrentTime ) != 0 ) )
 346              		.loc 1 143 7
 347 003a FB6A     		ldr	r3, [r7, #44]
 348 003c 002B     		cmp	r3, #0
 349 003e 0AD1     		bne	.L14
 350              		.loc 1 143 31 discriminator 1
 351 0040 07F11803 		add	r3, r7, #24
 352 0044 1946     		mov	r1, r3
 353 0046 0020     		movs	r0, #0
 354 0048 FFF7FEFF 		bl	clock_gettime
 355 004c 0346     		mov	r3, r0
 356              		.loc 1 143 26 discriminator 1
 357 004e 002B     		cmp	r3, #0
 358 0050 01D0     		beq	.L14
 144:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
 145:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         iStatus = EINVAL;
 359              		.loc 1 145 17
 360 0052 1623     		movs	r3, #22
 361 0054 FB62     		str	r3, [r7, #44]
 362              	.L14:
 146:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
 147:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 148:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     if( iStatus == 0 )
 363              		.loc 1 148 7
 364 0056 FB6A     		ldr	r3, [r7, #44]
 365 0058 002B     		cmp	r3, #0
 366 005a 36D1     		bne	.L15
 149:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
 150:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         /* Check for absolute time sleep. */
 151:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         if( ( flags & TIMER_ABSTIME ) == TIMER_ABSTIME )
 367              		.loc 1 151 21
 368 005c BB68     		ldr	r3, [r7, #8]
 369 005e 03F00103 		and	r3, r3, #1
 370              		.loc 1 151 11
 371 0062 002B     		cmp	r3, #0
 372 0064 24D0     		beq	.L16
 152:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         {
ARM GAS  /tmp/ccZKrjoB.s 			page 10


 153:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             /* Get current time */
 154:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             if( clock_gettime( CLOCK_REALTIME, &xCurrentTime ) != 0 )
 373              		.loc 1 154 17
 374 0066 07F11803 		add	r3, r7, #24
 375 006a 1946     		mov	r1, r3
 376 006c 0020     		movs	r0, #0
 377 006e FFF7FEFF 		bl	clock_gettime
 378 0072 0346     		mov	r3, r0
 379              		.loc 1 154 15
 380 0074 002B     		cmp	r3, #0
 381 0076 01D0     		beq	.L17
 155:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             {
 156:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                 iStatus = EINVAL;
 382              		.loc 1 156 25
 383 0078 1623     		movs	r3, #22
 384 007a FB62     		str	r3, [r7, #44]
 385              	.L17:
 157:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             }
 158:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 159:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             /* Get number of ticks until absolute time. */
 160:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             if( ( iStatus == 0 ) && ( UTILS_AbsoluteTimespecToDeltaTicks( rqtp, &xCurrentTime, &xSl
 386              		.loc 1 160 15
 387 007c FB6A     		ldr	r3, [r7, #44]
 388 007e 002B     		cmp	r3, #0
 389 0080 23D1     		bne	.L15
 390              		.loc 1 160 39 discriminator 1
 391 0082 07F12802 		add	r2, r7, #40
 392 0086 07F11803 		add	r3, r7, #24
 393 008a 1946     		mov	r1, r3
 394 008c 7868     		ldr	r0, [r7, #4]
 395 008e FFF7FEFF 		bl	UTILS_AbsoluteTimespecToDeltaTicks
 396 0092 0346     		mov	r3, r0
 397              		.loc 1 160 34 discriminator 1
 398 0094 002B     		cmp	r3, #0
 399 0096 18D1     		bne	.L15
 400              	.LBB2:
 161:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             {
 162:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                 /* Delay until absolute time if vTaskDelayUntil is available. */
 163:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                 #if ( INCLUDE_vTaskDelayUntil == 1 )
 164:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 165:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                     /* Get the current tick count. This variable isn't declared
 166:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      * at the top of the function because it's only used and needed
 167:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      * if vTaskDelayUntil is available. */
 168:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                     TickType_t xCurrentTicks = xTaskGetTickCount();
 401              		.loc 1 168 48
 402 0098 FFF7FEFF 		bl	xTaskGetTickCount
 403 009c 0346     		mov	r3, r0
 404              		.loc 1 168 32
 405 009e 7B61     		str	r3, [r7, #20]
 169:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 170:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                     /* Delay until absolute time. */
 171:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                     vTaskDelayUntil( &xCurrentTicks, xSleepTime );
 406              		.loc 1 171 21
 407 00a0 BA6A     		ldr	r2, [r7, #40]
 408 00a2 07F11403 		add	r3, r7, #20
 409 00a6 1146     		mov	r1, r2
 410 00a8 1846     		mov	r0, r3
ARM GAS  /tmp/ccZKrjoB.s 			page 11


 411 00aa FFF7FEFF 		bl	vTaskDelayUntil
 412 00ae 0CE0     		b	.L15
 413              	.L16:
 414              	.LBE2:
 172:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                 #else
 173:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 174:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                     /* If vTaskDelayUntil isn't available, ignore the TIMER_ABSTIME flag
 175:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                      * and sleep for a relative time. */
 176:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                     vTaskDelay( xSleepTime );
 177:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                 #endif
 178:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             }
 179:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         }
 180:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         else
 181:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         {
 182:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             /* If TIMER_ABSTIME isn't specified, convert rqtp to ticks and
 183:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****              * sleep for a relative time. */
 184:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             if( UTILS_TimespecToTicks( rqtp, &xSleepTime ) == 0 )
 415              		.loc 1 184 17
 416 00b0 07F12803 		add	r3, r7, #40
 417 00b4 1946     		mov	r1, r3
 418 00b6 7868     		ldr	r0, [r7, #4]
 419 00b8 FFF7FEFF 		bl	UTILS_TimespecToTicks
 420 00bc 0346     		mov	r3, r0
 421              		.loc 1 184 15
 422 00be 002B     		cmp	r3, #0
 423 00c0 03D1     		bne	.L15
 185:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             {
 186:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                 vTaskDelay( xSleepTime );
 424              		.loc 1 186 17
 425 00c2 BB6A     		ldr	r3, [r7, #40]
 426 00c4 1846     		mov	r0, r3
 427 00c6 FFF7FEFF 		bl	vTaskDelay
 428              	.L15:
 187:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             }
 188:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         }
 189:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
 190:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 191:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return iStatus;
 429              		.loc 1 191 12
 430 00ca FB6A     		ldr	r3, [r7, #44]
 192:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
 431              		.loc 1 192 1
 432 00cc 1846     		mov	r0, r3
 433 00ce 3037     		adds	r7, r7, #48
 434              	.LCFI24:
 435              		.cfi_def_cfa_offset 8
 436 00d0 BD46     		mov	sp, r7
 437              	.LCFI25:
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 00d2 80BD     		pop	{r7, pc}
 441              		.cfi_endproc
 442              	.LFE8:
 444              		.section	.text.clock_settime,"ax",%progbits
 445              		.align	1
 446              		.global	clock_settime
 447              		.syntax unified
ARM GAS  /tmp/ccZKrjoB.s 			page 12


 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	clock_settime:
 453              	.LFB9:
 193:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 194:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
 195:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 196:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** int clock_settime( clockid_t clock_id,
 197:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                    const struct timespec * tp )
 198:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
 454              		.loc 1 198 1
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              	.LCFI26:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 83B0     		sub	sp, sp, #12
 464              	.LCFI27:
 465              		.cfi_def_cfa_offset 16
 466 0004 00AF     		add	r7, sp, #0
 467              	.LCFI28:
 468              		.cfi_def_cfa_register 7
 469 0006 7860     		str	r0, [r7, #4]
 470 0008 3960     		str	r1, [r7]
 199:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Silence warnings about unused parameters. */
 200:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) clock_id;
 201:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) tp;
 202:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 203:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* This function is currently unsupported. It will always return -1 and
 204:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****      * set errno to EPERM. */
 205:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     errno = EPERM;
 471              		.loc 1 205 11
 472 000a 054B     		ldr	r3, .L22
 473 000c 0122     		movs	r2, #1
 474 000e 1A60     		str	r2, [r3]
 206:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 207:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return -1;
 475              		.loc 1 207 12
 476 0010 4FF0FF33 		mov	r3, #-1
 208:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
 477              		.loc 1 208 1
 478 0014 1846     		mov	r0, r3
 479 0016 0C37     		adds	r7, r7, #12
 480              	.LCFI29:
 481              		.cfi_def_cfa_offset 4
 482 0018 BD46     		mov	sp, r7
 483              	.LCFI30:
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 001a 5DF8047B 		ldr	r7, [sp], #4
 487              	.LCFI31:
 488              		.cfi_restore 7
 489              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccZKrjoB.s 			page 13


 490 001e 7047     		bx	lr
 491              	.L23:
 492              		.align	2
 493              	.L22:
 494 0020 00000000 		.word	FreeRTOS_errno
 495              		.cfi_endproc
 496              	.LFE9:
 498              		.section	.text.nanosleep,"ax",%progbits
 499              		.align	1
 500              		.global	nanosleep
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv4-sp-d16
 506              	nanosleep:
 507              	.LFB10:
 209:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 210:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** /*-----------------------------------------------------------*/
 211:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 212:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** int nanosleep( const struct timespec * rqtp,
 213:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****                struct timespec * rmtp )
 214:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
 508              		.loc 1 214 1
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 16
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
 513              	.LCFI32:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 84B0     		sub	sp, sp, #16
 518              	.LCFI33:
 519              		.cfi_def_cfa_offset 24
 520 0004 00AF     		add	r7, sp, #0
 521              	.LCFI34:
 522              		.cfi_def_cfa_register 7
 523 0006 7860     		str	r0, [r7, #4]
 524 0008 3960     		str	r1, [r7]
 215:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     int iStatus = 0;
 525              		.loc 1 215 9
 526 000a 0023     		movs	r3, #0
 527 000c FB60     		str	r3, [r7, #12]
 216:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     TickType_t xSleepTime = 0;
 528              		.loc 1 216 16
 529 000e 0023     		movs	r3, #0
 530 0010 BB60     		str	r3, [r7, #8]
 217:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 218:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Silence warnings about unused parameters. */
 219:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     ( void ) rmtp;
 220:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 221:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     /* Check rqtp. */
 222:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     if( UTILS_ValidateTimespec( rqtp ) == false )
 531              		.loc 1 222 9
 532 0012 7868     		ldr	r0, [r7, #4]
 533 0014 FFF7FEFF 		bl	UTILS_ValidateTimespec
 534 0018 0346     		mov	r3, r0
ARM GAS  /tmp/ccZKrjoB.s 			page 14


 535              		.loc 1 222 40
 536 001a 83F00103 		eor	r3, r3, #1
 537 001e DBB2     		uxtb	r3, r3
 538              		.loc 1 222 7
 539 0020 002B     		cmp	r3, #0
 540 0022 05D0     		beq	.L25
 223:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
 224:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         errno = EINVAL;
 541              		.loc 1 224 15
 542 0024 0D4B     		ldr	r3, .L28
 543 0026 1622     		movs	r2, #22
 544 0028 1A60     		str	r2, [r3]
 225:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         iStatus = -1;
 545              		.loc 1 225 17
 546 002a 4FF0FF33 		mov	r3, #-1
 547 002e FB60     		str	r3, [r7, #12]
 548              	.L25:
 226:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
 227:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 228:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     if( iStatus == 0 )
 549              		.loc 1 228 7
 550 0030 FB68     		ldr	r3, [r7, #12]
 551 0032 002B     		cmp	r3, #0
 552 0034 0CD1     		bne	.L26
 229:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
 230:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         /* Convert rqtp to ticks and delay. */
 231:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         if( UTILS_TimespecToTicks( rqtp, &xSleepTime ) == 0 )
 553              		.loc 1 231 13
 554 0036 07F10803 		add	r3, r7, #8
 555 003a 1946     		mov	r1, r3
 556 003c 7868     		ldr	r0, [r7, #4]
 557 003e FFF7FEFF 		bl	UTILS_TimespecToTicks
 558 0042 0346     		mov	r3, r0
 559              		.loc 1 231 11
 560 0044 002B     		cmp	r3, #0
 561 0046 03D1     		bne	.L26
 232:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         {
 233:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****             vTaskDelay( xSleepTime );
 562              		.loc 1 233 13
 563 0048 BB68     		ldr	r3, [r7, #8]
 564 004a 1846     		mov	r0, r3
 565 004c FFF7FEFF 		bl	vTaskDelay
 566              	.L26:
 234:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         }
 235:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
 236:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 237:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     return iStatus;
 567              		.loc 1 237 12
 568 0050 FB68     		ldr	r3, [r7, #12]
 238:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
 569              		.loc 1 238 1
 570 0052 1846     		mov	r0, r3
 571 0054 1037     		adds	r7, r7, #16
 572              	.LCFI35:
 573              		.cfi_def_cfa_offset 8
 574 0056 BD46     		mov	sp, r7
 575              	.LCFI36:
ARM GAS  /tmp/ccZKrjoB.s 			page 15


 576              		.cfi_def_cfa_register 13
 577              		@ sp needed
 578 0058 80BD     		pop	{r7, pc}
 579              	.L29:
 580 005a 00BF     		.align	2
 581              	.L28:
 582 005c 00000000 		.word	FreeRTOS_errno
 583              		.cfi_endproc
 584              	.LFE10:
 586              		.section	.text.time,"ax",%progbits
 587              		.align	1
 588              		.global	time
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	time:
 595              	.LFB11:
 239:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 240:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 241:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** // TODO(Pablo GS): Where is the place for this function of libc?
 242:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 243:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** time_t time(time_t *tloc)
 244:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** {
 596              		.loc 1 244 1
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 32
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 90B5     		push	{r4, r7, lr}
 601              	.LCFI37:
 602              		.cfi_def_cfa_offset 12
 603              		.cfi_offset 4, -12
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 89B0     		sub	sp, sp, #36
 607              	.LCFI38:
 608              		.cfi_def_cfa_offset 48
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI39:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 245:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****   struct timespec ts;
 246:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****   int ret;
 247:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 248:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****   /* Get the current time from the system */
 249:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 250:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****   ret = clock_gettime(CLOCK_REALTIME, &ts);
 613              		.loc 1 250 9
 614 0008 07F10803 		add	r3, r7, #8
 615 000c 1946     		mov	r1, r3
 616 000e 0020     		movs	r0, #0
 617 0010 FFF7FEFF 		bl	clock_gettime
 618 0014 F861     		str	r0, [r7, #28]
 251:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****   if (ret == 0)
 619              		.loc 1 251 6
 620 0016 FB69     		ldr	r3, [r7, #28]
 621 0018 002B     		cmp	r3, #0
ARM GAS  /tmp/ccZKrjoB.s 			page 16


 622 001a 0AD1     		bne	.L31
 252:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     {
 253:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****       /* Return the seconds since the epoch */
 254:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 255:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****       if (tloc)
 623              		.loc 1 255 10
 624 001c 7B68     		ldr	r3, [r7, #4]
 625 001e 002B     		cmp	r3, #0
 626 0020 04D0     		beq	.L32
 256:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         {
 257:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****           *tloc = ts.tv_sec;
 627              		.loc 1 257 21
 628 0022 D7E90234 		ldrd	r3, [r7, #8]
 629              		.loc 1 257 17
 630 0026 7A68     		ldr	r2, [r7, #4]
 631 0028 C2E90034 		strd	r3, [r2]
 632              	.L32:
 258:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****         }
 259:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 260:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****       return ts.tv_sec;
 633              		.loc 1 260 16
 634 002c D7E90234 		ldrd	r3, [r7, #8]
 635 0030 03E0     		b	.L34
 636              	.L31:
 261:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****     }
 262:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** 
 263:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c ****   return (time_t)0;
 637              		.loc 1 263 10
 638 0032 4FF00003 		mov	r3, #0
 639 0036 4FF00004 		mov	r4, #0
 640              	.L34:
 264:lib/FreeRTOS-Plus-POSIX/source/FreeRTOS_POSIX_clock.c **** }
 641              		.loc 1 264 1 discriminator 1
 642 003a 1846     		mov	r0, r3
 643 003c 2146     		mov	r1, r4
 644 003e 2437     		adds	r7, r7, #36
 645              	.LCFI40:
 646              		.cfi_def_cfa_offset 12
 647 0040 BD46     		mov	sp, r7
 648              	.LCFI41:
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 0042 90BD     		pop	{r4, r7, pc}
 652              		.cfi_endproc
 653              	.LFE11:
 655              		.text
 656              	.Letext0:
 657              		.file 2 "/home/mego/microros_ws/firmware/toolchain/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 658              		.file 3 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_types.h"
 659              		.file 4 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_types.h"
 660              		.file 5 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/reent.h"
 661              		.file 6 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/lock.h"
 662              		.file 7 "/home/mego/microros_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 663              		.file 8 "Core/Inc/FreeRTOSConfig.h"
 664              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 665              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 666              		.file 11 "lib/include/FreeRTOS_POSIX/sys/types.h"
ARM GAS  /tmp/ccZKrjoB.s 			page 17


 667              		.file 12 "lib/include/FreeRTOS_POSIX/time.h"
 668              		.file 13 "lib/include/FreeRTOS_POSIX/errno.h"
ARM GAS  /tmp/ccZKrjoB.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FreeRTOS_POSIX_clock.c
     /tmp/ccZKrjoB.s:18     .bss.FreeRTOS_errno:0000000000000000 $d
     /tmp/ccZKrjoB.s:21     .bss.FreeRTOS_errno:0000000000000000 FreeRTOS_errno
     /tmp/ccZKrjoB.s:24     .text.clock:0000000000000000 $t
     /tmp/ccZKrjoB.s:32     .text.clock:0000000000000000 clock
     /tmp/ccZKrjoB.s:64     .text.clock_getcpuclockid:0000000000000000 $t
     /tmp/ccZKrjoB.s:71     .text.clock_getcpuclockid:0000000000000000 clock_getcpuclockid
     /tmp/ccZKrjoB.s:110    .text.clock_getres:0000000000000000 $t
     /tmp/ccZKrjoB.s:117    .text.clock_getres:0000000000000000 clock_getres
     /tmp/ccZKrjoB.s:171    .text.clock_getres:0000000000000030 $d
     /tmp/ccZKrjoB.s:176    .text.clock_gettime:0000000000000000 $t
     /tmp/ccZKrjoB.s:183    .text.clock_gettime:0000000000000000 clock_gettime
     /tmp/ccZKrjoB.s:291    .text.clock_nanosleep:0000000000000000 $t
     /tmp/ccZKrjoB.s:298    .text.clock_nanosleep:0000000000000000 clock_nanosleep
     /tmp/ccZKrjoB.s:445    .text.clock_settime:0000000000000000 $t
     /tmp/ccZKrjoB.s:452    .text.clock_settime:0000000000000000 clock_settime
     /tmp/ccZKrjoB.s:494    .text.clock_settime:0000000000000020 $d
     /tmp/ccZKrjoB.s:499    .text.nanosleep:0000000000000000 $t
     /tmp/ccZKrjoB.s:506    .text.nanosleep:0000000000000000 nanosleep
     /tmp/ccZKrjoB.s:582    .text.nanosleep:000000000000005c $d
     /tmp/ccZKrjoB.s:587    .text.time:0000000000000000 $t
     /tmp/ccZKrjoB.s:594    .text.time:0000000000000000 time

UNDEFINED SYMBOLS
vTaskSetTimeOutState
UTILS_NanosecondsToTimespec
UTILS_ValidateTimespec
UTILS_AbsoluteTimespecToDeltaTicks
xTaskGetTickCount
vTaskDelayUntil
UTILS_TimespecToTicks
vTaskDelay
